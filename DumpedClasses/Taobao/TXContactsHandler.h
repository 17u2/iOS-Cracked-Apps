//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class CNContactStore, NSArray, NSDictionary, NSLock, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSOperationQueue, NSPredicate;

@interface TXContactsHandler : NSObject
{
    void *_addressBookRef;
    CNContactStore *_contactStore;
    NSDictionary *_contactsDictionry;
    NSArray *_allPhoneList;
    NSMutableDictionary *_contactsCache;
    NSLock *_cacheLock;
    NSPredicate *_phoneNumPredicate;
    long long _status;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSOperationQueue *_matchOperationQueue;
}

@property(retain, nonatomic) NSOperationQueue *matchOperationQueue; // @synthesize matchOperationQueue=_matchOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(retain, nonatomic) NSPredicate *phoneNumPredicate; // @synthesize phoneNumPredicate=_phoneNumPredicate;
@property(retain, nonatomic) NSLock *cacheLock; // @synthesize cacheLock=_cacheLock;
@property(retain, nonatomic) NSMutableDictionary *contactsCache; // @synthesize contactsCache=_contactsCache;
@property(retain, nonatomic) NSArray *allPhoneList; // @synthesize allPhoneList=_allPhoneList;
@property(retain, nonatomic) NSDictionary *contactsDictionry; // @synthesize contactsDictionry=_contactsDictionry;
@property(retain, nonatomic) CNContactStore *contactStore; // @synthesize contactStore=_contactStore;
@property(nonatomic) void *addressBookRef; // @synthesize addressBookRef=_addressBookRef;
- (void).cxx_destruct;
- (void)onContactChange:(id)arg1;
- (BOOL)differentCout:(id)arg1 compareWith:(id)arg2;
- (void)asynScanContacts;
- (id)handleOriginalPhoneNum:(id)arg1;
- (_Bool)isLessThan9_0;
- (_Bool)isGreaterThanOrEqualTo6_0;
- (id)matchSubString:(id)arg1 maxCount:(long long)arg2 fromArray:(id)arg3;
- (void)setCache:(id)arg1 forKey:(id)arg2;
- (id)getCache:(id)arg1;
- (void)matchPrefix:(id)arg1 maxCount:(long long)arg2 result:(CDUnknownBlockType)arg3;
- (void)matchPhoneNum:(id)arg1 contactMatchCallback:(CDUnknownBlockType)arg2;
- (void)fetchContactsList;
- (id)contactNameForPhoneNum:(id)arg1;
- (void)dealloc;

@end

