//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CLLocationManagerDelegate.h"

@class CLLocationManager, GeofenceDispatch, GeofenceStore, NSString;

@interface Geofence : NSObject <CLLocationManagerDelegate>
{
    _Bool _didShow;
    CLLocationManager *_locationManager;
    GeofenceStore *_store;
    GeofenceDispatch *_dispatch;
}

+ (void)appDidLaunch;
+ (void)start;
+ (_Bool)enable;
+ (double)locationTimeAccuracy;
+ (double)locationDistanceAccuracy;
+ (_Bool)locationServiceStateAvailable;
+ (id)sharedInstance;
@property(nonatomic) _Bool didShow; // @synthesize didShow=_didShow;
@property(retain, nonatomic) GeofenceDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property(retain, nonatomic) GeofenceStore *store; // @synthesize store=_store;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)dispatch:(id)arg1 forEventWithType:(unsigned long long)arg2;
- (void)triggerEvent:(unsigned long long)arg1 forRegion:(id)arg2;
- (void)requestCurrentState:(id)arg1;
- (void)stopRegionMonitoring;
- (void)startBeaconGeofenceMonitoring:(id)arg1;
- (void)startCircularGeofenceMonitoring:(id)arg1;
- (void)startMonitoringSignificantLocationChanges;
- (void)startUpdatingLocation;
- (void)verifyUpdateIfNeed;
- (void)observe;
- (void)appDidLaunch;
- (void)start;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

