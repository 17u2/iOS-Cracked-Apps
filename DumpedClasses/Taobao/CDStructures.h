//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class GPBMessage, NSArray, NSAttributedString, NSCharacterSet, NSData, NSOutputStream, NSString, UIColor;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ABDetectInfo {
    struct CGRect _field1;
    struct CGRect _field2;
    int _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    _Bool _field14;
    float _field15;
    float _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    char *_field26;
};

struct ABFaceDetectResult {
    int facesDetected;
    struct CGRect faceSize;
    struct CGRect position;
    float gaussianBlur;
    float brightness;
    float quality;
};

struct ACDSDataAdapter {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct ACDSSqlAdapter _field3;
    struct list<ACDSDataNode, std::__1::allocator<ACDSDataNode>> _field4;
    char *_field5;
    char *_field6;
};

struct ACDSKey;

struct ACDSSqlAdapter {
    struct ACDSSqlNode _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field8;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field9;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field10;
};

struct ACDSSqlNode {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    int _field7;
    struct vector<ACDSKey, std::__1::allocator<ACDSKey>> _field8;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
    struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>>> _field10;
    struct vector<std::__1::map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>>> _field11;
    struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>>> _field12;
    struct ACDSSqlNode *_field13;
    struct vector<ACDSSqlNode *, std::__1::allocator<ACDSSqlNode *>> _field14;
    int _field15;
    int _field16;
};

struct ARRecognition {
    unsigned char _field1[20000];
    int _field2;
    int _field3;
    char _field4[368640];
    char *_field5;
};

struct AirBorneAccsItem {
    Class _field1;
};

struct AirBorneBucketItem {
    Class _field1;
};

struct AliPerRenderPixel {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct Animation {
    double sideDelay;
    double sideDumping;
    double sideVelocity;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamPacketDescription;

struct BCSegment {
    union BCPoint _field1;
    union BCPoint _field2;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CAvEngine;

struct CCosmetic3DTryonEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CImNtfImmessage {
    basic_string_1cdf7af0 _field1;
    unsigned long long _field2;
    basic_string_1cdf7af0 *_field3;
    basic_string_1cdf7af0 _field4;
    unsigned long long _field5;
    basic_string_1cdf7af0 *_field6;
    basic_string_1cdf7af0 _field7;
    unsigned int _field8;
    unsigned char _field9;
    long long _field10;
    basic_string_1cdf7af0 _field11;
    basic_string_1cdf7af0 _field12;
    map_7e3c2a19 _field13;
    unsigned long long _field14;
    basic_string_1cdf7af0 _field15;
};

struct CImNtfOperationtip {
    basic_string_1cdf7af0 _field1;
    unsigned long long _field2;
    basic_string_1cdf7af0 *_field3;
    basic_string_1cdf7af0 _field4;
    unsigned long long _field5;
    basic_string_1cdf7af0 *_field6;
    basic_string_1cdf7af0 _field7;
    unsigned int _field8;
    unsigned char _field9;
    basic_string_1cdf7af0 _field10;
};

struct CImReqSendmulimmessage {
    basic_string_1cdf7af0 _field1;
    unsigned long long _field2;
    basic_string_1cdf7af0 *_field3;
    basic_string_1cdf7af0 _field4;
    unsigned long long _field5;
    basic_string_1cdf7af0 *_field6;
    struct VECTOR<std::basic_string<char>> _field7;
    unsigned char _field8;
    unsigned char _field9;
    long long _field10;
    basic_string_1cdf7af0 _field11;
    basic_string_1cdf7af0 _field12;
    unsigned int _field13;
    unsigned char _field14;
};

struct CImRspSendmulimmessage {
    basic_string_1cdf7af0 _field1;
    unsigned long long _field2;
    basic_string_1cdf7af0 *_field3;
    basic_string_1cdf7af0 _field4;
    unsigned long long _field5;
    basic_string_1cdf7af0 *_field6;
    long long _field7;
    unsigned char _field8;
    basic_string_1cdf7af0 _field9;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CSmartPtr<CAvEngine> {
    CDUnknownFunctionPointerType *_vptr$CSmartPtr;
    struct CAvEngine *p;
};

struct CVPlanarComponentInfo {
    int _field1;
    unsigned int _field2;
};

struct CVPlanarPixelBufferInfo_YCbCrBiPlanar {
    struct CVPlanarComponentInfo _field1;
    struct CVPlanarComponentInfo _field2;
};

struct CallInfo;

struct Callback;

struct CaptureParams;

struct CipherDatabase {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    _Bool _field4;
    int _field5;
};

struct CipherError {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
};

struct CipherStatement {
    struct sqlite3 *_field1;
    struct sqlite3_stmt *_field2;
    int _field3;
    struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field4;
};

struct CosmeticTemplateData;

struct DetailProtocolFlag {
    unsigned int refreshUI:1;
    unsigned int reloadData:1;
    unsigned int processHolder:1;
    unsigned int didDelayOrder:1;
    unsigned int refreshOperationView:1;
    unsigned int degradeH5OrderDetail:1;
    unsigned int needReload:1;
    unsigned int customCellNumberOfSections:1;
    unsigned int customCellNumberOfRowsInSection:1;
    unsigned int customCellHeight:1;
    unsigned int customCell_indexPath:1;
    unsigned int customCellDidSelected:1;
};

struct DynArray<Callback *> {
    CDUnknownFunctionPointerType *_field1;
    struct Callback **_field2;
    int _field3;
    int _field4;
};

struct DynArray<CaptureParams *> {
    CDUnknownFunctionPointerType *_field1;
    struct CaptureParams **_field2;
    int _field3;
    int _field4;
};

struct DynArray<EJTransform> {
    CDUnknownFunctionPointerType *_field1;
    struct EJTransform *_field2;
    int _field3;
    int _field4;
};

struct EJCanvasState;

struct EJGLShader;

struct EJPath {
    CDStruct_b2fbf00d _field1;
    CDStruct_b2fbf00d _field2;
    _Bool _field3;
    struct {
        struct vector<EJPoint, std::__1::allocator<EJPoint>> _field1;
        _Bool _field2;
    } _field4;
    struct vector<tSubPath, std::__1::allocator<tSubPath>> _field5;
    float _field6;
};

struct EJTexture {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct EJTransform {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct EpdParm_t;

struct Epd_t {
    int _field1;
    int _field2;
    struct EpdParm_t *_field3;
    long long _field4;
    long long _field5;
    long long _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    int _field11;
    int _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    long long _field18;
    float _field19;
    int _field20;
    int _field21[201];
    float _field22[201];
    long long _field23;
    short _field24[102912];
    int _field25;
    int _field26;
    int _field27;
    float _field28;
    int _field29;
    int _field30;
    int _field31;
    float _field32[400];
    int _field33[10];
    int _field34;
    short _field35[160000];
};

struct Event;

struct FaceBeautifyParam;

struct FaceProcessDetectResult {
    struct THIDFaceQualityScore faceQualityScore;
    int nFacenum;
    struct THIDFaceRect rect;
    long long returnVal;
};

struct FreqRecogn {
    _Bool _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    int _field19;
    unsigned long long *_field20[2];
    double _field21;
    float _field22;
    int *_field23[3];
    char *_field24;
    struct kiss_fft_state *_field25;
    struct vector<double, std::__1::allocator<double>> _field26;
    struct vector<short, std::__1::allocator<short>> _field27;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field28;
    struct vector<int, std::__1::allocator<int>> _field29;
};

struct GCanvasCore {
    _Bool _field1;
    short _field2;
    short _field3;
    struct EJTransform _field4;
    struct EJPath _field5;
    struct vector<EJCanvasState, std::__1::allocator<EJCanvasState>> _field6;
    struct EJCanvasState *_field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    struct EJGLShader *_field11;
    struct EJTexture _field12;
    unsigned int _field13;
    unsigned int _field14;
    int _field15;
    union {
        struct {
            float _field1;
            float _field2;
            float _field3;
            float _field4;
        } _field1;
        float _field2[4];
    } _field16;
    float _field17;
    int _field18;
    unsigned long long _field19;
    int _field20;
    int _field21;
    float _field22;
    float _field23;
    int _field24;
    float _field25;
    _Bool _field26;
    short _field27;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field28;
    struct DynArray<EJTransform> _field29;
    struct TextureMgr _field30;
    struct DynArray<CaptureParams *> _field31;
    struct DynArray<Callback *> _field32;
    struct GGlObjectMgr _field33;
    struct GGlObjectMgr _field34;
    struct GGlObjectMgr _field35;
    struct GGlObjectMgr _field36;
    struct GGlObjectMgr _field37;
    struct GGlObjectMgr _field38;
    struct GGlObjectMgr _field39;
    struct GGlObjectMgr _field40;
    int _field41;
    int _field42;
};

struct GGlObjectMgr {
    struct map<int, GGlObject, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GGlObject>>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct IMNetAsyncNotifyBaseService {
    CDUnknownFunctionPointerType *_field1;
};

struct IMNetAsyncNotifyService4iOS {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct ITRDEngineInterface;

struct JDYBinaryImageTextSegmentRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct JVSContents {
    void *_field1;
    unsigned long long _field2;
};

struct LVZipCDHeader {
    unsigned int magicNumber;
    unsigned short versionMadeBy;
    unsigned short versionNeededToExtract;
    unsigned short generalPurposeBitFlag;
    unsigned short compressionMethod;
    unsigned int lastModDate;
    unsigned int crc;
    unsigned short filenameLength;
    unsigned short extraFieldLength;
    unsigned short commentLength;
    unsigned short diskNumberStart;
    unsigned short internalFileAttributes;
    unsigned int externalFileAttributes;
    unsigned long long localHeaderOffset;
    unsigned long long compressedSize;
    unsigned long long uncompressedSize;
    char *filename;
    void *extraField;
    char *comment;
    void *cachedData;
};

struct LinkLiveSession {
    CDUnknownFunctionPointerType *_vptr$IHandler;
    int mID;
    CDUnknownFunctionPointerType request_server_func_;
    void *request_arg_;
    int type;
    int seq_;
    int state_;
    struct LinkLiveSessionListener *listener_;
    void *listener_arg_;
    struct Looper *looper_;
    struct Event *event_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> session_id_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> from_devid_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> to_devid_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> topic_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> called_tick_;
    struct recursive_mutex mutex_;
    long long from_id_;
    long long to_id_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> a_play_url_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> a_publish_url_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> b_publish_url_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> b_play_url_;
    int wait_seq_;
    int cur_timer_id_;
    int cur_notify_id_;
};

struct LinkLiveSessionListener;

struct Listener {
    CDUnknownFunctionPointerType *_field1;
};

struct Looper;

struct MAFIARange {
    long long _field1;
    long long _field2;
};

struct MetalConvolutionParameter {
    unsigned int size;
    int c_k_new;
    int c_i;
    int h_i;
    int w_i;
    int n_k;
    int c_k;
    int h_k;
    int w_k;
    int h_o;
    int w_o;
    int pad_x;
    int pad_y;
    int stride_x;
    int stride_y;
    int group;
};

struct MetalFullyConnectedParameter {
    int count;
    int numOutput;
    int numElementsPerBatch;
};

struct MetalPoolingParameter {
    unsigned int size;
    int c_i;
    int h_i;
    int w_i;
    int stride_h;
    int stride_w;
    int h_k;
    int w_k;
    int h_o;
    int w_o;
};

struct MetalRGBConvertParameter {
    unsigned int size;
    int c;
    int h;
    int w;
};

struct MetalReluParameter {
    int batchSize;
    int inputSize;
    float leaky;
};

struct MetalSoftMaxParameter {
    int count;
    int channels;
    int size;
};

struct MetalSummateParameter {
    unsigned int size;
    int c_k_new;
    int n_k;
    int reLU;
    float leaky;
};

struct MetalTransposeDimensions {
    int batchSize;
    int inputSize;
};

struct MirrorMatrix3x3 {
    struct MirrorVector3 _field1;
    struct MirrorVector3 _field2;
    struct MirrorVector3 _field3;
};

struct MirrorMatrix4x4 {
    struct MirrorVector4 _field1;
    struct MirrorVector4 _field2;
    struct MirrorVector4 _field3;
    struct MirrorVector4 _field4;
};

struct MirrorTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct MirrorVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct MirrorVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct MtopExtResponse {
    Class _field1;
};

struct MulticastDelegateListNode {
    id _field1;
    struct MulticastDelegateListNode *_field2;
    struct MulticastDelegateListNode *_field3;
    unsigned long long _field4;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NAL_addr_t {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    CDUnion_7059b8d6 _field5;
    CDUnion_7059b8d6 _field6;
    unsigned int _field7;
};

struct NAL_connection_count_t {
    unsigned long long _field1;
    unsigned long long _field2;
    int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
    unsigned long long _field9;
};

struct NAL_data {
    char *_field1;
    unsigned long long _field2;
    _Bool _field3;
};

struct NAL_option {
    int *_field1;
    char *_field2;
    int _field3;
};

struct NAL_request_count_t {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
};

struct NAL_request_handler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct NAL_request_meta {
    struct NAL_request_handler _field1;
    void *_field2;
};

struct NAL_request_t {
    unsigned char _field1;
    int _field2;
    struct NAL_option _field3;
    char **_field4;
    char *_field5;
    struct NAL_data _field6;
    struct NAL_request_meta _field7;
    int _field8;
};

struct NAL_session_handler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NXASDisplayNodeFlags {
    unsigned int synchronous:1;
    unsigned int layerBacked:1;
    unsigned int displaysAsynchronously:1;
    unsigned int shouldRasterizeDescendants:1;
    unsigned int shouldBypassEnsureDisplay:1;
    unsigned int displaySuspended:1;
    unsigned int shouldAnimateSizeChanges:1;
    unsigned int canClearContentsOfLayer:1;
    unsigned int canCallSetNeedsDisplayOfLayer:1;
    unsigned int implementsInstanceDrawRect:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsInstanceImageDisplay:1;
    unsigned int implementsImageDisplay:1;
    unsigned int implementsDrawParameters:1;
    unsigned int isMeasured:1;
    unsigned int isEnteringHierarchy:1;
    unsigned int isExitingHierarchy:1;
    unsigned int isInHierarchy:1;
    unsigned int isNeedsLayout:1;
    unsigned int flexLayout:1;
    unsigned int flexNode:1;
    unsigned int component:1;
    unsigned int visibilityNotificationsDisabled:4;
};

struct NXASDisplayNodeLayout;

struct NXASEnvironmentHierarchyState {
    unsigned int rasterized:1;
    unsigned int rangeManaged:1;
    unsigned int transitioningSupernodes:1;
    unsigned int layoutPending:1;
};

struct NXASEnvironmentLayoutOptionsState {
    double spacingBefore;
    double spacingAfter;
    double flexGrow;
    double flexShrink;
    CDStruct_6eaa4494 flexBasis;
    double ascender;
    double descender;
    struct NXASEnvironmentStateExtensions _extensions;
};

struct NXASEnvironmentState {
    struct NXASEnvironmentHierarchyState hierarchyState;
    struct NXASEnvironmentLayoutOptionsState layoutOptionsState;
    struct NXASEnvironmentTraitCollection environmentTraitCollection;
};

struct NXASEnvironmentStateExtensions {
    _Bool boolExtensions[1];
    long long integerExtensions[4];
    struct UIEdgeInsets edgeInsetsExtensions[1];
};

struct NXASEnvironmentTraitCollection {
    double displayScale;
    long long horizontalSizeClass;
    long long userInterfaceIdiom;
    long long verticalSizeClass;
    long long forceTouchCapability;
    struct CGSize containerSize;
};

struct NXASTextKitAttributes {
    NSAttributedString *attributedString;
    NSAttributedString *truncationAttributedString;
    NSCharacterSet *avoidTailTruncationSet;
    long long lineBreakMode;
    unsigned long long maximumNumberOfLines;
    NSArray *exclusionPaths;
    struct CGSize shadowOffset;
    UIColor *shadowColor;
    double shadowOpacity;
    double shadowRadius;
    CDUnknownFunctionPointerType layoutManagerFactory;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PlasticBeautiyParam;

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct SMsgItem {
    unsigned char _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_1cdf7af0 _field7;
    basic_string_1cdf7af0 _field8;
};

struct SNotifyPlugin {
    unsigned int _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_1cdf7af0 _field7;
    basic_string_1cdf7af0 _field8;
    basic_string_1cdf7af0 _field9;
    basic_string_1cdf7af0 _field10;
    basic_string_1cdf7af0 _field11;
    unsigned int _field12;
    unsigned int _field13;
};

struct TB3DPhotosIndexPath {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct TBDMargin {
    double top;
    double left;
    double bottom;
    double right;
};

struct TBIGPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct TBOActionContext {
    id _field1;
    id _field2;
    id _field3;
};

struct TBOCommunityTopicCellStyleInfo {
    unsigned long long _field1;
    double _field2;
    _Bool _field3;
};

struct TBundle {
    struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> _field1;
};

struct TCMKVStore {
    CDUnknownFunctionPointerType *_field1;
};

struct THIDFaceQualityScore {
    float finalQualityScore;
    float symmetryScore;
    float brightMean;
    float brightStd;
    float overExposure;
    float underExposure;
    float contrast;
    float sharpness;
    float homogeneity;
    float blur;
    char facePosition;
    char eyeClosed;
    unsigned char grayDynRange;
    char wearGlasses;
    float eyeDistance;
    float yawAngle;
    float pitchAngle;
    float frontality;
    float height;
    char faceType;
    unsigned char mouthClosed;
    char reserved[10];
    int headTop;
};

struct THIDFaceRect {
    int left;
    int top;
    int right;
    int bottom;
    float confidence;
};

struct THIDRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct TMGenieEffecSegment {
    union TMGenieEffecPoint _field1;
    union TMGenieEffecPoint _field2;
};

struct TNodeContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct TNodeELContenxt {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
};

struct TNodeMsg {
    struct UIView *_field1;
    id _field2;
    id _field3;
    id _field4;
    int _field5;
};

struct TNodeRenderContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct TRDLogEngine {
    CDUnknownFunctionPointerType *_field1;
    struct ITRDEngineInterface *_field2;
};

struct TextureMgr {
    struct map<int, TextureGroup, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TextureGroup>>> _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UITextView {
    Class _field1;
};

struct UIView {
    Class _field1;
};

struct VECTOR<std::basic_string<char>> {
    struct cow_node *_field1;
};

struct VRContext {
    union _GLKMatrix4 modelViewProjectionMatrix;
    union _GLKMatrix4 projectionMatrix;
    union _GLKMatrix4 viewMatrix;
    union _GLKMatrix4 translationMatrix;
    union _GLKMatrix4 rotationMatrix;
    union _GLKMatrix4 scaleMatrix;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WXContext;

struct WebPBitstreamFeatures {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned int _field9[2];
};

struct WebPDecBuffer {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    union {
        struct WebPRGBABuffer _field1;
        struct WebPYUVABuffer _field2;
    } _field5;
    unsigned int _field6[4];
    char *_field7;
};

struct WebPDecoderConfig {
    struct WebPBitstreamFeatures _field1;
    struct WebPDecBuffer _field2;
    struct WebPDecoderOptions _field3;
};

struct WebPDecoderOptions {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    unsigned int _field15[4];
};

struct WebPRGBABuffer {
    char *_field1;
    int _field2;
    unsigned long long _field3;
};

struct WebPYUVABuffer {
    char *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
};

struct XLPoint {
    double x;
    double y;
    double z;
};

struct XPeakVertex {
    double y;
};

struct _AccsSDKOperationTypeSF {
    long long accsSDKOperationTypeSuccess;
    long long accsSDKOperationTypeFail;
};

struct _Alloc_hider {
    char *_field1;
};

struct _FileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _LVUserDataInfo {
    char *_field1;
    void *_field2;
    int _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _field1;
    struct _Rb_tree_node_base *_field2;
    struct _Rb_tree_node_base *_field3;
    struct _Rb_tree_node_base *_field4;
};

struct _SesstionParam {
    long long _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    int _field5;
};

struct _Sp_counted_base<__gnu_cxx::_Lock_policy::_S_atomic>;

struct __CFString;

struct __hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>;

struct __imgRawData {
    char *_field1;
    int _field2;
    int _field3;
    long long _field4;
    int _field5;
    _Bool _field6;
};

struct __imgTextureInfo {
    int iTexID;
    int iWidth;
    int iHeight;
    int iFormat;
};

struct __list_node<ACDSDataNode, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct _vm_param {
    int _field1;
    union {
        _Bool _field1;
        unsigned char _field2;
        int _field3;
        long long _field4;
        float _field5;
        double _field6;
        char *_field7;
        struct _byte_data {
            char *_field1;
            int _field2;
            _Bool _field3;
        } _field8;
    } _field2;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct addrinfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    char *_field6;
    struct sockaddr *_field7;
    struct addrinfo *_field8;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct cow_node;

struct delegate {
    unsigned int numberOfTotal:1;
    unsigned int imageAtIndex:1;
    unsigned int numberOfVisiableSideviews:1;
};

struct deque<id, std::__1::allocator<id>> {
    struct __split_buffer<__strong id *, std::__1::allocator<__strong id *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<__strong id **, std::__1::allocator<__strong id *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<id>> {
        unsigned long long __first_;
    } __size_;
};

struct fb_core {
    struct fb_node *_field1;
    struct fb_node *_field2;
    struct fb_node *_field3;
    struct fb_script *_field4;
    char *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    CDStruct_183601bc *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
    CDStruct_183601bc *_field12;
    CDStruct_183601bc *_field13;
    CDStruct_183601bc *_field14;
    CDStruct_e2b8aef9 _field15;
    CDStruct_e2b8aef9 _field16;
    CDStruct_e2b8aef9 _field17;
    CDStruct_e2b8aef9 _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    CDUnknownFunctionPointerType _field22;
};

struct fb_node {
    struct css_node {
        CDStruct_c90ef27e _field1;
        struct {
            float _field1[4];
            float _field2[2];
            int _field3;
            _Bool _field4;
            float _field5[2];
            float _field6;
            float _field7[2];
            float _field8[2];
            int _field9;
        } _field2;
        int _field3;
        int _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        void *_field9;
    } _field1;
    CDStruct_e2b8aef9 _field2;
    CDStruct_e2b8aef9 _field3;
    struct {
        CDStruct_a086822f _field1;
        struct fb_script_cb **_field2;
        struct fb_script_cb *_field3;
    } _field4;
    CDStruct_183601bc *_field5;
    char *_field6;
    int _field7;
    struct fb_node *_field8;
    struct fb_node **_field9;
    int _field10;
    int _field11;
    float _field12[2];
    float _field13[2];
    int _field14;
    void *_field15;
};

struct fb_script;

struct fb_script_cb;

struct global_State;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct jvsdimensions {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct kiss_fft_state;

struct less<std::basic_string<char>>;

struct list<ACDSDataNode, std::__1::allocator<ACDSDataNode>> {
    struct __list_node_base<ACDSDataNode, void *> {
        struct __list_node<ACDSDataNode, void *> *_field1;
        struct __list_node<ACDSDataNode, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<ACDSDataNode, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct luaL_Reg {
    char *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct lua_State {
    union GCObject *_field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    struct lua_TValue *_field5;
    struct lua_TValue *_field6;
    struct global_State *_field7;
    struct CallInfo *_field8;
    unsigned int *_field9;
    struct lua_TValue *_field10;
    struct lua_TValue *_field11;
    struct CallInfo *_field12;
    struct CallInfo *_field13;
    int _field14;
    int _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned char _field18;
    unsigned char _field19;
    int _field20;
    int _field21;
    CDUnknownFunctionPointerType _field22;
    struct lua_TValue _field23;
    struct lua_TValue _field24;
    union GCObject *_field25;
    union GCObject *_field26;
    struct lua_longjmp *_field27;
    long long _field28;
};

struct lua_TValue {
    union {
        union GCObject *_field1;
        void *_field2;
        double _field3;
        int _field4;
    } _field1;
    int _field2;
};

struct lua_longjmp;

struct mach_header {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct mach_header_64 {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct map<int, GGlObject, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GGlObject>>> {
    struct __tree<std::__1::__value_type<int, GGlObject>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GGlObject>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GGlObject>>> {
        struct __tree_node<std::__1::__value_type<int, GGlObject>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GGlObject>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GGlObject>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, TextureGroup, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TextureGroup>>> {
    struct __tree<std::__1::__value_type<int, TextureGroup>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TextureGroup>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TextureGroup>>> {
        struct __tree_node<std::__1::__value_type<int, TextureGroup>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TextureGroup>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TextureGroup>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>;

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, void *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, void *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, void *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map_node_t;

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct plt_base_layer;

struct predict {
    float _field1[5];
    int _field2[5];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    float *_field8;
    struct plt_base_layer *_field9[200];
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct shared_ptr<NXASDN::Mutex> {
    struct Mutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<NXASDN::RecursiveMutex> {
    struct RecursiveMutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<NXASDisplayNodeLayout> {
    struct NXASDisplayNodeLayout *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WXContext> {
    struct WXContext *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> {
        struct _Sp_counted_base<__gnu_cxx::_Lock_policy::_S_atomic> *_M_pi;
    } _M_refcount;
};

struct sockaddr;

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sqlite3;

struct sqlite3_stmt;

struct stars_s {
    union _GLKVector3 position;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, EJFontGlyphInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, EJFontGlyphInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<int, EJFontGlyphInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, EJFontGlyphInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, EJFontGlyphInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, EJFontGlyphInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, EJFontGlyphInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, EJFontGlyphInfo>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, EJFontGlyphInfo>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct uregex;

struct vector<ACDSKey, std::__1::allocator<ACDSKey>> {
    struct ACDSKey *_field1;
    struct ACDSKey *_field2;
    struct __compressed_pair<ACDSKey *, std::__1::allocator<ACDSKey>> {
        struct ACDSKey *_field1;
    } _field3;
};

struct vector<ACDSSqlNode *, std::__1::allocator<ACDSSqlNode *>> {
    struct ACDSSqlNode **_field1;
    struct ACDSSqlNode **_field2;
    struct __compressed_pair<ACDSSqlNode **, std::__1::allocator<ACDSSqlNode *>> {
        struct ACDSSqlNode **_field1;
    } _field3;
};

struct vector<EJCanvasState, std::__1::allocator<EJCanvasState>> {
    struct EJCanvasState *_field1;
    struct EJCanvasState *_field2;
    struct __compressed_pair<EJCanvasState *, std::__1::allocator<EJCanvasState>> {
        struct EJCanvasState *_field1;
    } _field3;
};

struct vector<EJPoint, std::__1::allocator<EJPoint>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<EJPoint *, std::__1::allocator<EJPoint>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<NXASIndexPathRange, std::__1::allocator<NXASIndexPathRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<NXASIndexPathRange *, std::__1::allocator<NXASIndexPathRange>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>>;

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

struct vector<std::__1::map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>>> {
    struct map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>> *_field1;
    struct map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>> *_field2;
    struct __compressed_pair<std::__1::map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>>>> {
        struct map<std::__1::basic_string<char>, ACDSValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ACDSValue>>> *_field1;
    } _field3;
};

struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field2;
    struct __compressed_pair<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>>> {
        struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>>>> {
    struct vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>> *__begin_;
    struct vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>>>> {
        struct vector<NXASRangeTuningParameters, std::__1::allocator<NXASRangeTuningParameters>> *__first_;
    } __end_cap_;
};

struct vector<tSubPath, std::__1::allocator<tSubPath>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<tSubPath *, std::__1::allocator<tSubPath>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct wx_css_node {
    CDStruct_c90ef27e _field1;
    CDStruct_3e2127a6 _field2;
    int _field3;
    int _field4;
    struct wx_css_node *_field5;
    struct wx_css_node *_field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    CDStruct_c90ef27e _field1;
    struct {
        float _field1[4];
        float _field2[2];
        int _field3;
        _Bool _field4;
        float _field5[2];
        float _field6;
        float _field7[2];
        float _field8[2];
        int _field9;
    } _field2;
    int _field3;
    int _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    void *_field9;
} css_node_48a7eccd;

typedef struct {
    CDStruct_c90ef27e _field1;
    CDStruct_3e2127a6 _field2;
    int _field3;
    int _field4;
    struct css_node *_field5;
    struct css_node *_field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
} css_node_645095cc;

typedef struct {
    struct NAL_addr_t _field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct NAL_session_meta {
        void *_field1;
        struct NAL_session_handler _field2;
        unsigned int :1;
    } _field5;
} NAL_session_t_e4d01b93;

typedef struct {
    struct NAL_addr_t _field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct NAL_session_meta {
        void *_field1;
        struct NAL_session_handler _field2;
    } _field5;
} NAL_session_t_4c293883;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    Class _field1;
    Class _field2;
} CDStruct_21c3b639;

typedef struct {
    SEL _field1;
    int _field2;
} CDStruct_a448645f;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
} CDStruct_89ddc8e1;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    float _field1[4];
    float _field2[2];
    int _field3;
    _Bool _field4;
    float _field5[2];
    float _field6;
    float _field7;
    float _field8[2];
    float _field9[2];
    int _field10;
} CDStruct_3e2127a6;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
} CDStruct_e6af4fdc;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
} CDStruct_9b0a347d;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
} CDStruct_4e53fc95;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    double top;
    double left;
    double bottom;
    double right;
} CDStruct_3c058996;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    unsigned short _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
} CDStruct_85cb660e;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    int _field2;
    char *_field3;
} CDStruct_3553761d;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    float _field9;
    float _field10[6];
    float _field11[4];
    float _field12[6];
    float _field13[6];
    float _field14[2];
    float _field15[2];
    float _field16[2];
} CDStruct_c90ef27e;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long unit;
    double value;
} CDStruct_6eaa4494;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    int _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
} CDStruct_a90cff18;

typedef struct {
    long long section;
    long long row;
} CDStruct_fc6cb5ee;

typedef struct CDStruct_183601bc;

typedef struct {
    struct map_node_t **_field1;
    unsigned int _field2;
    unsigned int _field3;
} CDStruct_a086822f;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
} CDStruct_af61540b;

typedef struct {
    CDStruct_bd2f613f _field1;
    CDStruct_bd2f613f _field2;
} CDStruct_2c0d991e;

typedef struct {
    CDStruct_6eaa4494 width;
    CDStruct_6eaa4494 height;
    CDStruct_6eaa4494 minWidth;
    CDStruct_6eaa4494 maxWidth;
    CDStruct_6eaa4494 minHeight;
    CDStruct_6eaa4494 maxHeight;
} CDStruct_65226902;

typedef struct {
    CDStruct_6eaa4494 _field1;
    CDStruct_6eaa4494 _field2;
} CDStruct_16314adb;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    CDStruct_fc6cb5ee start;
    CDStruct_fc6cb5ee end;
} CDStruct_474eb98f;

typedef struct {
    struct CGSize min;
    struct CGSize max;
} CDStruct_42a63532;

typedef struct {
    CDStruct_a086822f _field1;
    char **_field2;
    char *_field3;
} CDStruct_e2b8aef9;

// Ambiguous groups
typedef struct {
    unsigned int respondsToDidBeginBrowsing:1;
} CDStruct_8359e0d5;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
} basic_string_1cdf7af0;

typedef struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
} map_7e3c2a19;

typedef struct shared_ptr<NXASDisplayNodeLayout> {
    struct NXASDisplayNodeLayout *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fa46512c;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
} vector_d5f79a51;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
} vector_ec52ae8c;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
} vector_b5bccc4d;

#pragma mark Named Unions

union BCPoint {
    CDStruct_2c43369c _field1;
    double _field2[2];
};

union BCTrapezoid {
    struct {
        union BCPoint _field1;
        union BCPoint _field2;
        union BCPoint _field3;
        union BCPoint _field4;
    } _field1;
    union BCPoint _field2[4];
};

union GCObject;

union TMGenieEffecPoint {
    CDStruct_2c43369c _field1;
    double _field2[2];
};

union TMGenieEffecTrapezoid {
    struct {
        union TMGenieEffecPoint _field1;
        union TMGenieEffecPoint _field2;
        union TMGenieEffecPoint _field3;
        union TMGenieEffecPoint _field4;
    } _field1;
    union TMGenieEffecPoint _field2[4];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

typedef union {
    unsigned int _field1;
    unsigned char _field2[16];
    char *_field3;
} CDUnion_7059b8d6;

typedef union {
    int _enump;
    int _int32p;
    long long _int64p;
    unsigned int _uint32p;
    unsigned long long _uint64p;
    _Bool _boolp;
    float _float32p;
    double _float64p;
} CDUnion_9d145f3c;

