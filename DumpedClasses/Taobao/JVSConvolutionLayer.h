//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "JVSForwardLayer.h"

@class JVSInvocation, JVSTensor, NSString, NSUUID;

@interface JVSConvolutionLayer : NSObject <JVSForwardLayer>
{
    struct MetalConvolutionParameter _convolutionParameter;
    struct MetalRGBConvertParameter _convertParameter;
    struct MetalSummateParameter _summateParameter;
    NSUUID *_uuid;
    NSString *_name;
    float _kernelSize;
    float _padding;
    float _stride;
    float _leaky;
    JVSTensor *_inputTensor;
    JVSTensor *_input4Tensor;
    JVSTensor *_weightsTensor;
    JVSTensor *_weightsRGBTensor;
    JVSTensor *_weights4Tensor;
    JVSTensor *_biasTensor;
    float _outputChannels;
    JVSInvocation *_convertInvocation;
    JVSInvocation *_summateInvocation;
    JVSInvocation *_forwardInvocation;
    _Bool _isRGBConvert;
    NSString *_activation;
    NSString *_format;
}

@property(nonatomic) _Bool isRGBConvert; // @synthesize isRGBConvert=_isRGBConvert;
@property(retain, nonatomic) NSString *format; // @synthesize format=_format;
@property(retain, nonatomic) NSString *activation; // @synthesize activation=_activation;
@property(nonatomic) float leaky; // @synthesize leaky=_leaky;
@property(readonly, nonatomic) JVSTensor *inputTensor; // @synthesize inputTensor=_inputTensor;
@property(nonatomic) float outputChannels; // @synthesize outputChannels=_outputChannels;
@property(nonatomic) float stride; // @synthesize stride=_stride;
@property(nonatomic) float padding; // @synthesize padding=_padding;
@property(nonatomic) float kernelSize; // @synthesize kernelSize=_kernelSize;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (_Bool)initializeForward:(id)arg1 batchSize:(int)arg2;
- (id)forwardInvocations;
@property(readonly, nonatomic) JVSTensor *biasTensor; // @synthesize biasTensor=_biasTensor;
@property(readonly, nonatomic) JVSTensor *weightsTensor; // @synthesize weightsTensor=_weightsTensor;
@property(readonly, nonatomic) struct jvsdimensions dimensions;
@property(readonly, nonatomic) int outputSize;
@property(readonly, nonatomic) int inputSize;
- (id)initWithDimensions:(struct jvsdimensions)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

