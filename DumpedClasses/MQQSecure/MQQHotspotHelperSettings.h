//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul  5 2017 23:13:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MQQConfigUpdater, MQQJudge, NSArray, NSDictionary, NSSet, NSString;

@interface MQQHotspotHelperSettings : NSObject
{
    NSDictionary *_onlineSettings;
    double _WiFiConnectedCheck_timerTimeout;
    double _WiFiConnectedCheck_timerInterval;
    double _WiFiConfigurator_minimumRequiredSignalStrength;
    long long _WiFiConfigurator_maximumConfiguredCountPerList;
    long long _WiFiConfigurator_insecureWiFiConfigureMode;
    long long _WiFiRequest_maximumCountPerDay;
    double _Location_cacheExpiredInterval;
    double _Location_refreshingInterval;
    NSSet *_Location_commandTypesThatCanRefresh;
    double _Location_refreshingIntervalWhileHandlingCommands;
    double _WiFiCaching_basicValidInterval;
    double _WiFiCaching_validIntervalForWeight;
    double _WiFiCaching_validIntervalForLocation;
    double _WiFiCaching_validIntervalForPOI;
    double _WiFiCaching_validLocationDistance;
    long long _WiFiEvaluation_confidenceMode;
    long long _WiFiEvaluation_confidenceStrategy;
    NSArray *_WiFiEvaluation_competitors;
    NSString *_HotspotHelperUI_displayName;
    NSString *_HotspotHelperUI_tailDisplayName;
    double _lastUpdateTime;
    MQQConfigUpdater *_configUpdater;
    unsigned long long _backgroundTaskIdentifier;
    MQQJudge *__WiFiEvaluation_judge;
}

+ (id)defaultSettings;
@property(retain) MQQJudge *_WiFiEvaluation_judge; // @synthesize _WiFiEvaluation_judge=__WiFiEvaluation_judge;
@property unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain) MQQConfigUpdater *configUpdater; // @synthesize configUpdater=_configUpdater;
@property(nonatomic) double lastUpdateTime; // @synthesize lastUpdateTime=_lastUpdateTime;
@property(copy) NSString *HotspotHelperUI_tailDisplayName; // @synthesize HotspotHelperUI_tailDisplayName=_HotspotHelperUI_tailDisplayName;
@property(copy) NSString *HotspotHelperUI_displayName; // @synthesize HotspotHelperUI_displayName=_HotspotHelperUI_displayName;
@property(copy) NSArray *WiFiEvaluation_competitors; // @synthesize WiFiEvaluation_competitors=_WiFiEvaluation_competitors;
@property long long WiFiEvaluation_confidenceStrategy; // @synthesize WiFiEvaluation_confidenceStrategy=_WiFiEvaluation_confidenceStrategy;
@property long long WiFiEvaluation_confidenceMode; // @synthesize WiFiEvaluation_confidenceMode=_WiFiEvaluation_confidenceMode;
@property double WiFiCaching_validLocationDistance; // @synthesize WiFiCaching_validLocationDistance=_WiFiCaching_validLocationDistance;
@property double WiFiCaching_validIntervalForPOI; // @synthesize WiFiCaching_validIntervalForPOI=_WiFiCaching_validIntervalForPOI;
@property double WiFiCaching_validIntervalForLocation; // @synthesize WiFiCaching_validIntervalForLocation=_WiFiCaching_validIntervalForLocation;
@property double WiFiCaching_validIntervalForWeight; // @synthesize WiFiCaching_validIntervalForWeight=_WiFiCaching_validIntervalForWeight;
@property double WiFiCaching_basicValidInterval; // @synthesize WiFiCaching_basicValidInterval=_WiFiCaching_basicValidInterval;
@property double Location_refreshingIntervalWhileHandlingCommands; // @synthesize Location_refreshingIntervalWhileHandlingCommands=_Location_refreshingIntervalWhileHandlingCommands;
@property(copy) NSSet *Location_commandTypesThatCanRefresh; // @synthesize Location_commandTypesThatCanRefresh=_Location_commandTypesThatCanRefresh;
@property double Location_refreshingInterval; // @synthesize Location_refreshingInterval=_Location_refreshingInterval;
@property double Location_cacheExpiredInterval; // @synthesize Location_cacheExpiredInterval=_Location_cacheExpiredInterval;
@property long long WiFiRequest_maximumCountPerDay; // @synthesize WiFiRequest_maximumCountPerDay=_WiFiRequest_maximumCountPerDay;
@property long long WiFiConfigurator_insecureWiFiConfigureMode; // @synthesize WiFiConfigurator_insecureWiFiConfigureMode=_WiFiConfigurator_insecureWiFiConfigureMode;
@property long long WiFiConfigurator_maximumConfiguredCountPerList; // @synthesize WiFiConfigurator_maximumConfiguredCountPerList=_WiFiConfigurator_maximumConfiguredCountPerList;
@property double WiFiConfigurator_minimumRequiredSignalStrength; // @synthesize WiFiConfigurator_minimumRequiredSignalStrength=_WiFiConfigurator_minimumRequiredSignalStrength;
@property double WiFiConnectedCheck_timerInterval; // @synthesize WiFiConnectedCheck_timerInterval=_WiFiConnectedCheck_timerInterval;
@property double WiFiConnectedCheck_timerTimeout; // @synthesize WiFiConnectedCheck_timerTimeout=_WiFiConnectedCheck_timerTimeout;
@property(copy) NSDictionary *onlineSettings; // @synthesize onlineSettings=_onlineSettings;
- (_Bool)WiFiEvaluation_existsCompetitors;
- (_Bool)Location_canRefreshWithHandlingCommandType:(long long)arg1;
- (void)endBackgroundTask;
- (void)beginBackgroundTaskIfNeeded;
- (void)didFailToUpdate:(id)arg1;
- (void)didFinsihUpdating:(_Bool)arg1;
- (void)updateConfig;
- (_Bool)networkAvailable;
- (void)finishUpdatingSettings;
- (void)updateSettingsFromConfig;
- (void)updateSettingsFromDefaults;
- (void)updateSettings;
@property(readonly, nonatomic) _Bool isCheckingForUpdates;
- (void)checkForUpdates;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) NSString *freeWiFiConnectedPushContentWithCompetition;
@property(readonly, nonatomic) NSString *freeWiFiConnectedPushContentWithoutCompetition;
@property(readonly, nonatomic) double freeWiFiConnectedPushTimeSpaceWithCompetition;
@property(readonly) _Bool freeWiFiShouldPushWhenAutoConnected;
@property(readonly, nonatomic) long long freeWiFiConnectedPushLimitWhenActive;
@property(readonly, nonatomic) double freeWiFiConnectedPushActiveTimeSpace;
@property(readonly, nonatomic) double freeWiFiConnectedPushTimeSpace;
- (_Bool)CallBlocker_canAutoUpdateWithHandlingCommandType:(long long)arg1;
@property(readonly, nonatomic) NSSet *CallBlocker_commandTypesThatCanAutoUpdate;
- (unsigned long long)WiFiRecognizer_resultsThatDisconfigures;
@property(readonly, nonatomic) _Bool MQQSecureWiFi_checksCompetitorsWhenConfiguringWiFis;
- (_Bool)SoftUsage_canUploadWithHandlingCommandType:(long long)arg1;
@property(readonly, nonatomic) NSSet *SoftUsage_commandTypesThatCanUpload;
@property(readonly, nonatomic) double SoftUsage_uploadingInterval;

@end

