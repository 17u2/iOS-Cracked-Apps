//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GPUImageStillCamera.h"

#import "TuSDKStillCameraInterface.h"
#import "TuSDKTSMotionDelegate.h"

@class AVCaptureDevice, GPUImageView, NSString, TuSDKFilterWrap, TuSDKTSMotion, UIColor, UIView, UIView<TuSDKVideoCameraExtendViewInterface>;

@interface TuSDKStillCamera : GPUImageStillCamera <TuSDKTSMotionDelegate, TuSDKStillCameraInterface>
{
    struct dispatch_queue_s *_prepareFilterQueue;
    TuSDKFilterWrap *_filterWrap;
    UIView *_holderView;
    GPUImageView *_cameraView;
    UIView<TuSDKVideoCameraExtendViewInterface> *_focusTouchView;
    TuSDKTSMotion *_motion;
    _Bool _isResgisterFocusEvent;
    _Bool _isFilterChanging;
    _Bool _enableFilterConfig;
    _Bool _enableLongTouchCapture;
    _Bool _disableContinueFoucs;
    _Bool _disableMirrorFrontFacing;
    id <TuSDKStillCameraDelegate> _captureDelegate;
    long long _state;
    double _autoFoucsDelay;
    double _longTouchDelay;
    double _cameraViewRatio;
    UIColor *_regionViewColor;
    struct CGSize _outputSize;
}

+ (id)initWithSessionPreset:(id)arg1 cameraPosition:(long long)arg2 cameraView:(id)arg3;
@property(nonatomic) _Bool disableMirrorFrontFacing; // @synthesize disableMirrorFrontFacing=_disableMirrorFrontFacing;
@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
@property(retain, nonatomic) UIColor *regionViewColor; // @synthesize regionViewColor=_regionViewColor;
@property(nonatomic) double cameraViewRatio; // @synthesize cameraViewRatio=_cameraViewRatio;
@property(nonatomic) double longTouchDelay; // @synthesize longTouchDelay=_longTouchDelay;
@property(nonatomic) double autoFoucsDelay; // @synthesize autoFoucsDelay=_autoFoucsDelay;
@property(nonatomic) _Bool disableContinueFoucs; // @synthesize disableContinueFoucs=_disableContinueFoucs;
@property(nonatomic) _Bool enableLongTouchCapture; // @synthesize enableLongTouchCapture=_enableLongTouchCapture;
@property(nonatomic) _Bool enableFilterConfig; // @synthesize enableFilterConfig=_enableFilterConfig;
@property(readonly, nonatomic) _Bool isFilterChanging; // @synthesize isFilterChanging=_isFilterChanging;
@property(nonatomic) _Bool isResgisterFocusEvent; // @synthesize isResgisterFocusEvent=_isResgisterFocusEvent;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) id <TuSDKStillCameraDelegate> captureDelegate; // @synthesize captureDelegate=_captureDelegate;
- (void).cxx_destruct;
- (void)destory;
- (void)onAdjustingFocus:(_Bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unresgisterFocusEvent;
- (void)resgisterFocusEvent;
- (void)resumeCameraCapture;
- (void)stopCameraCapture;
- (void)rotateCamera;
- (void)didProcessImageError:(id)arg1;
- (void)didProcessImageEnd:(id)arg1;
- (id)fixedFrontMirroredImage:(id)arg1 devOrien:(long long)arg2;
- (void)startProcessImage;
- (void)captureImage;
- (_Bool)isSupportExposureWithMode:(long long)arg1;
- (_Bool)exposureWithMode:(long long)arg1 point:(struct CGPoint)arg2;
- (_Bool)exposureWithMode:(long long)arg1;
- (_Bool)isSupportFocusWithMode:(long long)arg1;
- (_Bool)focusWithMode:(long long)arg1 point:(struct CGPoint)arg2;
- (_Bool)focusWithMode:(long long)arg1;
- (void)changeCameraViewRatio:(double)arg1;
- (void)bindFocusTouchView:(id)arg1;
- (void)closeFlash;
- (void)flashWithMode:(long long)arg1;
- (_Bool)hasTorch;
- (_Bool)hasFlash;
- (void)onTuSDKTSMotion:(id)arg1 changedOrientation:(long long)arg2;
- (void)switchNewFilter:(id)arg1;
- (void)asyncBuildFilterWithFilterCode:(id)arg1;
- (_Bool)switchFilterWithCode:(id)arg1;
- (void)initFilterConfigView;
- (void)bindCameraView;
- (void)onCameraStarted;
- (void)tryStartCameraCapture;
- (struct CGRect)cameraFrame;
- (void)setState:(long long)arg1;
- (void)initCamera;
- (id)initWithSessionPreset:(id)arg1 cameraPosition:(long long)arg2 cameraView:(id)arg3;

// Remaining properties
@property(readonly, getter=isBackFacingCameraPresent) _Bool backFacingCameraPresent;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, getter=isFrontFacingCameraPresent) _Bool frontFacingCameraPresent;
@property(readonly) unsigned long long hash;
@property(readonly) AVCaptureDevice *inputCamera;
@property(nonatomic) long long outputImageOrientation;
@property(readonly) Class superclass;

@end

