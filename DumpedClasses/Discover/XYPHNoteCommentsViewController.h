//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "XYPHBaseViewController.h"

#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"
#import "XYCommentMultiInputViewDelegate.h"
#import "XYPHNoteCommentCellDelegate.h"
#import "XYPHNoteSubCommentCellDelegate.h"
#import "XYPHNoteSubCommentFooterCellDelegate.h"

@class NSIndexPath, NSMutableArray, NSString, UITableView, UIView, XYCommentMultiInputView, XYPHNote, XYPHNoteComment, XYPHNoteCommentCellAdapter;

@interface XYPHNoteCommentsViewController : XYPHBaseViewController <UITableViewDataSource, UITableViewDelegate, XYPHNoteCommentCellDelegate, XYPHNoteSubCommentCellDelegate, XYPHNoteSubCommentFooterCellDelegate, XYCommentMultiInputViewDelegate>
{
    _Bool _shouldShowNoteButton;
    _Bool _shouldShowCommentInputImmediately;
    _Bool _shouldAutoExpanding;
    _Bool _showCommentFriendLikeLabel;
    _Bool _isLoading;
    _Bool _isViewAppeared;
    _Bool _isAllCommentsLoaded;
    NSString *_noteID;
    NSString *_targetCommentID;
    XYPHNote *_ownerNote;
    NSString *_ownerNoteID;
    NSString *_noteOwnerID;
    unsigned long long _commentCount;
    UITableView *_contentView;
    UIView *_footerView;
    XYCommentMultiInputView *_commentInputView;
    NSMutableArray *_comments;
    NSMutableArray *_atUsers;
    NSMutableArray *_hashTags;
    XYPHNoteCommentCellAdapter *_cellAdapter;
    XYPHNoteComment *_targetComment;
    NSIndexPath *_targetCommentIndexPath;
}

@property(nonatomic) _Bool isAllCommentsLoaded; // @synthesize isAllCommentsLoaded=_isAllCommentsLoaded;
@property(nonatomic) _Bool isViewAppeared; // @synthesize isViewAppeared=_isViewAppeared;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) NSIndexPath *targetCommentIndexPath; // @synthesize targetCommentIndexPath=_targetCommentIndexPath;
@property(retain, nonatomic) XYPHNoteComment *targetComment; // @synthesize targetComment=_targetComment;
@property(retain, nonatomic) XYPHNoteCommentCellAdapter *cellAdapter; // @synthesize cellAdapter=_cellAdapter;
@property(retain, nonatomic) NSMutableArray *hashTags; // @synthesize hashTags=_hashTags;
@property(retain, nonatomic) NSMutableArray *atUsers; // @synthesize atUsers=_atUsers;
@property(retain, nonatomic) NSMutableArray *comments; // @synthesize comments=_comments;
@property(retain, nonatomic) XYCommentMultiInputView *commentInputView; // @synthesize commentInputView=_commentInputView;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) UITableView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) unsigned long long commentCount; // @synthesize commentCount=_commentCount;
@property(retain, nonatomic) NSString *noteOwnerID; // @synthesize noteOwnerID=_noteOwnerID;
@property(nonatomic) _Bool showCommentFriendLikeLabel; // @synthesize showCommentFriendLikeLabel=_showCommentFriendLikeLabel;
@property(copy, nonatomic) NSString *ownerNoteID; // @synthesize ownerNoteID=_ownerNoteID;
@property(nonatomic) __weak XYPHNote *ownerNote; // @synthesize ownerNote=_ownerNote;
@property(nonatomic) _Bool shouldAutoExpanding; // @synthesize shouldAutoExpanding=_shouldAutoExpanding;
@property(retain, nonatomic) NSString *targetCommentID; // @synthesize targetCommentID=_targetCommentID;
@property(nonatomic) _Bool shouldShowCommentInputImmediately; // @synthesize shouldShowCommentInputImmediately=_shouldShowCommentInputImmediately;
@property(nonatomic) _Bool shouldShowNoteButton; // @synthesize shouldShowNoteButton=_shouldShowNoteButton;
@property(retain, nonatomic) NSString *noteID; // @synthesize noteID=_noteID;
- (void).cxx_destruct;
- (void)removeHashTag:(id)arg1;
- (void)removeAtUser:(id)arg1;
- (void)reportComment:(id)arg1;
- (void)deleteCommentAtIndexPath:(id)arg1;
- (void)showActionSheetForCellAtIndexPath:(id)arg1;
- (void)sendComment:(id)arg1;
- (void)updateCommentInputPlaceholder;
- (void)dismissCommentInput;
- (void)showCommentInput;
- (id)siblingIndexPathAtIndex:(unsigned long long)arg1 forIndexPath:(id)arg2;
- (id)parentCommentIndexPathForIndexPath:(id)arg1;
- (void)updateTitle;
- (void)noteButtonTapped;
- (void)commentInputView:(id)arg1 didDeleteHashText:(id)arg2;
- (void)commentInputView:(id)arg1 didDeleteUserMentionText:(id)arg2;
- (void)commentInputView:(id)arg1 didSelectedHashTag:(id)arg2;
- (void)commentInputView:(id)arg1 didAtUser:(id)arg2;
- (void)commentInputViewWillSend:(id)arg1;
- (void)requestSubCommentsForComment:(id)arg1 count:(unsigned long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)requestCommentsWithStart:(id)arg1;
- (void)loadMoreComments;
- (void)requestComments;
- (void)subCommentFooterCellDidTapActionButton:(id)arg1;
- (void)subCommentCellDescLinkClicked:(id)arg1 withLinkItem:(id)arg2;
- (void)subCommentCellDidTapCommentButton:(id)arg1;
- (void)subCommentCellDidTapLikeButton:(id)arg1;
- (void)subCommentCellDidTapTargetNameButton:(id)arg1;
- (void)subCommentCellDidTapAvatar:(id)arg1;
- (void)subCommentCellDidTapComment:(id)arg1;
- (void)commentCellDescLinkClicked:(id)arg1 withLinkItem:(id)arg2;
- (void)commentCellDidTapReplyButton:(id)arg1;
- (void)commentCellDidTapCommentButton:(id)arg1;
- (void)commentCellDidTapLikeButton:(id)arg1;
- (void)commentCellDidTapAvatar:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

