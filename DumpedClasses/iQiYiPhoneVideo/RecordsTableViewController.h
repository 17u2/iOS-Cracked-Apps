//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul  5 2017 23:13:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QYCommonViewController.h"

#import "QYTableViewDelegate-Protocol.h"
#import "RecordNormalTableViewCellDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class NSMutableArray, NSString, QYTableView, RecordADManager, RecordBannarAdView, RecordPublic, RecordsTableView, UIButton, UITapGestureRecognizer, UIView;

@interface RecordsTableViewController : QYCommonViewController <UITableViewDelegate, UITableViewDataSource, UIScrollViewDelegate, QYTableViewDelegate, RecordNormalTableViewCellDelegate>
{
    _Bool _shouldHideRemindNumber;
    _Bool _isDeleteAll;
    _Bool _hasAD;
    int _status;
    int _errorCode;
    QYTableView *_tableView;
    NSMutableArray *_dataArray;
    UIView *_viewTologin;
    UIButton *_filterActionBtn;
    RecordsTableView *_reallyView;
    UITapGestureRecognizer *_singleRecognizer;
    UIButton *_filterBtn;
    RecordPublic *_recordPublic;
    UIButton *_deleteBtn;
    UIButton *_deleteSelctBtn;
    RecordADManager *_adManager;
    RecordBannarAdView *_adView;
}

@property(retain, nonatomic) RecordBannarAdView *adView; // @synthesize adView=_adView;
@property(nonatomic) _Bool hasAD; // @synthesize hasAD=_hasAD;
@property(retain, nonatomic) RecordADManager *adManager; // @synthesize adManager=_adManager;
@property(nonatomic) _Bool isDeleteAll; // @synthesize isDeleteAll=_isDeleteAll;
@property(retain, nonatomic) UIButton *deleteSelctBtn; // @synthesize deleteSelctBtn=_deleteSelctBtn;
@property(retain, nonatomic) UIButton *deleteBtn; // @synthesize deleteBtn=_deleteBtn;
@property(retain, nonatomic) RecordPublic *recordPublic; // @synthesize recordPublic=_recordPublic;
@property(nonatomic) _Bool shouldHideRemindNumber; // @synthesize shouldHideRemindNumber=_shouldHideRemindNumber;
@property(retain, nonatomic) UIButton *filterBtn; // @synthesize filterBtn=_filterBtn;
@property(retain, nonatomic) UITapGestureRecognizer *singleRecognizer; // @synthesize singleRecognizer=_singleRecognizer;
@property(nonatomic) RecordsTableView *reallyView; // @synthesize reallyView=_reallyView;
@property(retain, nonatomic) UIButton *filterActionBtn; // @synthesize filterActionBtn=_filterActionBtn;
@property(retain, nonatomic) UIView *viewTologin; // @synthesize viewTologin=_viewTologin;
@property(retain, nonatomic) NSMutableArray *dataArray; // @synthesize dataArray=_dataArray;
@property(nonatomic) int errorCode; // @synthesize errorCode=_errorCode;
@property(nonatomic) int status; // @synthesize status=_status;
@property(retain, nonatomic) QYTableView *tableView; // @synthesize tableView=_tableView;
- (void)adManager:(id)arg1 hasClicekAdView:(id)arg2 withData:(id)arg3;
- (void)showADBarrner;
- (void)reqAD;
- (void)shouldGetDataInTableView:(id)arg1;
- (void)shouldRefreshInTableView:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)enterForegroundNotification;
- (void)reloadDataAfterLogin:(id)arg1;
- (void)reloadDataAfterPlayerClosed:(id)arg1;
- (id)playRecordManager;
- (void)filterButtonAction:(id)arg1;
- (void)toUpdateRemind;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableViewDidSelectCell:(id)arg1;
- (void)removeViewTologin;
- (void)setFilterActionBtnEnabled:(_Bool)arg1;
- (void)setTitleBarHidden:(_Bool)arg1;
- (void)setTitleBarSetSelected:(_Bool)arg1;
- (void)setTitleBarEnabled:(_Bool)arg1;
- (void)playVideoWithWebPalyer:(id)arg1;
- (void)didSelectNormalCell:(id)arg1;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)playNextVideo:(id)arg1;
- (void)changeStatusForTitleCell:(id)arg1;
- (id)createFilterOutShortVideoTipCell:(id)arg1;
- (id)createADCellWithTtableView:(id)arg1;
- (id)createEmptyCellWithTtableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)headerViewForDateInSection:(long long)arg1;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)ShowToast:(id)arg1;
- (void)hideWaiting;
- (void)addloginview;
- (void)SingleTap:(id)arg1;
- (void)addSingleRecognizer;
- (void)reloadRecordData;
- (void)deleteRecordsFinish:(_Bool)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)btnDeleteRecordsTouched:(id)arg1;
- (void)btnSelectAllRecordsTouched:(id)arg1;
- (void)setEditSelectAll;
- (void)setEditTableCell:(_Bool)arg1;
- (void)btnCancelTouched:(id)arg1;
- (void)btnEditTouched:(id)arg1;
- (void)moduleDone:(id)arg1;
- (void)showLoginViewController;
- (void)userWantToReloadData;
- (void)retryRequest;
- (void)refreshDeleteBtn;
- (void)setEditMode:(_Bool)arg1;
- (void)hideBottomBar;
- (void)showBottomBar;
- (void)doWhenSuccess;
- (void)doWhenNoData;
- (void)doWhenFailed;
- (void)doWhenLoading;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)refreshDisplay;
- (void)layoutTable;
- (void)tapScrowToTop;
- (void)hideEdit;
- (void)hideDeleteBtn;
- (void)hideDeleteSelctBtn;
- (void)addDeleteButton;
- (void)qyCommonViewAppear;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;
- (void)clean;
- (void)showInParentController:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

