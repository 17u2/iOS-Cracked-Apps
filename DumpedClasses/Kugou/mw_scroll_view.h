//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "UIGestureRecognizerDelegate.h"
#import "mw_content_delegate.h"

@class NSMutableArray, NSMutableDictionary, NSString, UIPanGestureRecognizer, UITapGestureRecognizer, mw_content_view;

@interface mw_scroll_view : UIView <UIGestureRecognizerDelegate, mw_content_delegate>
{
    _Bool m_is_initialized;
    _Bool m_enabled_pan;
    _Bool m_enabled_tap;
    struct UIEdgeInsets m_content_inset;
    long long m_direction;
    double m_min_scroll_per;
    double m_max_scroll_per;
    _Bool _bounces;
    _Bool _enable_cycle;
    _Bool _is_animating;
    _Bool _have_gesture;
    double _duration;
    id <mw_scroll_delgate> _delegate;
    UIPanGestureRecognizer *_pan;
    UITapGestureRecognizer *_tap;
    UIView *_container_view;
    mw_content_view *_prev_view;
    mw_content_view *_curr_view;
    mw_content_view *_next_view;
    NSMutableArray *_scroll_array;
    long long _rows;
    NSMutableDictionary *_reusable_cells;
    NSMutableDictionary *_visible_cells;
    struct UIEdgeInsets _gesture_content_inset;
}

@property(retain, nonatomic) NSMutableDictionary *visible_cells; // @synthesize visible_cells=_visible_cells;
@property(retain, nonatomic) NSMutableDictionary *reusable_cells; // @synthesize reusable_cells=_reusable_cells;
@property(nonatomic) long long rows; // @synthesize rows=_rows;
@property(retain, nonatomic) NSMutableArray *scroll_array; // @synthesize scroll_array=_scroll_array;
@property(nonatomic) _Bool have_gesture; // @synthesize have_gesture=_have_gesture;
@property(nonatomic) _Bool is_animating; // @synthesize is_animating=_is_animating;
@property(retain, nonatomic) mw_content_view *next_view; // @synthesize next_view=_next_view;
@property(retain, nonatomic) mw_content_view *curr_view; // @synthesize curr_view=_curr_view;
@property(retain, nonatomic) mw_content_view *prev_view; // @synthesize prev_view=_prev_view;
@property(retain, nonatomic) UIView *container_view; // @synthesize container_view=_container_view;
@property(retain, nonatomic) UITapGestureRecognizer *tap; // @synthesize tap=_tap;
@property(retain, nonatomic) UIPanGestureRecognizer *pan; // @synthesize pan=_pan;
@property(nonatomic) _Bool enable_cycle; // @synthesize enable_cycle=_enable_cycle;
@property(nonatomic) _Bool bounces; // @synthesize bounces=_bounces;
@property(nonatomic) struct UIEdgeInsets gesture_content_inset; // @synthesize gesture_content_inset=_gesture_content_inset;
@property(nonatomic) __weak id <mw_scroll_delgate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (void).cxx_destruct;
- (void)d_csv_with_exchange_from_index:(long long)arg1 to_index:(long long)arg2;
- (void)d_csv_with_move_from_index:(long long)arg1 to_index:(long long)arg2;
- (void)d_csv_with_did_scroll_from_index:(long long)arg1 to_index:(long long)arg2 is_gesture:(_Bool)arg3;
- (void)d_csv_with_will_scroll_from_index:(long long)arg1 to_index:(long long)arg2 is_gesture:(_Bool)arg3;
- (_Bool)d_csv_with_reusable_cell:(id)arg1;
- (void)d_csv_with_from_index:(long long)arg1 to_index:(long long)arg2 per:(double)arg3;
- (_Bool)d_csv_with_gr:(id)arg1 should_begin:(_Bool)arg2;
- (_Bool)d_csv_with_index_for_curr_index:(long long)arg1 flag:(long long)arg2 index:(long long *)arg3;
- (void)load_view_for_index:(long long)arg1 content_view:(id)arg2 reload:(_Bool)arg3;
- (long long)d_number_of_rows;
- (void)cv_tap_on_content:(id)arg1;
- (void)cv:(id)arg1 from_size:(struct CGSize)arg2 to_size:(struct CGSize)arg3;
- (void)enqueue_reusable_view:(id)arg1;
- (void)exchange_from_index:(long long)arg1 to_index:(long long)arg2;
- (void)move_from_index:(long long)arg1 to_index:(long long)arg2;
- (void)reload_indexs:(id)arg1 animate:(_Bool)arg2;
- (void)delete_indexs:(id)arg1;
- (void)insert_indexs:(id)arg1;
- (id)dequeue_reusable_cell_with_identifier:(id)arg1;
- (void)register_cell:(id)arg1 identifier:(id)arg2;
- (id)cell_for_index:(long long)arg1;
- (long long)index_for_cell:(id)arg1;
- (long long)get_current_index;
- (id)get_current_cell;
- (id)get_visible_rows;
- (id)get_visible_cells;
- (void)scroll_to_index:(long long)arg1 demand:(_Bool)arg2 animate:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)scroll_to_next;
- (void)scroll_to_prev;
- (void)scroll_to_index:(long long)arg1;
- (void)reload_data;
- (void)end_update;
- (void)begin_update;
- (void)exchange_from_index_private:(long long)arg1 to_index:(long long)arg2;
- (void)move_from_index_private:(long long)arg1 to_index:(long long)arg2;
- (void)reload_indexs_private:(id)arg1 animate:(_Bool)arg2;
- (void)delete_indexs_private:(id)arg1;
- (void)insert_indexs_private:(id)arg1;
- (void)scroll_to_index_private:(long long)arg1 demand:(_Bool)arg2 animate:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)reload_data_private;
- (void)prepare_content_to_index:(long long *)arg1;
- (void)animate2:(long long)arg1 animate:(_Bool)arg2 completion:(CDUnknownBlockType)arg3 is_gesture:(_Bool)arg4;
- (void)layout_content;
- (void)handle_tap:(id)arg1;
- (void)handle_pan:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
@property(nonatomic, setter=set_max_scroll_per:) double max_scroll_per; // @dynamic max_scroll_per;
@property(nonatomic, setter=set_min_scroll_per:) double min_scroll_per; // @dynamic min_scroll_per;
@property(nonatomic, setter=set_direction:) long long direction; // @dynamic direction;
@property(nonatomic, setter=set_content_inset:) struct UIEdgeInsets content_inset; // @dynamic content_inset;
@property(nonatomic, setter=set_enabled_tap:) _Bool enabled_tap; // @dynamic enabled_tap;
@property(nonatomic, setter=set_enabled_pan:) _Bool enabled_pan; // @dynamic enabled_pan;
- (void)redesign;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)after_initialize_mw_scroll_view;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

