//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FAAPMDelegate.h"

@class FAPlayer, NSDate, NSMutableArray, NSString, NSTimer, UIView;

@interface FALivePlayerController : NSObject <FAAPMDelegate>
{
    _Bool _playerLock;
    _Bool _isLiving;
    _Bool _hadUploadStatistics;
    _Bool _isForbidPlayLive;
    _Bool _isBlocking;
    _Bool _isFistLoadVideoSuc;
    float _streamBufferTotalTime;
    id <FALivePlayerControllerDelegate> _delegate;
    id <FALivePlayerControllerDataSource> _dataSource;
    long long _liveUrlIndex;
    NSMutableArray *_liveUrlList;
    long long _reconnectPlayTime;
    NSString *_effectiveLiveUrl;
    FAPlayer *_player;
    UIView *_playView;
    UIView *_playBgView;
    long long _playerBufferingStack;
    NSDate *_streamBufferBeginTime;
    long long _streamBufferCount;
    long long _streamBufferObviousCount;
    NSDate *_firstLoadTime;
    long long _firstLoadDateTime;
    NSMutableArray *_apmVideoAvailableStartTimeMArr;
    NSMutableArray *_apmVideoAvailableEndTimeMArr;
    long long _getInfoStatusTime;
    NSTimer *_countInfoStatusTimer;
}

@property(retain, nonatomic) NSTimer *countInfoStatusTimer; // @synthesize countInfoStatusTimer=_countInfoStatusTimer;
@property(nonatomic) long long getInfoStatusTime; // @synthesize getInfoStatusTime=_getInfoStatusTime;
@property(retain, nonatomic) NSMutableArray *apmVideoAvailableEndTimeMArr; // @synthesize apmVideoAvailableEndTimeMArr=_apmVideoAvailableEndTimeMArr;
@property(retain, nonatomic) NSMutableArray *apmVideoAvailableStartTimeMArr; // @synthesize apmVideoAvailableStartTimeMArr=_apmVideoAvailableStartTimeMArr;
@property(nonatomic) long long firstLoadDateTime; // @synthesize firstLoadDateTime=_firstLoadDateTime;
@property(retain, nonatomic) NSDate *firstLoadTime; // @synthesize firstLoadTime=_firstLoadTime;
@property(nonatomic) _Bool isFistLoadVideoSuc; // @synthesize isFistLoadVideoSuc=_isFistLoadVideoSuc;
@property(nonatomic) long long streamBufferObviousCount; // @synthesize streamBufferObviousCount=_streamBufferObviousCount;
@property(nonatomic) long long streamBufferCount; // @synthesize streamBufferCount=_streamBufferCount;
@property(retain, nonatomic) NSDate *streamBufferBeginTime; // @synthesize streamBufferBeginTime=_streamBufferBeginTime;
@property(nonatomic) float streamBufferTotalTime; // @synthesize streamBufferTotalTime=_streamBufferTotalTime;
@property(nonatomic) long long playerBufferingStack; // @synthesize playerBufferingStack=_playerBufferingStack;
@property(nonatomic) _Bool isBlocking; // @synthesize isBlocking=_isBlocking;
@property(nonatomic) _Bool isForbidPlayLive; // @synthesize isForbidPlayLive=_isForbidPlayLive;
@property(nonatomic) _Bool hadUploadStatistics; // @synthesize hadUploadStatistics=_hadUploadStatistics;
@property(retain, nonatomic) UIView *playBgView; // @synthesize playBgView=_playBgView;
@property(retain, nonatomic) UIView *playView; // @synthesize playView=_playView;
@property(retain, nonatomic) FAPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) NSString *effectiveLiveUrl; // @synthesize effectiveLiveUrl=_effectiveLiveUrl;
@property(nonatomic) _Bool isLiving; // @synthesize isLiving=_isLiving;
@property(nonatomic) long long reconnectPlayTime; // @synthesize reconnectPlayTime=_reconnectPlayTime;
@property(retain, nonatomic) NSMutableArray *liveUrlList; // @synthesize liveUrlList=_liveUrlList;
@property(nonatomic) long long liveUrlIndex; // @synthesize liveUrlIndex=_liveUrlIndex;
@property(nonatomic) _Bool playerLock; // @synthesize playerLock=_playerLock;
@property(nonatomic) __weak id <FALivePlayerControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <FALivePlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)beginEnterRoom;
- (void)dealExitRemindStatusWhenGetInfo;
- (void)dealCountGetInfoStatus;
- (void)dealEnterRemindStatusWhenGetInfo;
- (id)getAPMTypeMFXMobileLiveVideoAvailableRateInfo;
- (id)getAPMTypeLiveVideoBufferFeelRateInfo;
- (id)getAPMTypeMFXMobileLiveVideoBufferRateInfo;
- (void)playerStuckReportWithInfo:(id)arg1;
- (void)destroy;
- (void)rebuildPlayerViewIfNeed;
- (_Bool)getPlayerIsLiving;
- (void)allowLivePlay;
- (void)forbidLivePlay;
- (_Bool)isAllowLivePlay;
- (void)dealRetryPlay;
- (void)stopPlayer;
- (void)removeVideoManager;
- (void)addVideoManager;
- (void)showPlayerInView:(id)arg1 frame:(struct CGRect)arg2;
- (void)setPlayerIsLiving:(_Bool)arg1;
- (void)setPlayLiveList:(id)arg1;
- (void)dealHaveNotLive;
- (void)dealPlayChangeStateMsgType:(long long)arg1 error:(long long)arg2 para:(int)arg3;
- (void)dismissStatus;
- (void)setErrorTip:(id)arg1;
- (void)setLoadingTip:(id)arg1;
- (void)playChangeStateMsgType:(long long)arg1 error:(long long)arg2 para:(int)arg3;
- (void)saveEffectiveUrl;
- (void)playWithPauseState;
- (void)reconnectToPlay:(id)arg1;
- (void)closePlayWaitting;
- (void)showPlayWaiting;
- (void)playNextUrl;
- (void)reconnectPlay;
- (void)retryPlay;
- (struct CGRect)getPlayerViewFrame;
- (void)playerPlayWithUrl:(id)arg1;
- (void)startPlay;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

