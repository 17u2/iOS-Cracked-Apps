//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class KGDirectoryMgr, KGRecordMgr, KGRuntimeMgr, NSLock;

@interface KGFileMgr : NSObject
{
    KGRuntimeMgr *_runtimeMgr;
    KGDirectoryMgr *_dirMgr;
    KGRecordMgr *_recordMgr;
    NSLock *_lockerFileMgr;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedSingleton;
- (void).cxx_destruct;
- (void)runtimeInfos;
- (void)reinit;
- (id)generateFile:(id)arg1 qualityType:(int)arg2;
- (id)addBatchDownloads:(id)arg1 from:(id)arg2 start:(_Bool)arg3;
- (void)removeStatisticsHandler:(id)arg1;
- (void)addStatisticsHandler:(id)arg1;
- (void)removeClient:(unsigned long long)arg1;
- (void)addClient:(id)arg1 whoId:(unsigned long long)arg2;
- (void)releaseBandwidthForClient:(unsigned long long)arg1;
- (void)grabBandwidth:(long long)arg1 forClient:(unsigned long long)arg2;
- (_Bool)setConcurrentCount:(int)arg1 forClient:(unsigned long long)arg2;
- (_Bool)deleteDownloadsWithHolder:(id)arg1 error:(id *)arg2;
- (_Bool)stopDownloadsWithHolder:(id)arg1 error:(id *)arg2;
- (_Bool)startDownloads:(id)arg1 from:(id)arg2 error:(id *)arg3;
- (_Bool)startDownloadsWithHolder:(id)arg1 error:(id *)arg2;
- (id)infoDownload:(long long)arg1 error:(id *)arg2;
- (_Bool)deleteDownload:(long long)arg1 error:(id *)arg2;
- (_Bool)stopDownload:(long long)arg1 error:(id *)arg2;
- (_Bool)startDownload:(long long)arg1 error:(id *)arg2;
- (id)insertDownloadMusicFile:(id)arg1 from:(id)arg2 start:(_Bool)arg3 preempt:(_Bool)arg4 error:(id *)arg5;
- (id)addDownloadMusicFile:(id)arg1 from:(id)arg2 start:(_Bool)arg3 error:(id *)arg4;
- (void)dealloc;
- (void)initAllData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (_Bool)MigrateDirectoryFrom:(id)arg1 to:(id)arg2 error:(id *)arg3;
- (_Bool)setTempDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setOfflineDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setSharedDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setCacheDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setDownloadDirectory:(id)arg1 error:(id *)arg2;
- (void)addHashForfile:(id)arg1 hash:(id)arg2 qualityType:(int)arg3;
- (void)synchronizeSharedFiles:(id)arg1 holder:(id)arg2;
- (void)synchronizeIpodFiles:(id)arg1 holder:(id)arg2;
- (_Bool)deleteFiles:(id)arg1;
- (_Bool)deleteFile:(id)arg1 error:(id *)arg2;
- (int)deleteHolderForFiles:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (int)deleteFilesHolder:(id)arg1 except:(id)arg2 error:(id *)arg3;
- (int)deleteFilesHolder:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFileHolder:(id)arg1 fileKey:(id)arg2 error:(id *)arg3;
- (void)addFileHolder:(id)arg1 fileKey:(id)arg2 error:(id *)arg3;
- (void)insertFiles:(id)arg1 holder:(id)arg2;
- (void)migrateDownloadedFiles:(id)arg1 holder:(id)arg2;
- (id)getTempFileQualities:(id)arg1 error:(id *)arg2;
- (int)increasePlayCount:(id)arg1;
- (int)getPlayCount:(id)arg1;
- (id)queryDownloadedNumber:(id)arg1;
- (id)getFileQualities:(id)arg1 error:(id *)arg2;
- (id)getFileDownloadInfos:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (id)getFileDownloadInfo:(id)arg1 error:(id *)arg2;
- (id)getFileInfo:(id)arg1 error:(id *)arg2;
- (id)getFileSource:(id)arg1 error:(id *)arg2;
- (id)getFilesInfoDictonary:(id)arg1;
- (id)getFilePath:(id)arg1;
- (_Bool)isUnderControl:(id)arg1;
- (_Bool)isLocalExist:(id)arg1 error:(id *)arg2;
- (long long)pHandleRuntimeJob:(id)arg1 fileId:(long long)arg2 from:(id)arg3;
- (long long)pRecordForDownFile:(id)arg1 from:(id)arg2 error:(id *)arg3;
- (_Bool)pVerifyDownFile:(id)arg1 error:(id *)arg2;
- (_Bool)pVerifyHolder:(id)arg1 error:(id *)arg2;
- (_Bool)pVerifyJobId:(long long)arg1 error:(id *)arg2;
- (id)pAddDownloadMusicFile:(id)arg1 from:(id)arg2 start:(_Bool)arg3 isInsert:(_Bool)arg4 preempt:(_Bool)arg5 error:(id *)arg6;
- (id)pFindFileRecordsDictionaryWithKeys:(id)arg1;
- (id)pFindFileRecordsWithKeys:(id)arg1;
- (id)pFindFileRecordWithKey:(id)arg1;
- (_Bool)pDeleteFileHolder:(id)arg1 fileInfo:(id)arg2;
- (void)reinitMvProxy;
- (void)setForceMVProxy:(_Bool)arg1;
- (_Bool)isMVProxyRunning;
- (void)DeleteMVCache:(id)arg1 path:(id)arg2;
- (double)GetDownloadProgressForMvHash:(id)arg1;
- (_Bool)isRequestAvrival:(id)arg1 orProxyUrl:(id)arg2;
- (id)getProxyURLForMV:(id)arg1 withMVHash:(id)arg2 withMVSize:(long long)arg3 withMP3Hash:(id)arg4 toSavePath:(id)arg5 withFreeSpace:(long long)arg6;
- (id)getProxyURLForMV:(id)arg1 withMVHash:(id)arg2 withMVSize:(long long)arg3 withMP3Hash:(id)arg4 toSavePath:(id)arg5 withFreeSpace:(long long)arg6 error:(id *)arg7;
- (id)mapHashToProxyUrl:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (id)mapHashToProxyUrl:(id)arg1 holder:(id)arg2 returnJobId:(long long *)arg3 error:(id *)arg4;
- (struct StreamObjectAutoPtr)makeStream:(id)arg1 holder:(id)arg2 error:(id *)arg3;

@end

