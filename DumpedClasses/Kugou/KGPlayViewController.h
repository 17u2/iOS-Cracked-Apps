//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "KGViewController.h"

#import "DLNAPlayerManagerBLLDelegate.h"
#import "KGPlayBgViewDelegate.h"
#import "KGPlaySongShareViewDelegate.h"
#import "KGPlayViewBarViewDelegate.h"
#import "KGPlayViewFootViewDelegate.h"
#import "KGShareViewControllerDelegate.h"
#import "KGSingerListSheetDelegate.h"
#import "KGTextRollViewDelegate.h"
#import "KuQunPlayStatusChangeDelegate.h"
#import "LocalMusicMvHashMatchBLLDelegate.h"
#import "LyricViewKrcAnalysisDelegate.h"
#import "LyricViewMultiLineDelegate.h"
#import "LyricViewTwoLineDelegate.h"
#import "Play_SongInfoViewDelegate.h"
#import "RecommenedInfoViewDelegate.h"
#import "SearchLyricViewControllerDelegate.h"
#import "SongLyricDownLoadLogicThreadDelegate.h"
#import "TryListenVoiceSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"

@class CALayer, ExternalPlayerChooseViewController, FXRoomShowView, KGBaseDanmakuView, KGContentViewController, KGPlayBgViewController, KGPlayListBase, KGPlaySongShareView, KGPlayViewBarViewController, KGPlayViewFootViewController, KGPlayViewMenuListController, KGProgressView, KGRadioPlayList, KGRadioStartButton, KGRunnerCountTipView, KGSkinButton, KGSongAllCommentsButton, KGSongDanmakuEditButton, KGSongDanmakuEditViewController, KGSongDanmakuManager, KGTextRollView, KGThemeButton, KGThemeImageView, KQGroupInfoEntity, LyricViewMultiLine, LyricViewTowLine, LyricWarningViewController, LyricsTypeButton, MPVolumeView, NSArray, NSDictionary, NSLayoutConstraint, NSMutableArray, NSPointerArray, NSString, NSTimer, PlayListViewMgrController, PlayNextView, PlayTypeListViewViewController, Play_SongInfoView, RecommedRadioDescriptionViewController, RecommenedInfoView, RoomSongInfo, SearchLyricPreviewViewController, SearchLyricViewController, SearchSongAlbumImageViewController, SongInfo, SongLyricDownLoadLogicThread, TryListenVoiceSheet, UIAlertView, UIButton, UIImage, UIImageView, UILabel, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITableView, UITapGestureRecognizer, UIView;

@interface KGPlayViewController : KGViewController <KGPlaySongShareViewDelegate, UITableViewDelegate, UITableViewDataSource, DLNAPlayerManagerBLLDelegate, UIGestureRecognizerDelegate, SongLyricDownLoadLogicThreadDelegate, LyricViewKrcAnalysisDelegate, KGPlayBgViewDelegate, KGPlayViewBarViewDelegate, RecommenedInfoViewDelegate, TryListenVoiceSheetDelegate, SearchLyricViewControllerDelegate, Play_SongInfoViewDelegate, KGShareViewControllerDelegate, KGPlayViewFootViewDelegate, KuQunPlayStatusChangeDelegate, LyricViewMultiLineDelegate, LyricViewTwoLineDelegate, KGSingerListSheetDelegate, LocalMusicMvHashMatchBLLDelegate, KGTextRollViewDelegate>
{
    KGTextRollView *_songNameLabel;
    KGTextRollView *_singerNameLabel;
    KGTextRollView *_musicTitleLabel;
    PlayTypeListViewViewController *playTypeListViewViewController;
    PlayListViewMgrController *_playListMgrVC;
    NSTimer *_progressTimer;
    double _updateTime;
    _Bool _fxRoomShowFlag;
    NSTimer *_fxRoomShowTimer;
    _Bool _lyricAnimationIsOn;
    long long tapType;
    UIAlertView *_searchImageAlertView;
    SearchLyricViewController *searchLyricViewController;
    UIImageView *_mutiLineImageBGView;
    _Bool _isEqBtnRepeatTouch;
    UIView *_bgView;
    long long _similarType;
    unsigned long long _tryReloadLyricCount;
    int _lyricCodeType;
    double _tryListenPlayProgress;
    SongInfo *_tryChangeQualityingSong;
    _Bool _sleep;
    _Bool _isChangeOutSimilarity;
    _Bool _lyric_warning_state;
    _Bool _lastTimeIsLeave;
    _Bool _isSongDanmakuMode;
    _Bool _isEditingSongDanmaku;
    _Bool _firstPartInitIsOver;
    _Bool _nextPartInitIsOver;
    _Bool _isDanmakuCanShow;
    _Bool _isManualLeave;
    _Bool _isLyricModelChanging;
    _Bool _swipeToRecommedAnimationIsOn;
    _Bool _isCreateRecommendRadioPlayList;
    _Bool _shouldShowSingerPotratTipProgress;
    _Bool _isRadioModelUI;
    _Bool _isKuqunModelUI;
    _Bool _isSingerMatchRequsting;
    int _lyricTypeBeforFullShow;
    UIView *_titleView;
    UIView *_topBtnsView;
    UIView *_centerView;
    UIView *_adjustView;
    UIView *_subCenterView;
    UIView *_barBgView;
    UIView *_footView;
    UIButton *_imageModelBtn;
    UIButton *_quitBtn;
    UIView *_topBtnsContentView;
    NSString *_lyricPath;
    SongLyricDownLoadLogicThread *_lyricLogicthread;
    LyricViewTowLine *_lyricTowView;
    UIView *_mutilineBackView;
    LyricViewMultiLine *_lyricMultiView;
    long long _lyricLineDefaultNumbers;
    double _lyricMultiViewHeght;
    NSLayoutConstraint *_lyricMutiLineTopCt;
    NSLayoutConstraint *_lyricMutiLineBottomCt;
    KGPlayViewBarViewController *_barViewVC;
    KGPlayBgViewController *_playImageBgView;
    MPVolumeView *_volumeView;
    UIButton *_airPlayButton;
    long long _airplayState;
    long long _dlnaplayState;
    UIButton *_dlnaIconBtn;
    UIView *_renderListBackView;
    UITableView *_renderListView;
    NSArray *_rendererArray;
    UIButton *_airPlayDlnaBtn;
    ExternalPlayerChooseViewController *_externalPlayerChooseVC;
    UIButton *_toKTVButton;
    KGThemeButton *_toDanmakuButton;
    RoomSongInfo *_roomInfo;
    FXRoomShowView *_fxRoomShowView;
    UIButton *_toFXRoomBtn;
    KGPlayListBase *_lastPlaylistBySimilarity;
    long long _lastPlayTypeBySimilarity;
    KQGroupInfoEntity *_groupInfo;
    RecommenedInfoView *_recommendedSongsSwipeView;
    UIButton *_playTypeOfRadioBtn;
    LyricWarningViewController *_lyric_warning;
    UIView *_guideView;
    long long _groupRole;
    LyricsTypeButton *_towLineTypeButton;
    UIButton *_eqBtn;
    NSPointerArray *_delegateArray;
    UITapGestureRecognizer *_tapEvent;
    UIPanGestureRecognizer *_panEvent;
    UITapGestureRecognizer *_doubletap;
    UILongPressGestureRecognizer *_longGesture;
    NSLayoutConstraint *_ImageBgViewLeftCt;
    KGPlayViewFootViewController *_footViewVC;
    NSLayoutConstraint *_mutilineLyricCenterCt;
    NSLayoutConstraint *_btnHeightCt;
    NSLayoutConstraint *_subCenterHeightCt;
    NSLayoutConstraint *_playBarHeightCt;
    NSLayoutConstraint *_footViewHeightCt;
    NSLayoutConstraint *_ajustViewHeightCt;
    NSLayoutConstraint *_twoLyriceHeightCt;
    KGSkinButton *_voiceQuality;
    UIButton *_toMvBtn;
    UIImageView *_logoView;
    UIView *_translateBackView;
    PlayNextView *_preSongView;
    PlayNextView *_nextSongView;
    KGContentViewController *_searchLyricNavigation;
    SearchLyricPreviewViewController *_searchLyricPreviewViewController;
    UILabel *_playTypeOfRadioDescription;
    RecommedRadioDescriptionViewController *_recommedRadioDescriptionViewController;
    KGRadioPlayList *_recommendRadioPlayList;
    SongInfo *_baseSimilarytysongInfo;
    SongInfo *_tempSimilarytysongInfo;
    SearchSongAlbumImageViewController *_searchSongAlbumVC;
    UIView *_textView;
    UIView *_leftLineView;
    UIView *_rightLineView;
    NSString *_singerNameVaildString;
    UILabel *_lblRadioName;
    UIView *_subRadioTopView;
    long long _currentRqeustSubRadioId;
    TryListenVoiceSheet *_tryListenVoiceSheet;
    Play_SongInfoView *_playSongInfoView;
    NSMutableArray *_delayInitViewSelectNameList;
    KGPlayViewMenuListController *_menuListVC;
    NSDictionary *_singerList;
    NSString *_songIdentificationKey;
    KGProgressView *_tipsViewForDanmuClosed;
}

+ (_Bool)isClickEQViewNowViperSoundTip;
+ (_Bool)isClickPlayViewNowViperSoundTip;
@property(retain, nonatomic) KGProgressView *tipsViewForDanmuClosed; // @synthesize tipsViewForDanmuClosed=_tipsViewForDanmuClosed;
@property(retain, nonatomic) NSString *songIdentificationKey; // @synthesize songIdentificationKey=_songIdentificationKey;
@property(retain, nonatomic) NSDictionary *singerList; // @synthesize singerList=_singerList;
@property(nonatomic) _Bool isSingerMatchRequsting; // @synthesize isSingerMatchRequsting=_isSingerMatchRequsting;
@property(retain, nonatomic) KGPlayViewMenuListController *menuListVC; // @synthesize menuListVC=_menuListVC;
@property(retain, nonatomic) NSMutableArray *delayInitViewSelectNameList; // @synthesize delayInitViewSelectNameList=_delayInitViewSelectNameList;
@property(retain, nonatomic) Play_SongInfoView *playSongInfoView; // @synthesize playSongInfoView=_playSongInfoView;
@property(retain, nonatomic) TryListenVoiceSheet *tryListenVoiceSheet; // @synthesize tryListenVoiceSheet=_tryListenVoiceSheet;
@property(nonatomic) long long currentRqeustSubRadioId; // @synthesize currentRqeustSubRadioId=_currentRqeustSubRadioId;
@property(retain, nonatomic) UIView *subRadioTopView; // @synthesize subRadioTopView=_subRadioTopView;
@property(retain, nonatomic) UILabel *lblRadioName; // @synthesize lblRadioName=_lblRadioName;
@property(nonatomic) _Bool isKuqunModelUI; // @synthesize isKuqunModelUI=_isKuqunModelUI;
@property(nonatomic) _Bool isRadioModelUI; // @synthesize isRadioModelUI=_isRadioModelUI;
@property(copy, nonatomic) NSString *singerNameVaildString; // @synthesize singerNameVaildString=_singerNameVaildString;
@property(retain, nonatomic) UIView *rightLineView; // @synthesize rightLineView=_rightLineView;
@property(retain, nonatomic) UIView *leftLineView; // @synthesize leftLineView=_leftLineView;
@property(retain, nonatomic) UIView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) SearchSongAlbumImageViewController *searchSongAlbumVC; // @synthesize searchSongAlbumVC=_searchSongAlbumVC;
@property(retain, nonatomic) SongInfo *tempSimilarytysongInfo; // @synthesize tempSimilarytysongInfo=_tempSimilarytysongInfo;
@property(retain, nonatomic) SongInfo *baseSimilarytysongInfo; // @synthesize baseSimilarytysongInfo=_baseSimilarytysongInfo;
@property(nonatomic) _Bool shouldShowSingerPotratTipProgress; // @synthesize shouldShowSingerPotratTipProgress=_shouldShowSingerPotratTipProgress;
@property(nonatomic) _Bool isCreateRecommendRadioPlayList; // @synthesize isCreateRecommendRadioPlayList=_isCreateRecommendRadioPlayList;
@property(retain, nonatomic) KGRadioPlayList *recommendRadioPlayList; // @synthesize recommendRadioPlayList=_recommendRadioPlayList;
@property(retain, nonatomic) RecommedRadioDescriptionViewController *recommedRadioDescriptionViewController; // @synthesize recommedRadioDescriptionViewController=_recommedRadioDescriptionViewController;
@property(retain, nonatomic) UILabel *playTypeOfRadioDescription; // @synthesize playTypeOfRadioDescription=_playTypeOfRadioDescription;
@property(retain, nonatomic) SearchLyricPreviewViewController *searchLyricPreviewViewController; // @synthesize searchLyricPreviewViewController=_searchLyricPreviewViewController;
@property(retain, nonatomic) KGContentViewController *searchLyricNavigation; // @synthesize searchLyricNavigation=_searchLyricNavigation;
@property(retain, nonatomic) PlayNextView *nextSongView; // @synthesize nextSongView=_nextSongView;
@property(retain, nonatomic) PlayNextView *preSongView; // @synthesize preSongView=_preSongView;
@property(nonatomic) _Bool swipeToRecommedAnimationIsOn; // @synthesize swipeToRecommedAnimationIsOn=_swipeToRecommedAnimationIsOn;
@property(retain, nonatomic) UIView *translateBackView; // @synthesize translateBackView=_translateBackView;
@property(nonatomic) _Bool isLyricModelChanging; // @synthesize isLyricModelChanging=_isLyricModelChanging;
@property(retain, nonatomic) UIImageView *logoView; // @synthesize logoView=_logoView;
@property(retain, nonatomic) UIButton *toMvBtn; // @synthesize toMvBtn=_toMvBtn;
@property(retain, nonatomic) KGSkinButton *voiceQuality; // @synthesize voiceQuality=_voiceQuality;
@property(retain, nonatomic) NSLayoutConstraint *twoLyriceHeightCt; // @synthesize twoLyriceHeightCt=_twoLyriceHeightCt;
@property(retain, nonatomic) NSLayoutConstraint *ajustViewHeightCt; // @synthesize ajustViewHeightCt=_ajustViewHeightCt;
@property(retain, nonatomic) NSLayoutConstraint *footViewHeightCt; // @synthesize footViewHeightCt=_footViewHeightCt;
@property(retain, nonatomic) NSLayoutConstraint *playBarHeightCt; // @synthesize playBarHeightCt=_playBarHeightCt;
@property(retain, nonatomic) NSLayoutConstraint *subCenterHeightCt; // @synthesize subCenterHeightCt=_subCenterHeightCt;
@property(retain, nonatomic) NSLayoutConstraint *btnHeightCt; // @synthesize btnHeightCt=_btnHeightCt;
@property(retain, nonatomic) NSLayoutConstraint *mutilineLyricCenterCt; // @synthesize mutilineLyricCenterCt=_mutilineLyricCenterCt;
@property(retain, nonatomic) KGPlayViewFootViewController *footViewVC; // @synthesize footViewVC=_footViewVC;
@property(retain, nonatomic) NSLayoutConstraint *ImageBgViewLeftCt; // @synthesize ImageBgViewLeftCt=_ImageBgViewLeftCt;
@property(retain, nonatomic) UILongPressGestureRecognizer *longGesture; // @synthesize longGesture=_longGesture;
@property(retain, nonatomic) UITapGestureRecognizer *doubletap; // @synthesize doubletap=_doubletap;
@property(retain, nonatomic) UIPanGestureRecognizer *panEvent; // @synthesize panEvent=_panEvent;
@property(retain, nonatomic) UITapGestureRecognizer *tapEvent; // @synthesize tapEvent=_tapEvent;
@property(retain, nonatomic) NSPointerArray *delegateArray; // @synthesize delegateArray=_delegateArray;
@property(nonatomic) _Bool isManualLeave; // @synthesize isManualLeave=_isManualLeave;
@property(nonatomic) _Bool isDanmakuCanShow; // @synthesize isDanmakuCanShow=_isDanmakuCanShow;
@property(retain, nonatomic) UIButton *eqBtn; // @synthesize eqBtn=_eqBtn;
@property(retain, nonatomic) LyricsTypeButton *towLineTypeButton; // @synthesize towLineTypeButton=_towLineTypeButton;
@property(nonatomic) _Bool nextPartInitIsOver; // @synthesize nextPartInitIsOver=_nextPartInitIsOver;
@property(nonatomic) _Bool firstPartInitIsOver; // @synthesize firstPartInitIsOver=_firstPartInitIsOver;
@property(nonatomic) _Bool isEditingSongDanmaku; // @synthesize isEditingSongDanmaku=_isEditingSongDanmaku;
@property(nonatomic) _Bool isSongDanmakuMode; // @synthesize isSongDanmakuMode=_isSongDanmakuMode;
@property(nonatomic) long long groupRole; // @synthesize groupRole=_groupRole;
@property(nonatomic) _Bool lastTimeIsLeave; // @synthesize lastTimeIsLeave=_lastTimeIsLeave;
@property(retain, nonatomic) UIView *guideView; // @synthesize guideView=_guideView;
@property(nonatomic) _Bool lyric_warning_state; // @synthesize lyric_warning_state=_lyric_warning_state;
@property(retain, nonatomic) LyricWarningViewController *lyric_warning; // @synthesize lyric_warning=_lyric_warning;
@property(retain, nonatomic) UIButton *playTypeOfRadioBtn; // @synthesize playTypeOfRadioBtn=_playTypeOfRadioBtn;
@property(nonatomic) _Bool isChangeOutSimilarity; // @synthesize isChangeOutSimilarity=_isChangeOutSimilarity;
@property(retain, nonatomic) RecommenedInfoView *recommendedSongsSwipeView; // @synthesize recommendedSongsSwipeView=_recommendedSongsSwipeView;
@property(retain, nonatomic) KQGroupInfoEntity *groupInfo; // @synthesize groupInfo=_groupInfo;
@property(nonatomic) long long lastPlayTypeBySimilarity; // @synthesize lastPlayTypeBySimilarity=_lastPlayTypeBySimilarity;
@property(retain, nonatomic) KGPlayListBase *lastPlaylistBySimilarity; // @synthesize lastPlaylistBySimilarity=_lastPlaylistBySimilarity;
@property(retain, nonatomic) UIButton *toFXRoomBtn; // @synthesize toFXRoomBtn=_toFXRoomBtn;
@property(nonatomic) __weak FXRoomShowView *fxRoomShowView; // @synthesize fxRoomShowView=_fxRoomShowView;
@property(retain, nonatomic) RoomSongInfo *roomInfo; // @synthesize roomInfo=_roomInfo;
@property(retain, nonatomic) KGThemeButton *toDanmakuButton; // @synthesize toDanmakuButton=_toDanmakuButton;
@property(retain, nonatomic) UIButton *toKTVButton; // @synthesize toKTVButton=_toKTVButton;
@property(retain, nonatomic) ExternalPlayerChooseViewController *externalPlayerChooseVC; // @synthesize externalPlayerChooseVC=_externalPlayerChooseVC;
@property(retain, nonatomic) UIButton *airPlayDlnaBtn; // @synthesize airPlayDlnaBtn=_airPlayDlnaBtn;
@property(retain) NSArray *rendererArray; // @synthesize rendererArray=_rendererArray;
@property(retain, nonatomic) UITableView *renderListView; // @synthesize renderListView=_renderListView;
@property(retain, nonatomic) UIView *renderListBackView; // @synthesize renderListBackView=_renderListBackView;
@property(retain, nonatomic) UIButton *dlnaIconBtn; // @synthesize dlnaIconBtn=_dlnaIconBtn;
@property(nonatomic) long long dlnaplayState; // @synthesize dlnaplayState=_dlnaplayState;
@property(nonatomic) long long airplayState; // @synthesize airplayState=_airplayState;
@property(retain, nonatomic) UIButton *airPlayButton; // @synthesize airPlayButton=_airPlayButton;
@property(retain, nonatomic) MPVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(retain, nonatomic) KGPlayBgViewController *playImageBgView; // @synthesize playImageBgView=_playImageBgView;
@property(retain, nonatomic) KGPlayViewBarViewController *barViewVC; // @synthesize barViewVC=_barViewVC;
@property(retain, nonatomic) NSLayoutConstraint *lyricMutiLineBottomCt; // @synthesize lyricMutiLineBottomCt=_lyricMutiLineBottomCt;
@property(retain, nonatomic) NSLayoutConstraint *lyricMutiLineTopCt; // @synthesize lyricMutiLineTopCt=_lyricMutiLineTopCt;
@property(nonatomic) double lyricMultiViewHeght; // @synthesize lyricMultiViewHeght=_lyricMultiViewHeght;
@property(nonatomic) long long lyricLineDefaultNumbers; // @synthesize lyricLineDefaultNumbers=_lyricLineDefaultNumbers;
@property(retain, nonatomic) LyricViewMultiLine *lyricMultiView; // @synthesize lyricMultiView=_lyricMultiView;
@property(retain, nonatomic) UIView *mutilineBackView; // @synthesize mutilineBackView=_mutilineBackView;
@property(retain, nonatomic) LyricViewTowLine *lyricTowView; // @synthesize lyricTowView=_lyricTowView;
@property(nonatomic) int lyricTypeBeforFullShow; // @synthesize lyricTypeBeforFullShow=_lyricTypeBeforFullShow;
@property(retain, nonatomic) SongLyricDownLoadLogicThread *lyricLogicthread; // @synthesize lyricLogicthread=_lyricLogicthread;
@property(copy, nonatomic) NSString *lyricPath; // @synthesize lyricPath=_lyricPath;
@property(retain, nonatomic) UIView *topBtnsContentView; // @synthesize topBtnsContentView=_topBtnsContentView;
@property(nonatomic) _Bool sleep; // @synthesize sleep=_sleep;
@property(retain, nonatomic) UIButton *quitBtn; // @synthesize quitBtn=_quitBtn;
@property(retain, nonatomic) UIButton *imageModelBtn; // @synthesize imageModelBtn=_imageModelBtn;
@property(retain, nonatomic) UIView *footView; // @synthesize footView=_footView;
@property(retain, nonatomic) UIView *barBgView; // @synthesize barBgView=_barBgView;
@property(retain, nonatomic) UIView *subCenterView; // @synthesize subCenterView=_subCenterView;
@property(retain, nonatomic) UIView *adjustView; // @synthesize adjustView=_adjustView;
@property(retain, nonatomic) UIView *centerView; // @synthesize centerView=_centerView;
@property(retain, nonatomic) UIView *topBtnsView; // @synthesize topBtnsView=_topBtnsView;
@property(retain, nonatomic) UIView *titleView; // @synthesize titleView=_titleView;
- (void).cxx_destruct;
- (void)actionHideTips:(id)arg1;
- (void)updateSongMVHash:(id)arg1;
- (void)sendBILeavePlayViewWithRuning;
- (void)sendBIWithSelectRunMode;
- (void)mvHashMatchBll:(id)arg1 didLoadedMvHashBySongInfo:(id)arg2;
- (void)iPLimitChnage:(id)arg1;
- (id)sortSingerList:(id)arg1;
- (void)handleSingerClicked:(id)arg1 withActionSender:(id)arg2;
- (void)checkAndShowSingerListQueryLoadingStatus:(id)arg1;
- (void)selectSingerFinish:(id)arg1;
- (void)KGUsingControllerState:(int)arg1;
- (long long)showPlayBarWay;
- (void)onPlayViewSubViewWillHide;
- (void)onPlayViewSubViewWillShow;
- (double)currentSongPlayingTime;
- (void)resetRecommendViewFrame;
- (void)playListChange:(id)arg1;
- (void)saveGroupInfo;
- (void)changeToNormalUI;
- (void)changeToRadioUI;
- (void)changeToKuQunUI;
- (void)outSideWebSkipWithRadioInfo:(id)arg1;
- (void)outSideWebSkipWithSongInfos:(id)arg1;
- (void)outSideWebSkipWithSongInfo:(id)arg1;
- (void)uLinkSkipWithSongInfo:(id)arg1;
- (void)dismissRecommedRadioDescriptionViewController;
- (_Bool)isCurrentSongSimilarityRadioType;
- (void)playTypeOfRadioBtnTaped;
- (void)reductionLastKuqunData;
- (void)reductionLastRadioData;
- (void)reductionLastStatue;
- (void)adaptationUIByPlayMode;
- (_Bool)isRadioPlaylist;
- (_Bool)isTryChangeQualitying;
- (id)searchLyricViewController;
- (id)lyricFontView;
- (id)lyricFontViewBlur;
- (id)songMoreContent;
- (id)songMoreMusic;
- (id)barView;
- (void)showStatisticsOfMutiLineTranslationLyric;
- (void)showStatisticsOfMVBtnAndKtvBtn;
- (void)unShowMenu;
- (void)songMoreMusicEffectSetBtnTapedRepeat:(id)arg1;
- (void)songMoreMusicEffectSetBtnTapedUp:(id)arg1;
- (void)showSimilarMusicWithSongInfo:(id)arg1;
- (void)SongMoreMusicSimilarityTheSongBtnTaped:(id)arg1;
- (void)songMoreMusicBtnTaped:(id)arg1;
- (void)updateSongAlbumImage:(id)arg1;
- (void)autoSearchAlbum:(id)arg1;
- (void)manualSearchSongAlbum:(id)arg1 musicName:(id)arg2;
- (void)searchSongAlbumVCDismiss;
- (void)searchSongAlbumPic;
- (void)singerImgSheetVCPush;
- (void)searchSingerPortartImg;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)SaveSingerImageEvent:(id)arg1;
- (void)SearchImageEvent:(id)arg1;
- (void)multiSingerChooseViewDismiss:(id)arg1;
- (void)albumChooseViewDismiss:(id)arg1;
- (void)changeToPicTypeMode:(long long)arg1;
- (void)albumChooseView;
- (void)imageModelChoose;
- (void)RealImgAndAlbumEvent:(id)arg1;
- (void)showFullImageEvent:(id)arg1;
- (id)isEQSettingOn;
- (void)clickOneMoreBtn;
- (void)shareComplete:(_Bool)arg1 AndErrorCode:(unsigned long long)arg2 AndErrorMsg:(id)arg3;
- (void)userStatisticSend:(id)arg1 andInfoCollector:(id)arg2 andItem:(id)arg3;
- (_Bool)clickShareViewController:(id)arg1 withItem:(id)arg2;
- (void)Play_SongInfoViewAlbumInfo:(id)arg1;
- (void)Play_SongInfoViewReport:(id)arg1;
- (void)Play_SongInfoViewSingerInfo;
- (void)callShareController:(id)arg1;
- (void)ShowLyricFontView:(_Bool)arg1 duration:(float)arg2;
- (void)showAdjustResutTitle;
- (void)AdjustSec2:(id)arg1;
- (void)AdjustSec1:(id)arg1;
- (void)SelectFontEvent:(id)arg1;
- (void)SearchEvent:(id)arg1;
- (void)LyricWrongEvent;
- (void)jumpToCollectList;
- (void)LyricWarningViewControllerRemove;
- (void)searchLyricViewControllerDismiss;
- (void)searchLyricPreviewViewControllerDismiss;
- (void)onSingerInfoClicked:(id)arg1;
- (void)SongInfoEvent:(id)arg1;
- (void)ShareSongEvent:(id)arg1;
- (void)CollectSongEvent:(id)arg1;
- (void)reportGuessMyFavorRadioClickMyFavorEventWithIsCancel:(_Bool)arg1;
- (void)AddToMyLoveEvent:(id)arg1;
- (void)DownLoadSongEvent:(id)arg1;
- (void)showMenus;
- (_Bool)p_saveImageEnabledState;
- (void)showCurrentSongTitle;
- (void)changeCurrentTopBarTitleToNextSongOrPre:(_Bool)arg1;
- (void)recoverPlaySongView;
- (void)showPreOrNextViewAnimateIsPre:(_Bool)arg1;
- (void)playSingerViewOffSetX:(double)arg1;
- (void)closeNextPlayView;
- (void)initNextPlayView;
- (void)fullScreenModePanEvent:(id)arg1;
- (void)changeSingerImageView;
- (_Bool)getLyricShowTypeToShowComercial;
- (_Bool)hasPlayViewShowFXRoom;
- (void)showRecommmendedSongsViewWithOffSet:(float)arg1 animationDuration:(float)arg2;
- (void)panEvent:(id)arg1;
- (void)mutiLineTapAction:(id)arg1;
- (void)towLineTapAction:(id)arg1;
- (void)TapEvent:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)unShowSubView;
- (void)fetchComercialInfo;
- (void)backEvent;
- (void)leaveLyricMutiLineFullScreenMode;
- (void)stopAlbumPicRotateAnimation;
- (void)leave;
- (void)firstEnterPlayView;
- (void)enterFinish;
- (void)enterFromPlayBar;
- (void)enter;
- (void)beginAngle;
- (void)showTipsUserSelectedPlayType:(int)arg1;
- (void)unShowPlayTypeListViewViewController;
- (void)unShowPlayList;
- (void)ShowPlayListEvent:(id)arg1;
- (void)BarViewPlayNextByKuqun;
- (void)BarViewplayTypeOfRadioBtnTaped;
- (void)BarViewSelectedBtnType:(long long)arg1;
- (void)BarViewChangePage:(id)arg1;
- (void)BarViewPlayListSelected;
- (void)BarViewPlayTypeSelected;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)upDataBlurView;
- (void)playBgViewUpdate;
- (void)fakeDelayChangeToSongSimulate;
- (void)handleNotification:(id)arg1;
- (void)ShowTitleNoti:(id)arg1;
- (void)PlayStateChange:(id)arg1;
- (void)playSongChanged:(id)arg1 andGroupID:(int)arg2 andPlayedSongs:(id)arg3;
- (void)RegistNoti;
- (_Bool)isShowMutiLineFullScreenMode;
- (_Bool)isInShowingRecommendSongsSwipeView;
- (_Bool)isShowRecommendSongsSwipeView;
- (void)recommenedShowMsgToastWithStr:(id)arg1 withSuccessStatus:(_Bool)arg2;
- (void)recommenedInfoSelected:(long long)arg1;
- (void)recommenedInfoPanGeustureDelegate:(id)arg1;
- (void)toKTVButtonClick:(id)arg1;
- (void)toDanmakuButtonClick:(id)arg1;
- (void)toMVButtonClick:(id)arg1;
- (id)arrPinYingLyrice;
- (id)arrTranslateLyrice;
- (void)longPressLyric:(id)arg1;
- (void)setTransitBtnFrame;
- (void)initTranslateBtn;
- (void)updateLyricBg;
- (void)setUITwoOrMutil:(long long)arg1;
- (void)ChangeLyricType:(long long)arg1;
- (void)findLyricWithError;
- (void)p_SelectLyricColorEvent:(id)arg1;
- (void)closeMultiLineSearchBtn;
- (void)setNoneLyricNeedToSearchWithMessage:(id)arg1 AndTitle:(id)arg2;
- (void)setLoadingLyricTip;
- (void)changeLyricLineShowType:(id)arg1;
- (void)resetTwoLineTypeButton;
- (void)lyricsExplainFinish:(id)arg1;
- (void)lyricViewMultiLineSearchAction;
- (void)lyricViewTwoLineSearchAction;
- (void)resetLyriceAdjustTimeLen;
- (void)p_AjustLyriceView_CallBack:(unsigned long long)arg1 withValue:(id)arg2;
- (void)loadNewKrcAndImage;
- (void)addOldLyricLoadStatisticsStateWithSong:(id)arg1;
- (void)loadMvHash;
- (void)loadNewSongKrc;
- (void)SearchLyricViewController:(id)arg1 selectionLyric:(id)arg2;
- (void)LyricViewKrcAnalysisFinish:(id)arg1;
- (void)lyricViewKrcAnalysisStart:(id)arg1;
- (void)SongLyricDownLoadLogicThread:(id)arg1 krcFileName:(id)arg2 andErrorCode:(int)arg3;
- (void)reFreshView;
- (void)progressTimerOut:(id)arg1;
- (_Bool)isEmptyPlayQueue;
- (void)ReViewSimple;
- (void)recoverPlayViewUI;
- (void)updateImageModelBtn;
- (void)showAfterCovered;
- (void)coveredByViews;
- (void)returnToPlayView;
- (void)updateEffectState:(id)arg1;
- (void)setEqBtnName:(id)arg1 used:(_Bool)arg2;
- (void)mappinColorChange:(id)arg1;
- (void)updateEQState;
- (void)updateTopBtnsFrame;
- (void)updateTopBtnsShow;
- (void)isFromTryListenSheetEnter;
- (void)tryListenVoiceSheetCheckFinish;
- (void)showTryListenVoiceSheet:(id)arg1;
- (void)showSongQualityWithType:(id)arg1;
- (void)showSongQuality:(id)arg1;
- (void)currentSongPlayQuality:(id)arg1;
- (void)sendLyricExposureStatistics;
- (_Bool)isCurrentPlayModeShowLyric;
- (void)ifSendLyricStatistics;
- (void)showTitleWithSongInfo:(id)arg1;
- (void)stopRollView;
- (void)starRollView;
- (void)initWithRollView;
- (void)makeRecommendSongsSwipeView;
- (void)matchSongInfoAccompany;
- (_Bool)toKtvButtonHidden;
- (void)initToKtv;
- (void)configKTV;
- (void)tryToShowDanmakuTips;
- (void)refreshKTVandDanmaku;
- (_Bool)p_isConfigShowDanmakuBtn;
- (void)changeToDanmakuBtnColor:(_Bool)arg1;
- (void)initToDanmaku;
- (void)configDanmaku;
- (void)airDlnaBtnAction;
- (void)initAirDlnaPlayBtn;
- (void)initAirplayMPVolumeView;
- (void)initAirPlayDlnaInfo;
- (id)fullscreenlogo;
- (void)playViewDataSetInitState;
- (void)makeProgressView;
- (void)kuqunUiToNormalUI;
- (void)addDelegate:(id)arg1;
- (void)lyricTypeInit;
- (void)initFootView;
- (void)initBarView;
- (id)creatBarView;
- (void)fitMutilLyricScreen;
- (void)initLyricView;
- (void)creactLyricView;
- (void)initSubCenterView;
- (void)initCenterView;
- (void)initTopBtnView;
- (void)textRollViewDidPauseRunning:(id)arg1;
- (double)strRectWidth:(id)arg1;
- (id)newStr:(id)arg1 withMaxWidth:(double)arg2;
- (void)adjustLineWithSingerName:(id)arg1;
- (void)initSingerLabelLine;
- (void)initTitleLables;
- (void)initImageView;
- (void)btnAction;
- (void)initView;
- (void)initGesture;
- (void)didReceiveMemoryWarning;
- (void)initRemainUIWhenFirstShow;
- (void)createDelayInitSelecterList;
- (void)performDelayUIInit;
- (void)doOnCPUNotVeryBusy;
- (void)obServerwhenRunloopWillEnterWating;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (void)sendAPMFanXingRoomWithError:(id)arg1 andSqString:(id)arg2;
- (void)reShowOrStartFXRoomShowView;
- (void)setFxRoomShowViewAlpha:(double)arg1;
- (void)reShowFXRoomShowView;
- (void)hiddenFXRoomShowView;
- (void)closeFXRoomShowView;
- (void)showFXRoomInfo:(id)arg1;
- (_Bool)checkShouldShowFXRoomInfo;
- (void)stopCheckFXRoomInfo;
- (void)pushFXLive:(id)arg1;
- (void)didLoadedFxRoomInfoWithSongInfo:(id)arg1 roomInfo:(id)arg2 error:(id)arg3;
- (void)startCheckFXRoomInfo;
- (void)fxTop1WSongBllDidStoped:(id)arg1 startTime:(id)arg2;
- (void)fxTop1WSongBLL:(id)arg1 didLoadedFxRoomInfoWithSongInfo:(id)arg2 roomInfo:(id)arg3 startTime:(id)arg4 error:(id)arg5;
- (void)fxTop1WSongBll:(id)arg1 startLoadFxRoomInfoWithSongInfo:(id)arg2 startTime:(id)arg3;
- (void)setSequenceStringDic:(id)arg1;
- (id)sequenceStringDic;
@property(retain, nonatomic) UIImageView *picModeRepPoint;
- (void)hidPicModelRedPoint;
- (void)showPicModelRedPoint;
- (void)showPicModeTipsIfNeed;
@property(nonatomic) unsigned long long pointShowType; // @dynamic pointShowType;
@property(retain, nonatomic) UIImageView *eqBtnRedPoint;
- (void)setHaveSelectMoreEffect;
- (void)setHaveEnterEQ;
- (void)eqbtnPress;
- (void)updateRedPointFrame;
- (void)initEqbtnRedPoint;
- (_Bool)IsHaveShowViperGuide;
- (_Bool)isShowNewViperGuide;
- (void)showViperGuideTipsTipsView;
- (void)showNewViperSoundTipsView;
- (long long)daysBetweenDate:(id)arg1 andDate:(id)arg2;
- (id)dateFromString:(id)arg1;
- (void)saveUpdateTime:(id)arg1;
- (void)saveNewCheckTime;
- (_Bool)isShowNewViperSoundWithInfo:(id)arg1 WithSource:(unsigned long long)arg2;
- (_Bool)isTimeToCheckViperUpdate;
- (void)checkNewViperSoundWithSource:(unsigned long long)arg1 FromService:(CDUnknownBlockType)arg2;
- (void)checkNewViperSound;
- (void)checkAboutViperTips;
- (void)showPlayTypeSelector;
- (void)externalPlayerChooseVCDissmiss;
- (void)showExternalPlayerChooseView;
- (void)setAirPlayDlnaBtnLinked:(_Bool)arg1 hidden:(_Bool)arg2;
- (void)airPlayDlnaBtnAction;
- (void)updateAirPlay:(long long)arg1 dlnaPlayState:(long long)arg2;
- (void)updateExternPlayBtn;
- (void)updateAirPlayStateChange;
- (id)capture:(id)arg1;
- (void)callComplete:(id)arg1 AndShareItem:(id)arg2;
- (id)createQRBottomView:(id)arg1;
- (id)addQRBottomToShareViewWithScreenShotImage:(id)arg1 url:(id)arg2;
- (void)shareHandler:(id)arg1 shareItem:(id)arg2;
- (void)shareView:(id)arg1 itemDidSelected:(id)arg2;
- (void)shareViewDidDismiss:(id)arg1;
- (void)shareViewWillShow:(id)arg1;
- (id)shareItems;
- (void)takeScreenShotNotification:(id)arg1;
- (void)addTakeScreenShotNotif;
- (void)dealloc;
@property(retain, nonatomic) UIImage *shareViewScreenShotImage;
@property(retain, nonatomic) NSString *shareSongUrl;
@property(retain, nonatomic) SongInfo *currentShareSong;
@property(retain, nonatomic) KGPlaySongShareView *shareView;
- (_Bool)isHideToDanmakuButton;
- (double)requireCurrentSongPlayingTime;
- (void)clearTextInDanamkuEditView;
- (id)createSongDanmakuInfoWithContent:(id)arg1;
- (void)dealWithDanmakuWhenAppDidBecomeActive;
- (void)dealWithDanmakuWhenSubViewWillLeave;
- (void)dealWithDanmakuWhenSubViewWillEnter;
- (void)dealWithDanmakuWhenPlayViewEnterFinish;
- (void)dealWithDanmakuWhenPlayViewLeave;
- (void)dealWithWhenCurrentSongHasChanged;
- (void)dealWithDanmakuOnCurrentSongChange:(int)arg1;
- (void)succeedToAddDanmaku:(id)arg1;
- (void)failedToRequireDanmakuWithCurrentSong:(id)arg1 isConnectedToNetwork:(_Bool)arg2;
- (void)succeedToRequireDanmakuWithCurrentSong:(id)arg1;
- (void)requiringDanmakuWithCurrentSong;
- (void)showDanmakuViewInSongCommentView:(id)arg1;
- (void)nonsupportDanmakuWithCurrentSong;
- (long long)requireCountOfCommentsByButton:(id)arg1;
- (void)viewController:(id)arg1 didClickOnConfigButton:(id)arg2;
- (id)viewControllerRequireConfigInfo:(id)arg1;
- (void)viewController:(id)arg1 didSendDanmaku:(id)arg2 andSongInfo:(id)arg3;
- (void)loginSuccess;
- (void)webViewWillRemove;
- (void)touchUpOnRefreshDanmakuBotton:(id)arg1;
- (void)touchDownOnRefreshDanmakuBotton:(id)arg1;
- (void)requireDanmakuAgain:(id)arg1;
- (void)clickDanmakuEditButton:(id)arg1;
- (void)onClickSongAllCommentsButton:(id)arg1;
- (void)dealWithWhenDanmakuActiveValueChanged:(_Bool)arg1;
- (void)dealWithDanmakuWhilePlayViewChangeSong;
- (void)dealWithDanmakuWhilePlayViewAngleBegan;
- (void)dealWithDanmakuWhileDoubleTapOnFullScreenLyric;
- (void)dealWithDanmakuWhileTapOnTowLineLyric;
- (void)dealWithDanmakuWhilePlayViewWillExpose;
- (void)dealWithDanmakuWhilePlayViewWillCovered;
- (void)dealWithDanmakuWhileLyricTypeChange:(int)arg1;
- (void)dealWithDanmakuWhileRecommendedSongsSwipeViewHidden:(_Bool)arg1;
- (void)changeDanmakuEditButtonAlpha:(double)arg1;
- (void)changeSongDanmakuViewAlpha:(double)arg1;
- (void)hideDanmakuErrorTipView;
- (void)showDanmakuErrorTipView;
- (void)hideDanmakuEmptyTipView;
- (void)showDanmakuEmptyTipView;
- (void)hideDanmakuLoadingView;
- (void)showDanmakuLoadingView;
- (void)showSongCommentWithDanmaku:(id)arg1;
- (void)onClickDanmakuEntrance;
- (void)hideDanmakuEntrance;
- (void)showDanmakuEntrance;
- (void)hideSongDanmakuView;
- (void)showSongDanmakuView;
- (_Bool)canEnterSongDanmakuMode;
- (void)exitSongDanmakuMode;
- (void)enterSongDanmakuMode;
- (_Bool)canShowDanmakuEditorGuidance;
- (void)setDanmakuMultipleErrorTipView:(id)arg1;
- (id)danmakuMultipleErrorTipView;
- (void)hideDanamkuEditView:(id)arg1;
- (void)showDanamkuEditView:(id)arg1;
- (void)showConfirmToPassTheTestAlertView;
- (_Bool)checkHadPassedTestToEditDanmu;
- (void)checkUserHadBindPhone;
- (void)resizeSongDanmakuView:(double)arg1;
- (void)tapOnDanmakuEditingMask:(id)arg1;
- (void)setIsExaming:(_Bool)arg1;
- (_Bool)isExaming;
- (void)setAlreadySendBIForDanmakuExposure:(_Bool)arg1;
- (_Bool)alreadySendBIForDanmakuExposure;
- (void)setDanmakuEditViewIsAnimatingToShow:(_Bool)arg1;
- (_Bool)danmakuEditViewIsAnimatingToShow;
- (void)setIsEditingDanmakuBeforePlayViewLeave:(_Bool)arg1;
- (_Bool)isEditingDanmakuBeforePlayViewLeave;
- (void)setIsEditingDanmakuBeforeAppResignActive:(_Bool)arg1;
- (_Bool)isEditingDanmakuBeforeAppResignActive;
- (void)setDanmakuEditingMask:(id)arg1;
- (id)danmakuEditingMask;
- (void)setDanmakuErrorTipView:(id)arg1;
- (id)danmakuErrorTipView;
- (void)setDanmakuEmptyTipView:(id)arg1;
- (id)danmakuEmptyTipView;
- (void)setAlreadyShownDanmakuGuide:(_Bool)arg1;
- (_Bool)alreadyShownDanmakuGuide;
- (void)setSongHashBeforeAppResignActive:(id)arg1;
- (id)songHashBeforeAppResignActive;
- (void)setLyricTypeBeforeEnterDanmakuMode:(int)arg1;
- (int)lyricTypeBeforeEnterDanmakuMode;
@property(retain, nonatomic) KGSongDanmakuManager *songDanmakuManager;
@property(retain, nonatomic) KGSongDanmakuEditViewController *danmakuEditViewController;
@property(retain, nonatomic) KGSongDanmakuEditButton *danmakuEditButton;
@property(retain, nonatomic) KGSongAllCommentsButton *songAllCommentsButton;
@property(retain, nonatomic) CALayer *songDanmakuMaskLayer;
@property(retain, nonatomic) KGBaseDanmakuView *baseDanmakuView;
@property(retain, nonatomic) UIView *songDanmakuView;
- (void)sendBIWithShowRunMode_NoStartRun;
- (void)sendBIWithClickMapBtn;
- (void)sendStopBI;
- (void)start321GoAnimationFinish:(id)arg1;
- (void)start321GoAnimation:(long long)arg1;
- (void)checkAuthority;
- (void)mapBtnEvent;
- (void)clickBtnMap:(id)arg1;
- (void)outPlayViewWithRunRadioModel;
- (void)enterPlayViewWithRunRadioModel;
- (double)designAnimationHeight;
- (double)designHeightStartBg;
- (double)designHeightStartBtn;
- (double)heightStartBg;
- (double)heightStartBtn;
- (id)startButtonImage;
- (void)requestRunnerCount;
- (void)tapGestureEvent:(id)arg1;
- (void)rmSoundGuideView;
- (void)afterTimeRemove;
- (_Bool)isNeedShowSoundGuide;
- (void)showHealthAuthorizeAlert;
- (void)showLocationAuthorizeAlert;
- (void)clickRunSoundBtn:(id)arg1;
@property(retain, nonatomic) UIImageView *starRunAnimatImageView;
- (id)arrImages;
@property(retain, nonatomic) NSMutableArray *currentRunSongList;
@property(nonatomic) UIImageView *runSoundGuidView;
@property(retain, nonatomic) UIView *runRadioView;
@property(nonatomic) _Bool curIsRunRadioUI;
@property(retain, nonatomic) UIButton *mapBtn;
@property(retain, nonatomic) UIButton *runSoundBtn;
@property(retain, nonatomic) KGRunnerCountTipView *runnerCountTipView;
@property(retain, nonatomic) KGRadioStartButton *runStartBtn;
@property(retain, nonatomic) UILabel *lblStart;
@property(retain, nonatomic) UIView *grayCoverView;
- (void)confirmStopRunning;
- (void)stopRun;
- (void)startRun;
- (void)addSongIntoCurrentRunSongList:(id)arg1;
- (void)updateUI;
- (void)resetRunData;
- (void)createRunRadioModelUI;
- (void)changeRunModelAlpha:(double)arg1;
- (void)exitRunRadioModel;
- (void)toRunRadioModel;
- (long long)dlnaPlayerState;
- (void)playCurrentSongOnPhone;
- (void)connectState:(long long)arg1;
- (void)UpdateRenders:(id)arg1;
- (void)showToastText:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)checkView;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)dlnaBtnClick;
- (void)refreshAction;
- (void)autoShowDlnaIcon;
- (void)initDlnaIcon;
- (void)unShowList;
- (void)showRenderersView;
- (void)resetRendererlistView;
- (void)initDlnaInfo;
- (void)kgMPVolumeViewWirelessRoutesActiveDidChange:(id)arg1;
- (void)kgMPVolumeViewWirelessRoutesAvailableDidChange:(id)arg1;
- (long long)airPlayerState;
- (void)setAirPlayButtonSelected:(_Bool)arg1;
- (void)airPlayStateChange;
- (void)initAirplayView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) KGThemeImageView *picModeTipsView;
@property(readonly) Class superclass;

@end

