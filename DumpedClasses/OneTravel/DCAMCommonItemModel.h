//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TRBaseModel.h"

@class DCAMTimeModel<Optional>, DCNoteInfoModel<Optional>, NSArray<Optional>, NSArray<Optional><DCAMShowConferModel>, NSNumber<Optional>, NSString<Optional>;

@interface DCAMCommonItemModel : TRBaseModel
{
    NSNumber<Optional> *_type;
    NSString<Optional> *_must_select;
    NSString<Optional> *_title;
    DCNoteInfoModel<Optional> *_sub_title_default;
    DCAMTimeModel<Optional> *_min_conf;
    DCAMTimeModel<Optional> *_max_conf;
    NSString<Optional> *_key;
    NSArray<Optional><DCAMShowConferModel> *_sub_title_show_conf;
    NSString<Optional> *_need_default_value;
    NSString<Optional> *_default_value;
    NSString<Optional> *_unit;
    NSArray<Optional> *_item_list;
}

@property(retain, nonatomic) NSArray<Optional> *item_list; // @synthesize item_list=_item_list;
@property(retain, nonatomic) NSString<Optional> *unit; // @synthesize unit=_unit;
@property(copy, nonatomic) NSString<Optional> *default_value; // @synthesize default_value=_default_value;
@property(copy, nonatomic) NSString<Optional> *need_default_value; // @synthesize need_default_value=_need_default_value;
@property(retain, nonatomic) NSArray<Optional><DCAMShowConferModel> *sub_title_show_conf; // @synthesize sub_title_show_conf=_sub_title_show_conf;
@property(retain, nonatomic) NSString<Optional> *key; // @synthesize key=_key;
@property(retain, nonatomic) DCAMTimeModel<Optional> *max_conf; // @synthesize max_conf=_max_conf;
@property(retain, nonatomic) DCAMTimeModel<Optional> *min_conf; // @synthesize min_conf=_min_conf;
@property(retain, nonatomic) DCNoteInfoModel<Optional> *sub_title_default; // @synthesize sub_title_default=_sub_title_default;
@property(copy, nonatomic) NSString<Optional> *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString<Optional> *must_select; // @synthesize must_select=_must_select;
@property(retain, nonatomic) NSNumber<Optional> *type; // @synthesize type=_type;
- (void).cxx_destruct;

@end

