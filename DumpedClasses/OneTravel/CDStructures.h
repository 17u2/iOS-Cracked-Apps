//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class GPBMessage, NSData, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct AudioQueueBuffer;

struct AudioRecorder {
    unsigned long long _field1;
    id _field2;
    short _field3;
    struct __CFString *_field4;
    struct OpaqueAudioQueue *_field5;
    struct AudioQueueBuffer *_field6[3];
    struct OpaqueAudioFileID *_field7;
    long long _field8;
    struct CAStreamBasicDescription _field9;
    unsigned char _field10;
};

struct BezierSubpath {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    double _field5;
    int _field6;
};

struct CAStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CDMapMatching {
    CDStruct_ebdf5f64 _field1;
    CDStruct_5ee9a22f _field2;
    CDStruct_5ee9a22f _field3;
    struct {
        int _field1;
        int _field2;
        int _field3;
        struct _DiDiRouteMapPoint *_field4;
    } _field4;
    CDStruct_38b1ad0b _field5;
    int _field6;
    _Bool _field7;
    int _field8;
    struct _CacheGpsInfo {
        struct _DiDiRouteGPSPoint _field1;
        struct _GPSPointDebugInfo _field2;
    } _field9;
    _Bool _field10;
    int _field11;
    struct _DiDiRouteGPSPoint _field12;
    struct _DiDiRouteGPSPoint _field13;
    int _field14;
    int _field15;
    int _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOSlice {
    void *_field1;
    int _field2;
    int _field3;
};

struct CQMapMatching {
    CDStruct_ebdf5f64 _field1;
    CDStruct_5ee9a22f _field2;
    CDStruct_5ee9a22f _field3;
    struct {
        int _field1;
        int _field2;
        int _field3;
        struct _QSCTXMapPoint *_field4;
    } _field4;
    CDStruct_38b1ad0b _field5;
    int _field6;
    _Bool _field7;
    int _field8;
    struct _CacheGpsInfo {
        struct _QSCTXGPSPoint _field1;
        struct _GPSPointDebugInfo _field2;
    } _field9;
    _Bool _field10;
    int _field11;
    struct _QSCTXGPSPoint _field12;
    struct _QSCTXGPSPoint _field13;
    int _field14;
    int _field15;
    int _field16;
};

struct CarRouteReqSDK {
    struct SimplePOIRequestInfo _field1;
    struct SimplePOIRequestInfo _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    int _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    int _field13;
    int _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    _Bool _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct vector<routesearch::SimplePOIRequestInfo, std::allocator<routesearch::SimplePOIRequestInfo>> _field18;
    struct vector<char, std::allocator<char>> _field19;
    struct vector<common::Point, std::allocator<common::Point>> _field20;
    int _field21;
    int _field22;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field23;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field24;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field25;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field26;
    short _field27;
    struct vector<common::Point, std::allocator<common::Point>> _field28;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field29;
    int _field30;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field31;
    struct vector<common::Gps, std::allocator<common::Gps>> _field32;
    int _field33;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
};

struct CarRouteRsp {
    int _field1;
    struct Info _field2;
    struct vector<routesearch::CarRoute, std::allocator<routesearch::CarRoute>> _field3;
    struct Start_roads _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
};

struct CarRouteSegment {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    struct vector<routesearch::BR, std::allocator<routesearch::BR>> _field11;
    struct vector<routesearch::Tip, std::allocator<routesearch::Tip>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    int _field14;
    int _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    int _field17;
    struct vector<routesearch::KP, std::allocator<routesearch::KP>> _field18;
    struct vector<routesearch::Park, std::allocator<routesearch::Park>> _field19;
    struct vector<routesearch::Light, std::allocator<routesearch::Light>> _field20;
    struct vector<routesearch::SP, std::allocator<routesearch::SP>> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field23;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field24;
    int _field25;
    struct vector<routesearch::Inter, std::allocator<routesearch::Inter>> _field26;
    struct vector<routesearch::LaneInfo, std::allocator<routesearch::LaneInfo>> _field27;
    int _field28;
    struct vector<int, std::allocator<int>> _field29;
    int _field30;
    struct vector<routesearch::SpeedInfo, std::allocator<routesearch::SpeedInfo>> _field31;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field32;
    int _field33;
    int _field34;
    int _field35;
    struct vector<routesearch::LinkIdInfo, std::allocator<routesearch::LinkIdInfo>> _field36;
    struct vector<routesearch::SpecialGuidance, std::allocator<routesearch::SpecialGuidance>> _field37;
    struct vector<routesearch::CarRouteSegmentRoadNames, std::allocator<routesearch::CarRouteSegmentRoadNames>> _field38;
    struct vector<routesearch::WhiteBound, std::allocator<routesearch::WhiteBound>> _field39;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field40;
    int _field41;
};

struct CarSegmentLayer {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
};

struct CityDataUpdateParam_ {
    double lastUpdateTime_;
    int availableNum;
};

struct DMPoint {
    int x;
    int y;
};

struct DMRect {
    struct DMPoint origin;
    struct DMSize size;
};

struct DMSize {
    int width;
    int height;
};

struct DMapIconInfo {
    char _field1[512];
    struct _DDMapPoint _field2;
    float _field3;
    float _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    void *_field9;
};

struct DMapRouteSectionWithName {
    int _field1;
    int _field2;
    int _field3;
    unsigned short _field4[64];
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct Info {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct SimplePOIResultInfo _field5;
    struct SimplePOIResultInfo _field6;
    int _field7;
    struct Taxi _field8;
    int _field9;
    int _field10;
    struct vector<routesearch::PassPtInfo, std::allocator<routesearch::PassPtInfo>> _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
};

struct KKCSSStyleStringValue {
    char *_field1;
    struct KKCSSStyleStringValue *_field2;
};

struct KKEdge {
    struct KKValue _field1;
    struct KKValue _field2;
    struct KKValue _field3;
    struct KKValue _field4;
};

struct KKProperty {
    char *_field1;
    CDUnknownFunctionPointerType _field2;
    _Bool _field3;
};

struct KKStyle {
    struct KKProperty *_field1;
    char *_field2;
    char *_field3;
};

struct KKValue {
    double _field1;
    double _field2;
    double _field3;
};

struct MapIconInfo {
    char _field1[512];
    struct _TXMapPoint _field2;
    float _field3;
    float _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    void *_field9;
};

struct MapRouteSectionWithName {
    int _field1;
    int _field2;
    int _field3;
    unsigned short _field4[64];
};

struct NSDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct OMGCrashManagerCallbacks {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct POPAnimatorItem;

struct Package {
    short _field1;
    int _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    int _field4;
    char _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct vector<char, std::allocator<char>> _field8;
    struct vector<char, std::allocator<char>> _field9;
    struct vector<sosomap::Tag, std::allocator<sosomap::Tag>> _field10;
};

struct Point {
    int _field1;
    int _field2;
};

struct RACSubject {
    Class _field1;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SimplePOIRequestInfo {
    struct Point _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
};

struct SimplePOIResultInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct Point _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    int _field4;
    int _field5;
    struct SimpleXPInfo _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
};

struct SimpleXPInfo {
    int _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct Point _field3;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StartEndInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    int _field2;
    struct SimpleXPInfo _field3;
};

struct Start_roads {
    struct vector<routesearch::Bound, std::allocator<routesearch::Bound>> _field1;
    struct vector<routesearch::Road, std::allocator<routesearch::Road>> _field2;
};

struct Taxi {
    int _field1;
    int _field2;
    struct vector<routesearch::Fee, std::allocator<routesearch::Fee>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
};

struct TempMatchedGPSPoint;

struct Traffic {
    int _field1;
    int _field2;
    int _field3;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct VKColorRGB {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct WalkRoute {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    int _field2;
    int _field3;
    struct vector<routesearch::WalkRouteSegment, std::allocator<routesearch::WalkRouteSegment>> _field4;
    struct StartEndInfo _field5;
    struct StartEndInfo _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
};

struct WalkRouteRsp {
    int _field1;
    struct Info _field2;
    struct vector<routesearch::WalkRoute, std::allocator<routesearch::WalkRoute>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
};

struct _00066 {
    struct _00651 {
        struct _00651 {
            struct _00219 _field1;
            struct _00219 _field2;
        } _field1;
        int _field2;
        int _field3;
        float _field4;
    } _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    struct _00445 {
        struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> _field1;
    } _field7;
    struct _00206 {
        struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> _field1;
    } _field8;
    struct _00599 _field9;
    struct _00084 {
        struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
        _Bool _field2;
    } _field10;
    struct _00460 _field11;
    int _field12;
    struct _00111 {
        struct _00184 _field1;
        struct _00599 _field2;
    } _field13;
};

struct _00184 {
    int _field1;
    struct _00210 {
        _Bool _field1;
        struct _00367 _field2;
        struct _00367 _field3;
        struct _00599 _field4;
    } _field2;
};

struct _00219 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct _00348 {
    int _field1;
    float _field2;
    float _field3;
};

struct _00367 {
    _Bool _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct _00460 {
    unsigned long long _field1;
    struct _00650 _field2;
    float _field3;
};

struct _00599 {
    struct _00611 {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
    } _field1;
    struct _00650 _field2;
    struct _00687 {
        float _field1;
        float _field2;
    } _field3;
    struct _00348 _field4[7];
    struct _00348 _field5[7];
    unsigned long long _field6;
    struct _00671 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field7;
    struct _00614 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    struct _00621 {
        float _field1;
        float _field2;
        float _field3;
    } _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct _00650 {
    float _field1;
    float _field2;
};

struct _00716;

struct _Alloc_hider {
    char *_field1;
};

struct _CENTRAL_DIRECTORY_RECORD {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned int _field16;
    unsigned int _field17;
};

struct _DDBitmap {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    void *_field6;
    char *_field7[1];
};

struct _DDLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct _DDMapPoint {
    int x;
    int y;
};

struct _DDMapRect {
    int left;
    int top;
    int right;
    int bottom;
};

struct _DDSize {
    int _field1;
    int _field2;
};

struct _DDTextBitmap {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
};

struct _DGLMapTappedElement {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned short _field6[32];
    void *_field7;
};

struct _DRouteGuidanceEventPoint {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned short _field5[256];
    unsigned short _field6[256];
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    unsigned short _field13[256];
    unsigned short _field14[256];
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    struct _RouteGuidanceLaneInfo {
        int _field1;
        int _field2;
        struct _DiRouteGuidanceMapPoint _field3;
        char _field4[16];
        char _field5[16];
        char _field6[16];
        char _field7[16];
        int _field8;
    } _field19;
    unsigned short _field20[256];
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
};

struct _DSCTXEventPoint {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _DetectorConfig {
    double timeout;
    int maxTaskQueueSize;
    int minFaceSize;
    float maxYawAngle;
    float maxPitchAngle;
    float minBrightness;
    float maxBrightness;
    float maxMotionBlurness;
    float maxGaussianBlurness;
    float maxEyeOpen;
    float maxMouthOpen;
    float minIntegrity;
};

struct _DiDiRouteEventPoint {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned short _field5[256];
    unsigned short _field6[256];
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    unsigned short _field13[256];
    unsigned short _field14[256];
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    struct _RouteGuidanceLaneInfo {
        int _field1;
        int _field2;
        struct _DiRouteGuidanceMapPoint _field3;
        char _field4[16];
        char _field5[16];
        char _field6[16];
        int _field7;
    } _field19;
    unsigned short _field20[256];
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
};

struct _DiDiRouteGPSPoint {
    int segmentIndex;
    struct _DiDiRouteMapPoint mapPoint;
    float heading;
    int locationAccuracy;
    float velocity;
    long long timestamp;
    int source;
};

struct _DiDiRouteMapPoint {
    int x;
    int y;
};

struct _DiGuidanceMapPoint {
    int _field1;
    int _field2;
};

struct _DiRouteGuidanceMapPoint {
    int x;
    int y;
};

struct _END_OF_CENTRAL_DIRECTORY_RECORD {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct _GLMapTappedElement {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned short _field6[32];
    void *_field7;
};

struct _GPSPointDebugInfo {
    int _field1;
    int _field2;
};

struct _GuidanceMapPoint {
    int _field1;
    int _field2;
};

struct _LOCAL_FILE_HEADER {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
    char _field12[256];
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _ONESGuidanceMapPoint {
    int _field1;
    int _field2;
};

struct _OverlayLineInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char _field5[64];
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _PatchPkgVersion {
    long long _field1;
    long long _field2;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _QSCTXEventPoint {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _QSCTXGPSPoint {
    int segmentIndex;
    struct _QSCTXMapPoint mapPoint;
    float heading;
    int locationAccuracy;
    float velocity;
    long long timestamp;
    int source;
};

struct _QSCTXMapPoint {
    int x;
    int y;
};

struct _RouteGuidanceEventPoint {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned short _field5[256];
    unsigned short _field6[256];
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    unsigned short _field13[256];
    unsigned short _field14[256];
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    struct _RouteGuidanceLaneInfo {
        int _field1;
        int _field2;
        struct _RouteGuidanceMapPoint _field3;
        char _field4[16];
        char _field5[16];
        char _field6[16];
        int _field7;
    } _field19;
    unsigned short _field20[256];
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    unsigned short _field28[128];
    int _field29;
    int _field30;
    int _field31;
};

struct _RouteGuidanceMapPoint {
    int x;
    int y;
};

struct _RouteGuidanceSpecialGuidance {
    int _field1;
    int _field2;
    int _field3;
    struct _RouteGuidanceMapPoint _field4;
    int _field5;
    unsigned short _field6[32];
    unsigned short _field7[32];
    unsigned short _field8[32];
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14[3];
    unsigned short _field15[256];
};

struct _RouteGuidanceWhiteBound {
    int _field1;
    int _field2;
    int _field3;
    struct _RouteGuidanceMapPoint *_field4;
};

struct _TXBitmap {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    void *_field6;
    char *_field7[1];
};

struct _TXLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct _TXMapPoint {
    int x;
    int y;
};

struct _TXMapRect {
    int left;
    int top;
    int right;
    int bottom;
};

struct _TXSize {
    int _field1;
    int _field2;
};

struct _TXTextBitmap {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
};

struct _VoiceParam {
    int _field1;
    int _field2;
};

struct _WalkGuiderMapPoint {
    int _field1;
    int _field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct _ffi_type {
    unsigned long long _field1;
    unsigned short _field2;
    unsigned short _field3;
    struct _ffi_type **_field4;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _sekitUtil {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct _toolUtil {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct annoMargin {
    double annoTMargin;
    double annoLMargin;
    double annoBMargin;
    double annoRMargin;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct driving_safety_config_accleration_s {
    struct driving_safety_config_speed_phase_s _field1[8];
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    unsigned long long _field6;
};

struct driving_safety_config_corner_s {
    struct driving_safety_config_speed_phase_s _field1[8];
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    unsigned long long _field7;
};

struct driving_safety_config_fatiguedriving_s {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
};

struct driving_safety_config_locationinfo_s {
    double _field1;
    double _field2;
};

struct driving_safety_config_overspeed_s {
    double _field1;
    double _field2;
    double _field3;
};

struct driving_safety_config_speed_phase_s {
    double _field1[6];
    double _field2;
    double _field3;
    unsigned long long _field4;
};

struct driving_safety_configs_s {
    struct driving_safety_config_corner_s _field1;
    struct driving_safety_config_accleration_s _field2;
    struct driving_safety_config_accleration_s _field3;
    struct driving_safety_config_fatiguedriving_s _field4;
    struct driving_safety_config_overspeed_s _field5;
    struct driving_safety_config_locationinfo_s _field6;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct message_t2 {
    struct outer_header_t2 _field1;
    unsigned char _field2[1];
};

struct ntpTimestamp {
    unsigned int wholeSeconds;
    unsigned int fractSeconds;
};

struct outer_header_t2 {
    unsigned short _field1;
    unsigned short _field2;
    unsigned int _field3;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
    long long tm_gmtoff;
    char *tm_zone;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> {
    struct __compressed_pair<_00509::_00206::_00716 *, std::__1::default_delete<_00509::_00206::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> {
    struct __compressed_pair<_00509::_00445::_00716 *, std::__1::default_delete<_00509::_00445::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unz_global_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<common::Gps, std::allocator<common::Gps>> {
    struct _Vector_impl {
        struct Gps *_field1;
        struct Gps *_field2;
        struct Gps *_field3;
    } _field1;
};

struct vector<common::Point, std::allocator<common::Point>> {
    struct _Vector_impl {
        struct Point *_field1;
        struct Point *_field2;
        struct Point *_field3;
    } _field1;
};

struct vector<int, std::allocator<int>> {
    struct _Vector_impl {
        int *_field1;
        int *_field2;
        int *_field3;
    } _field1;
};

struct vector<routesearch::BR, std::allocator<routesearch::BR>> {
    struct _Vector_impl {
        struct BR *_field1;
        struct BR *_field2;
        struct BR *_field3;
    } _field1;
};

struct vector<routesearch::Bound, std::allocator<routesearch::Bound>> {
    struct _Vector_impl {
        struct Bound *_field1;
        struct Bound *_field2;
        struct Bound *_field3;
    } _field1;
};

struct vector<routesearch::CarRoute, std::allocator<routesearch::CarRoute>> {
    struct _Vector_impl {
        struct CarRoute *_field1;
        struct CarRoute *_field2;
        struct CarRoute *_field3;
    } _field1;
};

struct vector<routesearch::CarRouteSegmentRoadNames, std::allocator<routesearch::CarRouteSegmentRoadNames>> {
    struct _Vector_impl {
        struct CarRouteSegmentRoadNames *_field1;
        struct CarRouteSegmentRoadNames *_field2;
        struct CarRouteSegmentRoadNames *_field3;
    } _field1;
};

struct vector<routesearch::Fee, std::allocator<routesearch::Fee>> {
    struct _Vector_impl {
        struct Fee *_field1;
        struct Fee *_field2;
        struct Fee *_field3;
    } _field1;
};

struct vector<routesearch::Inter, std::allocator<routesearch::Inter>> {
    struct _Vector_impl {
        struct Inter *_field1;
        struct Inter *_field2;
        struct Inter *_field3;
    } _field1;
};

struct vector<routesearch::KP, std::allocator<routesearch::KP>> {
    struct _Vector_impl {
        struct KP *_field1;
        struct KP *_field2;
        struct KP *_field3;
    } _field1;
};

struct vector<routesearch::LaneInfo, std::allocator<routesearch::LaneInfo>> {
    struct _Vector_impl {
        struct LaneInfo *_field1;
        struct LaneInfo *_field2;
        struct LaneInfo *_field3;
    } _field1;
};

struct vector<routesearch::Light, std::allocator<routesearch::Light>> {
    struct _Vector_impl {
        struct Light *_field1;
        struct Light *_field2;
        struct Light *_field3;
    } _field1;
};

struct vector<routesearch::LinkIdInfo, std::allocator<routesearch::LinkIdInfo>> {
    struct _Vector_impl {
        struct LinkIdInfo *_field1;
        struct LinkIdInfo *_field2;
        struct LinkIdInfo *_field3;
    } _field1;
};

struct vector<routesearch::Park, std::allocator<routesearch::Park>> {
    struct _Vector_impl {
        struct Park *_field1;
        struct Park *_field2;
        struct Park *_field3;
    } _field1;
};

struct vector<routesearch::PassPtInfo, std::allocator<routesearch::PassPtInfo>> {
    struct _Vector_impl {
        struct PassPtInfo *_field1;
        struct PassPtInfo *_field2;
        struct PassPtInfo *_field3;
    } _field1;
};

struct vector<routesearch::Road, std::allocator<routesearch::Road>> {
    struct _Vector_impl {
        struct Road *_field1;
        struct Road *_field2;
        struct Road *_field3;
    } _field1;
};

struct vector<routesearch::SP, std::allocator<routesearch::SP>> {
    struct _Vector_impl {
        struct SP *_field1;
        struct SP *_field2;
        struct SP *_field3;
    } _field1;
};

struct vector<routesearch::SimplePOIRequestInfo, std::allocator<routesearch::SimplePOIRequestInfo>> {
    struct _Vector_impl {
        struct SimplePOIRequestInfo *_field1;
        struct SimplePOIRequestInfo *_field2;
        struct SimplePOIRequestInfo *_field3;
    } _field1;
};

struct vector<routesearch::SpecialGuidance, std::allocator<routesearch::SpecialGuidance>> {
    struct _Vector_impl {
        struct SpecialGuidance *_field1;
        struct SpecialGuidance *_field2;
        struct SpecialGuidance *_field3;
    } _field1;
};

struct vector<routesearch::SpeedInfo, std::allocator<routesearch::SpeedInfo>> {
    struct _Vector_impl {
        struct SpeedInfo *_field1;
        struct SpeedInfo *_field2;
        struct SpeedInfo *_field3;
    } _field1;
};

struct vector<routesearch::Tip, std::allocator<routesearch::Tip>> {
    struct _Vector_impl {
        struct Tip *_field1;
        struct Tip *_field2;
        struct Tip *_field3;
    } _field1;
};

struct vector<routesearch::WalkRoute, std::allocator<routesearch::WalkRoute>> {
    struct _Vector_impl {
        struct WalkRoute *_field1;
        struct WalkRoute *_field2;
        struct WalkRoute *_field3;
    } _field1;
};

struct vector<routesearch::WalkRouteSegment, std::allocator<routesearch::WalkRouteSegment>> {
    struct _Vector_impl {
        struct WalkRouteSegment *_field1;
        struct WalkRouteSegment *_field2;
        struct WalkRouteSegment *_field3;
    } _field1;
};

struct vector<routesearch::WhiteBound, std::allocator<routesearch::WhiteBound>> {
    struct _Vector_impl {
        struct WhiteBound *_field1;
        struct WhiteBound *_field2;
        struct WhiteBound *_field3;
    } _field1;
};

struct vector<sosomap::Tag, std::allocator<sosomap::Tag>> {
    struct _Vector_impl {
        struct Tag *_field1;
        struct Tag *_field2;
        struct Tag *_field3;
    } _field1;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    int _field1;
    struct _DDMapPoint *_field2;
    int _field3;
    struct _OverlayLineInfo *_field4;
    int _field5;
    float _field6;
    char _field7[512];
    _Bool _field8;
    _Bool _field9;
    int _field10;
} _MapRouteInfo_29db7c8f;

typedef struct {
    int _field1;
    struct _TXMapPoint *_field2;
    int _field3;
    struct _OverlayLineInfo *_field4;
    int _field5;
    float _field6;
    char _field7[512];
    _Bool _field8;
    _Bool _field9;
    int _field10;
    unsigned int _field11[16];
    int _field12;
    int _field13;
} _MapRouteInfo_92ca7381;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned short _field5[256];
    struct _DiRouteGuidanceMapPoint _field6;
    int _field7;
    CDUnion_55a4be2e _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    unsigned short _field20[256];
} _RouteGuidanceAccessoryPoint_cab66889;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned short _field5[256];
    struct _RouteGuidanceMapPoint _field6;
    int _field7;
    CDUnion_55a4be2e _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    unsigned short _field20[256];
    unsigned short _field21[256];
    unsigned short _field22[256];
    int _field23;
} _RouteGuidanceAccessoryPoint_87722164;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct _DiRouteGuidanceMapPoint _field4;
    int _field5;
    int _field6;
    int _field7;
} _RouteGuidanceSpeedLimit_4d0d2516;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct _RouteGuidanceMapPoint _field4;
    int _field5;
    int _field6;
    int _field7;
} _RouteGuidanceSpeedLimit_f406f2fc;

typedef struct {
    int _field1;
    int _field2;
    struct _DiRouteGuidanceMapPoint _field3;
    char _field4[16];
    char _field5[16];
    char _field6[16];
    char _field7[16];
    int _field8;
} _RouteGuidanceLaneInfo_679f55b3;

typedef struct {
    int _field1;
    int _field2;
    struct _DiRouteGuidanceMapPoint _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
} _RouteGuidanceFCrossPoint_fdf7e882;

typedef struct {
    int _field1;
    int _field2;
    struct _RouteGuidanceMapPoint _field3;
    char _field4[16];
    char _field5[16];
    char _field6[16];
    int _field7;
} _RouteGuidanceLaneInfo_be4eaff3;

typedef struct {
    int _field1;
    int _field2;
    struct _RouteGuidanceMapPoint _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
} _RouteGuidanceFCrossPoint_1ff5caba;

typedef struct {
    int _field1;
    struct _DiRouteGuidanceMapPoint _field2;
    float _field3;
    int _field4;
    float _field5;
    long long _field6;
    int _field7;
} _RouteGuidanceGPSPoint_5bddcbd0;

typedef struct {
    int segmentIndex;
    struct _DiRouteGuidanceMapPoint mapPoint;
    float heading;
    int locationAccuracy;
    float velocity;
    long long timestamp;
    int source;
} _RouteGuidanceGPSPoint_e0d7dc1f;

typedef struct {
    int _field1;
    struct _RouteGuidanceMapPoint _field2;
    float _field3;
    int _field4;
    float _field5;
    long long _field6;
    int _field7;
} _RouteGuidanceGPSPoint_c70990fd;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long state;
    id *itemsPtr;
    unsigned long long *mutationsPtr;
    unsigned long long extra[5];
} CDStruct_58648341;

typedef struct {
    unsigned long long _field1;
    int _field2;
} CDStruct_b54abf8e;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *_field1;
    char *_field2;
    char *_field3;
    unsigned int _field4;
    unsigned long long *_field5;
} CDStruct_3098c0ae;

typedef struct {
    void *_field1;
} CDStruct_7a6dc4e9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_afa449f9;

typedef struct {
    double top;
    double left;
    double bottom;
    double right;
} CDStruct_3c058996;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    int _field1;
    char _field2[16];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    unsigned short _field11[256];
} CDStruct_2c2fc40e;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int *_field4;
} CDStruct_38b1ad0b;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_762b38bc;

typedef struct {
    void *_field1;
    void *_field2;
    struct *_field3;
    CDUnknownFunctionPointerType _field4;
    void *_field5;
} CDStruct_a1491473;

typedef struct {
    int _field1;
    unsigned int _field2;
    struct _ffi_type **_field3;
    struct _ffi_type *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
} CDStruct_70df9622;

typedef struct {
    int _field1;
    struct CGPoint _field2[3];
} CDStruct_7eece9fd;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct TempMatchedGPSPoint *_field4;
} CDStruct_5ee9a22f;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct _CacheGpsInfo *_field4;
} CDStruct_ebdf5f64;

typedef struct {
    CDStruct_34734122 origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct {
    struct CLLocationCoordinate2D center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_b7cb895d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    float blurness_gaussian;
    struct CGRect face_rect;
    float eye_left_hwratio;
    float eye_right_hwratio;
    float mouth_hwratio;
    float glasses;
    float brightness;
    float integrity;
    int frame_type;
    _Bool not_video;
    float smooth_yaw;
    float smooth_pitch;
    float eye_left_det;
    float eye_right_det;
    float mouth_det;
    float eye_left_occlusion;
    float eye_right_occlusion;
    float mouth_occlusion;
    _Bool eye_blink;
    _Bool mouth_open;
    _Bool pitch3d;
    float quality;
    float smooth_quality;
} CDStruct_1e35fe44;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long x;
    long long y;
    long long z;
} CDStruct_d6af7fc0;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

#pragma mark Named Unions

union DMapVector2d {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
};

union DMapVector4f {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
};

union MapVector2d {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
};

union MapVector4f {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

typedef union {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDUnion_55a4be2e;

