//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NVMViewController.h"

#import "NVMDynamicContentViewControllerProtocol.h"
#import "NVMWebViewProgressDelegate.h"
#import "UIWebViewDelegate.h"
#import "WKNavigationDelegate.h"
#import "WKUIDelegate.h"

@class NSArray, NSDictionary, NSMutableSet, NSString, NSURL, NVMAlertController, NVMBarButtonItem, NVMEmptyHintView, NVMShareComponents, NVMWebPageTracker, NVMWebViewProgress, NVMWebViewProgressView, UIColor, UIScrollView, WKWebView;

@interface NVMWebViewController : NVMViewController <NVMWebViewProgressDelegate, WKUIDelegate, UIWebViewDelegate, WKNavigationDelegate, NVMDynamicContentViewControllerProtocol>
{
    _Bool _forceCache;
    _Bool _isWebViewScrollsToTop;
    _Bool _isFullScreenContent;
    _Bool _disableScroll;
    _Bool _disableProgress;
    _Bool _useWKWebView;
    UIColor *_webviewBackgroundColor;
    NSURL *_url;
    NSString *_sitemapKey;
    id _bridge;
    unsigned long long _navigationBarStyle;
    UIColor *_customNaviColor;
    NVMAlertController *_exitConfirmController;
    NSDictionary *_parametersForSiteMap;
    WKWebView *_webView;
    NVMBarButtonItem *_leftBackButton;
    NVMBarButtonItem *_closeButton;
    NVMBarButtonItem *_webViewGoBackButton;
    NVMBarButtonItem *_shareBarButton;
    NVMWebViewProgress *_progressProxy;
    NVMWebViewProgressView *_progressView;
    NVMEmptyHintView *_errorView;
    NSMutableSet *_notificationObservers;
    NVMWebPageTracker *_pageTracker;
}

+ (id)titleForWebViewWithURL:(id)arg1;
+ (id)nvm_bridgeNameClassMap;
+ (void)nvm_registerJSBridgeName:(id)arg1 withClass:(Class)arg2;
+ (id)nvm_notificationHandlerMap;
+ (void)nvm_registerNotificationName:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NVMWebPageTracker *pageTracker; // @synthesize pageTracker=_pageTracker;
@property(retain, nonatomic) NSMutableSet *notificationObservers; // @synthesize notificationObservers=_notificationObservers;
@property(retain, nonatomic) NVMEmptyHintView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) NVMWebViewProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) NVMWebViewProgress *progressProxy; // @synthesize progressProxy=_progressProxy;
@property(retain, nonatomic) NVMBarButtonItem *shareBarButton; // @synthesize shareBarButton=_shareBarButton;
@property(retain, nonatomic) NVMBarButtonItem *webViewGoBackButton; // @synthesize webViewGoBackButton=_webViewGoBackButton;
@property(retain, nonatomic) NVMBarButtonItem *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) NVMBarButtonItem *leftBackButton; // @synthesize leftBackButton=_leftBackButton;
@property(retain, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
@property(nonatomic, getter=isUsingWKWebView) _Bool useWKWebView; // @synthesize useWKWebView=_useWKWebView;
@property(retain, nonatomic) NSDictionary *parametersForSiteMap; // @synthesize parametersForSiteMap=_parametersForSiteMap;
@property(retain, nonatomic) NVMAlertController *exitConfirmController; // @synthesize exitConfirmController=_exitConfirmController;
@property(nonatomic) _Bool disableProgress; // @synthesize disableProgress=_disableProgress;
@property(nonatomic) _Bool disableScroll; // @synthesize disableScroll=_disableScroll;
@property(nonatomic) _Bool isFullScreenContent; // @synthesize isFullScreenContent=_isFullScreenContent;
@property(retain, nonatomic) UIColor *customNaviColor; // @synthesize customNaviColor=_customNaviColor;
@property(nonatomic) unsigned long long navigationBarStyle; // @synthesize navigationBarStyle=_navigationBarStyle;
@property(nonatomic) _Bool isWebViewScrollsToTop; // @synthesize isWebViewScrollsToTop=_isWebViewScrollsToTop;
@property(retain, nonatomic) id bridge; // @synthesize bridge=_bridge;
@property(nonatomic) _Bool forceCache; // @synthesize forceCache=_forceCache;
@property(copy, nonatomic) NSString *sitemapKey; // @synthesize sitemapKey=_sitemapKey;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (_Bool)shouldUseDarkContentStyle;
- (_Bool)isOriginURLSimilarToURL:(id)arg1;
- (long long)preferredStatusBarUpdateAnimation;
- (long long)preferredStatusBarStyle;
- (id)navBarBackgroundImage;
@property(readonly, nonatomic) UIScrollView *webScrollView;
- (void)setTitleViewWithTitle:(id)arg1;
- (void)updateNaviTitleViewWithAnimation:(_Bool)arg1;
- (void)webViewDidScrollOffset:(struct CGPoint)arg1;
- (_Bool)shouldIgnoreError:(id)arg1;
- (void)reloadWebView:(id)arg1;
- (void)showErrorView;
- (void)configManagerUpdate:(id)arg1;
- (void)removeNotification;
- (void)addNotification;
- (void)checkAndShowShareButtonIfNeeded;
- (void)refreshGoBackButton;
- (void)popOrDismissSelf;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)webViewProgress:(id)arg1 updateProgress:(float)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)triggerWebEventIfNeeded:(id)arg1;
- (void)triggerBarButtonClickEvent:(id)arg1 barItemTitle:(id)arg2;
- (void)shareButtonPressed:(id)arg1;
- (void)reload;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) UIColor *webviewBackgroundColor; // @synthesize webviewBackgroundColor=_webviewBackgroundColor;
- (void)removeShareBarButton;
- (void)showShareBarButton;
- (_Bool)isURLHostContainsDomain:(id)arg1;
- (void)addContentScriptForWKWebView;
- (id)URLRequst;
@property(readonly, nonatomic) _Bool useWebCache;
- (void)loadURLRequest;
- (void)loadProgressView;
- (void)dealloc;
- (void)viewWillFirstAppear:(_Bool)arg1;
- (void)addJSInterfaces;
- (void)loadUIWebView;
- (void)loadWKWebView;
- (void)loadWebView;
- (void)loadNavigationBar;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadBackButtonIfNeeded;
- (void)viewDidLoad;
@property(retain, nonatomic) NVMShareComponents *shareComponents;
@property(nonatomic) _Bool isProcessing;
- (void)stringByEvaluatingJavaScriptOnView:(id)arg1 script:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)firstImageSourceURLStringFromHTMLString:(id)arg1;
- (void)nvm_tryShare;
- (void)nvm_shareWithWebView:(id)arg1;
- (void)nvm_canShareWithWebView:(id)arg1 URL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)nvm_checkSharePossibilityWithWebView:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)parseHostListFromString:(id)arg1;
- (id)cacheJSInjectableHostListFromELMConfigManager;
@property(readonly, nonatomic) NSArray *jsInjectableHosts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

