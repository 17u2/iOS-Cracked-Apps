//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "KKMediaPlayerEventProtocol.h"

@class NSString, QLP2PPlayListener;

@interface QLP2PManager : NSObject <KKMediaPlayerEventProtocol>
{
    id <QLP2PDownloadListenerDelegate> _downloadDelegate;
    QLP2PPlayListener *_playListener;
}

+ (id)getInstance;
@property(retain, nonatomic) QLP2PPlayListener *playListener; // @synthesize playListener=_playListener;
@property(nonatomic) __weak id <QLP2PDownloadListenerDelegate> downloadDelegate; // @synthesize downloadDelegate=_downloadDelegate;
- (void).cxx_destruct;
- (int)DLProxyStopRequest:(int)arg1 withClipNo:(int)arg2 withRequestID:(int)arg3;
- (id)DLProxyReadRequestData:(int)arg1 withClipNo:(int)arg2 withRequestID:(int)arg3 withReadOffset:(long long)arg4;
- (id)DLProxyGetRequestContentType:(int)arg1 withClipNo:(int)arg2;
- (long long)DLProxyGetRequestFileSize:(int)arg1 withClipNo:(int)arg2;
- (int)DLProxyCreateRequest:(int)arg1 withClipNo:(int)arg2 withRequestStart:(long long)arg3 withRequestEnd:(long long)arg4;
- (id)DLProxyGetRequestM3U8ForHLS:(int)arg1;
- (int)getPlayPropertyInfo:(int)arg1 withPropertyId:(int)arg2;
- (int)getAppCurrentSpeed;
- (id)getLivePlayingInfo:(int)arg1;
- (id)getPlayingInfo:(int)arg1;
- (id)getPlayVinfo:(int)arg1;
- (_Bool)checkIsUpdating;
- (void)stopLivePlay:(int)arg1;
- (id)buildLivePlayUrl:(int)arg1;
- (int)startLivePlay:(id)arg1 withPlayID:(id)arg2 withUrls:(id)arg3 withType:(int)arg4 withVinfoJson:(id)arg5;
- (int)setNextVid:(int)arg1 withVID:(id)arg2 withFormat:(id)arg3 withCharge:(_Bool)arg4 withNew:(_Bool)arg5 withHotSpot:(_Bool)arg6 withStartTime:(int)arg7 withEndTime:(int)arg8 withExtraInfo:(id)arg9;
- (void)SetTryAccelerate:(_Bool)arg1;
- (_Bool)DownloadFacadeIsLocalVideo:(int)arg1;
- (id)makeDownloadRecordId:(id)arg1 withFormat:(id)arg2;
- (id)GetVideoStorageDirectory:(id)arg1;
- (long long)currentDownloadCanPlayDurationWithRecordID:(id)arg1;
- (id)CreateDownloadRecord;
- (_Bool)RemoveDownloadRecord:(id)arg1;
- (_Bool)AddDownloadRecord:(id)arg1;
- (id)GetDownloadRecord:(id)arg1;
- (id)GetDownloadRecords;
- (_Bool)UpdateDownloadPosition:(id)arg1;
- (_Bool)StopDownloads:(id)arg1 withTemp:(_Bool)arg2;
- (_Bool)StopDownload:(id)arg1 withTemp:(_Bool)arg2;
- (_Bool)StartDownloads:(id)arg1;
- (_Bool)StartDownload:(id)arg1 withExtraInfo:(id)arg2;
- (void)RemoveVideoStorage:(id)arg1;
- (void)LoadOfflineDownloads:(_Bool)arg1;
- (void)SwitchVideoStorage:(id)arg1;
- (void)SetVideoStorageState:(id)arg1 withState:(int)arg2;
- (void)SetVideoStorage:(id)arg1 withPath:(id)arg2;
- (long long)GetCurrentDuration:(int)arg1;
- (id)GetCurrentCDNPlayUrl;
- (void)didMediaPlayerProgressUpdated:(double)arg1 playableDuration:(double)arg2 duration:(double)arg3 dataID:(long long)arg4;
- (void)didMediaPlayerStateChanged:(int)arg1 error:(id)arg2;
- (void)startChecktime;
- (void)DownloadFacadeSetWifiStatus:(_Bool)arg1;
- (id)DownloadFacadeQualityReportGetStateInfo;
- (int)DownloadFacadeGetErrorCode:(int)arg1;
- (id)DownloadFacadeBuildCaptureImageURLMP4:(int)arg1 whitForceOnline:(_Bool)arg2;
- (int)DownloadFacadeBuildDownloadType:(int)arg1;
- (_Bool)DownloadFacadeIsCdnEncrypt:(int)arg1;
- (id)DownloadFacadeBuildLinkVID:(int)arg1;
- (id)DownloadFacadeBuildPlayVideoType:(int)arg1;
- (id)DownloadFacadeBuildPlayType:(int)arg1;
- (id)DownloadFacadeBuildPlayCDNID:(int)arg1;
- (id)DownloadFacadeBuildLogoArray:(int)arg1;
- (id)DownloadFacadeBuildPlayThumbArray:(int)arg1 whitForceOnline:(_Bool)arg2;
- (id)DownloadFacadeBuildPlayFormatArray:(int)arg1 whitForceOnline:(_Bool)arg2;
- (id)DownloadFacadeBuildPlayDurationArray:(int)arg1 whitForceOnline:(_Bool)arg2;
- (id)DownloadFacadeBuildPlayURLMP4Array:(int)arg1 whitForceOnline:(_Bool)arg2;
- (id)DownloadFacadeBuildPlayURLMP4:(int)arg1 whitForceOnline:(_Bool)arg2;
- (id)DownloadFacadeBuildPlayURL:(int)arg1 whitForceOnline:(_Bool)arg2;
- (void)DownloadFacadePrepareHLS:(int)arg1;
- (void)DownloadFacadePrepareMP4:(int)arg1;
- (void)DownloadFacadeStopPlay:(int)arg1;
- (id)DownloadFacadeStartPlayMutliPlay:(id)arg1;
- (int)ConvertDltype:(int)arg1;
- (void)SetFlowIdWithDataID:(int)arg1 withFlowID:(id)arg2;
- (void)SetPlayTime:(int)arg1 withStartTime:(int)arg2 withEndTime:(int)arg3;
- (int)DownloadFacadeStartPlayEx:(int)arg1 withVID:(id)arg2 withFormat:(id)arg3 withIsChange:(_Bool)arg4 withSHevc:(_Bool)arg5 withForceType:(int)arg6 withExtraInfo:(id)arg7 withDelegate:(id)arg8;
- (void)SetPlayCapacity:(int)arg1;
- (void)SetIPv6Prefix:(id)arg1;
- (void)SetCookie:(id)arg1;
- (void)ClearUserData;
- (void)SetUserDataInt:(id)arg1 withValueInt:(int)arg2;
- (void)SetUserDataString:(id)arg1 withValue:(id)arg2;
- (id)DownloadFacadeGetDigitVersion;
- (id)DownloadFacadeGetVersion;
- (void)DownloadFacadeDeinit;
- (int)DownloadFacadeInit:(id)arg1 withDataDir:(id)arg2 withServConfig:(id)arg3;
- (void)enterForeground:(id)arg1;
- (void)enterBackground:(id)arg1;
- (void)deinitModule;
- (void)testDownloadDemo;
- (void)dealloc;
- (_Bool)initModule;
- (void)deinitLog;
- (void)initLog;
- (id)init;
- (id)stringKeyFlowViewDataShow;
- (id)stringAllFlowViewDataShow;
@property(readonly, nonatomic) _Bool isInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

