//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVAudioPlayer, NSArray, NSMutableDictionary, NSString, NSTimer;

@interface MCTmplElement : NSObject
{
    float *pPosVertex;
    float *pTexCoord;
    _Bool _alwaysTriggered;
    _Bool _showInMirror;
    _Bool _triggerSuccess;
    _Bool _couldPreloadResource;
    int _type;
    int _triggerType;
    int _featureStatType;
    int _frameType;
    NSString *_elementID;
    NSString *_elementName;
    long long _playCount;
    double _frameDuration;
    long long _frames;
    NSArray *_alignFacePoints;
    NSArray *_scalePivots;
    double _scaleWidthFactor;
    NSString *_audioName;
    long long _blendMode;
    long long _personID;
    NSString *_folderPath;
    AVAudioPlayer *_audioPlayer;
    NSTimer *_audioTimer;
    double _beginTime;
    long long _playedTimes;
    NSString *_currentTextureName;
    NSMutableDictionary *_textures;
    struct CGPoint _featureStatValueRange;
    struct CGSize _textureSize;
    struct CGPoint _texturePosition;
    struct CGPoint _textureAnchor;
    struct CGSize _renderScale;
}

+ (struct CGImage *)newImageFromSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
@property _Bool couldPreloadResource; // @synthesize couldPreloadResource=_couldPreloadResource;
@property(retain, nonatomic) NSMutableDictionary *textures; // @synthesize textures=_textures;
@property(copy, nonatomic) NSString *currentTextureName; // @synthesize currentTextureName=_currentTextureName;
@property(nonatomic) _Bool triggerSuccess; // @synthesize triggerSuccess=_triggerSuccess;
@property(nonatomic) _Bool showInMirror; // @synthesize showInMirror=_showInMirror;
@property(nonatomic) long long playedTimes; // @synthesize playedTimes=_playedTimes;
@property(nonatomic) double beginTime; // @synthesize beginTime=_beginTime;
@property(retain) NSTimer *audioTimer; // @synthesize audioTimer=_audioTimer;
@property(retain) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(copy, nonatomic) NSString *folderPath; // @synthesize folderPath=_folderPath;
@property(nonatomic) struct CGSize renderScale; // @synthesize renderScale=_renderScale;
@property(nonatomic) long long personID; // @synthesize personID=_personID;
@property(nonatomic) long long blendMode; // @synthesize blendMode=_blendMode;
@property(copy, nonatomic) NSString *audioName; // @synthesize audioName=_audioName;
@property(nonatomic) double scaleWidthFactor; // @synthesize scaleWidthFactor=_scaleWidthFactor;
@property(retain, nonatomic) NSArray *scalePivots; // @synthesize scalePivots=_scalePivots;
@property(retain, nonatomic) NSArray *alignFacePoints; // @synthesize alignFacePoints=_alignFacePoints;
@property(nonatomic) struct CGPoint textureAnchor; // @synthesize textureAnchor=_textureAnchor;
@property(nonatomic) struct CGPoint texturePosition; // @synthesize texturePosition=_texturePosition;
@property(nonatomic) struct CGSize textureSize; // @synthesize textureSize=_textureSize;
@property(nonatomic) long long frames; // @synthesize frames=_frames;
@property(nonatomic) double frameDuration; // @synthesize frameDuration=_frameDuration;
@property(nonatomic) int frameType; // @synthesize frameType=_frameType;
@property(nonatomic) long long playCount; // @synthesize playCount=_playCount;
@property(nonatomic) struct CGPoint featureStatValueRange; // @synthesize featureStatValueRange=_featureStatValueRange;
@property(nonatomic) int featureStatType; // @synthesize featureStatType=_featureStatType;
@property(nonatomic) _Bool alwaysTriggered; // @synthesize alwaysTriggered=_alwaysTriggered;
@property(nonatomic) int triggerType; // @synthesize triggerType=_triggerType;
@property(nonatomic) int type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *elementName; // @synthesize elementName=_elementName;
@property(copy, nonatomic) NSString *elementID; // @synthesize elementID=_elementID;
- (void).cxx_destruct;
- (double)textureRotate:(float (*)[2])arg1 withImageSize:(struct CGSize)arg2;
- (double)textureScale:(float (*)[2])arg1 withImageSize:(struct CGSize)arg2;
- (struct CGPoint)textureAnchorPosition:(float (*)[2])arg1 withImageSize:(struct CGSize)arg2;
- (float *)textureCoordinate;
- (float *)positionVertex:(float (*)[2])arg1 withImageSize:(struct CGSize)arg2;
- (float *)positionVertex;
- (id)currentTexture:(id)arg1;
- (id)currentTexture;
- (_Bool)featureStat:(id)arg1;
- (_Bool)triggerStat:(int)arg1;
- (void)stopAudio;
- (void)pauseAudio;
- (void)pauseAudioDelayed;
- (void)playAudio;
- (void)advanceTime:(double)arg1;
- (void)clearResource;
- (void)preloadResource;
- (void)clearTexture:(unsigned int *)arg1;
- (_Bool)preloadMP4Resource:(id)arg1;
- (void)dealloc;
- (id)init;

@end

