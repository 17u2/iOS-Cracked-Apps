//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSURLProtocol.h"

#import "CocoaSPDYDelegate.h"
#import "QBNetworkDelegate.h"

@class NSError, NSMutableData, NSMutableDictionary, NSString, QBDNSQueryItem, QBNetwork, QBProtocolProxy, SPDYProtocol;

@interface QBProxyURLProtocol : NSURLProtocol <QBNetworkDelegate, CocoaSPDYDelegate>
{
    SPDYProtocol *_cocoaSPDYRequest;
    long long _directReasonType;
    _Bool _stopLoading;
    int _resourceType;
    QBProtocolProxy *_protocolProxy;
    NSMutableDictionary *_extraHeaders;
    _Bool _is803or805error;
    _Bool _receivedResponsed;
    NSError *_httpsError;
    QBDNSQueryItem *_currentQueryItem;
    QBDNSQueryItem *_preQueryItem;
    long long _preQueryErr;
    double _queryTime;
    double _loadTime;
    _Bool _isSharpP;
    NSMutableData *_sharpPData;
    NSString *_originPOSTURLString;
    QBNetwork *_network;
    id <NSURLProtocolClient> _preClient;
}

+ (void)getSystemThreads;
+ (_Bool)isValidCachedResponse:(id)arg1;
+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (id)getCurrentMainURL;
+ (void)setCurrentMainURL:(id)arg1;
+ (id)currentQProxyManager;
+ (void)startProxyWithWorker:(Class)arg1;
+ (_Bool)isStartProxy;
@property __weak id <NSURLProtocolClient> preClient; // @synthesize preClient=_preClient;
@property(retain, nonatomic) QBNetwork *network; // @synthesize network=_network;
- (void).cxx_destruct;
- (void)qbNetwork:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)qbNetwork:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (struct __SecTrust *)newServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;
- (id)qbNetwork:(id)arg1 willCacheResponse:(id)arg2;
- (id)qbNetwork:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)qbNetwork:(id)arg1 didFailWithError:(id)arg2;
- (void)qbNetworkDidFinishLoading:(id)arg1;
- (void)qbNetwork:(id)arg1 didReceiveData:(id)arg2;
- (void)qbNetwork:(id)arg1 didReceiveResponse:(id)arg2;
- (_Bool)isNeedSpecialRedirectedProcessByHttpResponseHeaders:(id)arg1;
- (void)didFailWithErrorCocoaSPDY:(id)arg1;
- (void)didFinishLoadingCocoaSPDY;
- (void)wasRedirectedToRequestCocoaSPDY:(id)arg1 redirectResponse:(id)arg2;
- (void)didLoadDataCocoaSPDY:(id)arg1;
- (void)didReceiveResponseCocoaSPDY:(id)arg1;
- (_Bool)returnCacheDataFor304:(unsigned long long)arg1;
- (_Bool)isValidateConditionalRequest;
- (_Bool)canLoadCacheData;
- (id)cachedURLResponseIfPossible;
- (void)dealloc;
- (void)mttStopLoading;
- (void)stopLoading;
- (void)_doSendRequest:(id)arg1 directType:(long long)arg2;
- (void)_doSendRequestWarpper:(id)arg1;
- (id)_dnsQueryItem:(id)arg1 cached:(_Bool)arg2;
- (void)_sendRequestDirect:(long long)arg1;
- (void)probeSPDYServerIfNeeded;
- (void)buildQproxyRequest;
- (void)_sendRequestByQProxy;
- (void)mttStartLoading;
- (void)startLoading;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (id)client;
- (void)preStopLoading;
- (void)preStartLoading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

