//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableArray, NSMutableDictionary;

@interface QQRichPTVGLProgramBase : NSObject
{
    struct CGSize _drawSize;
    NSMutableArray *_attributes;
    NSMutableDictionary *_uniforms;
    _Bool _bufferCreated;
    unsigned int _programHandle;
    unsigned int _inputTexture;
    unsigned int _positionVBO;
    unsigned int _texcoordVBO;
    struct CGSize _displayingSize;
}

@property(nonatomic) unsigned int texcoordVBO; // @synthesize texcoordVBO=_texcoordVBO;
@property(nonatomic) unsigned int positionVBO; // @synthesize positionVBO=_positionVBO;
@property(nonatomic) struct CGSize displayingSize; // @synthesize displayingSize=_displayingSize;
@property(nonatomic) struct CGSize drawSize; // @synthesize drawSize=_drawSize;
@property(nonatomic) unsigned int inputTexture; // @synthesize inputTexture=_inputTexture;
@property(nonatomic) _Bool bufferCreated; // @synthesize bufferCreated=_bufferCreated;
@property(nonatomic) unsigned int programHandle; // @synthesize programHandle=_programHandle;
- (void)renderToScreen:(unsigned int)arg1 frameBuffer:(unsigned int)arg2 renderBuffer:(unsigned int)arg3;
- (void)renderWithSampleTexture:(unsigned int)arg1 frameBuffer:(unsigned int)arg2;
- (void)renderWithSampleTexture:(unsigned int)arg1 frameBuffer:(unsigned int)arg2 texture:(unsigned int)arg3 renderBuffer:(unsigned int)arg4;
- (void)loadSampleBuffer:(struct _BitmapData *)arg1;
- (void)clearBufferObjects;
- (void)setupBufferObjects;
- (void)useProgram;
- (void)compileShaders;
- (void)setupRenderVBO:(unsigned int)arg1 andCoord:(unsigned int)arg2;
- (unsigned int)uniformIndex:(id)arg1;
- (unsigned int)attributeIndex:(id)arg1;
- (void)addAttribute:(id)arg1;
- (void)onShaderError:(id)arg1 withType:(id)arg2;
- (void)registerUniforms;
- (void)registerVertexAttributes;
- (_Bool)loadVertexShaderString:(id)arg1 andFragmentShaderString:(id)arg2;
- (_Bool)loadFragmentShaderString:(id)arg1;
- (_Bool)loadFragmentShader:(id)arg1;
- (_Bool)loadVertexShader:(id)arg1 andFragmentShader:(id)arg2;
- (unsigned int)compileShaderString:(id)arg1 withType:(unsigned int)arg2;
- (unsigned int)compileShader:(id)arg1 withType:(unsigned int)arg2;
- (void)dealloc;
- (id)init;
- (void)setFloatArray:(float *)arg1 length:(int)arg2 forUniform:(id)arg3;
- (void)setMatrix4:(union _GLKMatrix4)arg1 forUniform:(id)arg2;
- (void)setMatrix3:(union _GLKMatrix3)arg1 forUniform:(id)arg2;
- (void)setMatrix2:(union _GLKMatrix2)arg1 forUniform:(id)arg2;
- (void)setVec4:(union _GLKVector4)arg1 forUniform:(id)arg2;
- (void)setVec3:(union _GLKVector3)arg1 forUniform:(id)arg2;
- (void)setVec2:(union _GLKVector2)arg1 forUniform:(id)arg2;
- (void)setPoint:(struct CGPoint)arg1 forUniform:(id)arg2;
- (void)setSize:(struct CGSize)arg1 forUniform:(id)arg2;
- (void)setFloat:(float)arg1 forUniform:(id)arg2;
- (void)setInteger:(int)arg1 forUniform:(id)arg2;
- (void)onSetUniformError:(id)arg1;

@end

