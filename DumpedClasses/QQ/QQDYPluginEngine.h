//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class LYStorage, QQDYPluginConfig, QQDYPluginModel;

@interface QQDYPluginEngine : NSObject
{
    LYStorage *_storage;
    _Bool _redPointShowInfoInited;
    QQDYPluginConfig *_pluginConfigInfo;
    QQDYPluginModel *_pluginModel;
}

+ (id)getInstance;
@property(retain, nonatomic) QQDYPluginModel *pluginModel; // @synthesize pluginModel=_pluginModel;
- (void).cxx_destruct;
- (void)mergeFeedsListForQZone:(id)arg1 withOldPlugin:(id)arg2;
- (unsigned long long)fetchULongLongValueForKey:(id)arg1 FromJsonDict:(id)arg2 defaultValue:(unsigned long long)arg3;
- (int)fetchIntValueForKey:(id)arg1 FromJsonDict:(id)arg2 defaultValue:(int)arg3;
- (id)fetchStringValueForKey:(id)arg1 FromJsonDict:(id)arg2;
- (id)fetchPluginFeedItemFrom:(id)arg1;
- (void)parseQQDYPluginInfo:(id)arg1 fromDict:(id)arg2;
- (void)parseQQDYPluginInfo:(id)arg1 fromJson:(id)arg2;
- (_Bool)needLBSDataWithPositionShareWhileRequestingFeeds:(int)arg1;
- (_Bool)needLBSDataWhileRequestingFeeds:(int)arg1;
- (void)updatePLuginStateForVASPlugin;
- (id)filterRedPointShowInfo:(id)arg1 forPluginId:(int)arg2;
- (id)fetchPluginsUseBaseRedPointFrom:(id)arg1;
- (id)fetchAllPluginsUseBaseRedPoint;
- (id)fetchAllPluginsWithRedPointShowInfoFrom:(id)arg1 typeNumOnly:(_Bool)arg2;
- (id)fetchAllPluginsWithRedPointShowInfoForTypeNumOnly:(_Bool)arg1;
- (void)initAllRedPointShowInfos;
- (_Bool)isPluginUseVASRedpoint:(int)arg1;
- (void)hideRedPointShowInfoForPluginId:(int)arg1;
- (void)showRedPointShowInfo:(id)arg1 forPluginId:(int)arg2;
- (_Bool)isPluginModelEmpty;
- (_Bool)isRequestPluginListFrequently;
- (_Bool)isPluginModelExpired;
- (_Bool)shouldTransformFromRichPluginToSimplePlugin:(id)arg1;
- (id)fetchPluginModel;
- (_Bool)attemptToRestorePluginModel;
- (void)restorePluginModelFromCache;
- (void)clearPluginModel;
- (_Bool)isHiddenFromDynamicUIForPlugin:(int)arg1;
- (void)updatePluginToRefreshUI:(id)arg1;
- (id)getPluginByPluginId:(int)arg1;
- (id)getAllPlugins;
- (void)transformToSimplePluginsFor:(id)arg1 diffFrom:(id)arg2;
- (void)transformToSimplePluginIfNecessary:(id)arg1;
- (id)filterPluginModuleForPlugins:(id)arg1;
- (id)sortPluginModuleForPlugins:(id)arg1;
- (id)removeAllPluginsMatch:(id)arg1 from:(id)arg2;
- (id)insertOrUpdatePlugin:(id)arg1 from:(id)arg2;
- (void)filterPluginModule;
- (void)sortPluginModule;
- (void)removePluginFromModel:(id)arg1;
- (void)insertOrUpdatePluginModelWithPlugin:(id)arg1;
- (void)postErrorNotification:(long long)arg1 plugins:(id)arg2 errorCode:(int)arg3 errorString:(id)arg4;
- (void)batchRequestRichPluginFeedsWith:(id)arg1 allFeeds:(_Bool)arg2 source:(unsigned long long)arg3 needLBS:(_Bool)arg4;
- (void)requestRichPluginFeedsWith:(id)arg1 allFeeds:(_Bool)arg2 source:(unsigned long long)arg3;
- (void)requestRichPluginFeeds:(int)arg1;
- (void)refreshLocalPluginListAndFeeds;
- (void)requestAllRichPluginFeedsWithSource:(unsigned long long)arg1;
- (void)requestPluginListAndRichPluginFeedsWithCache:(_Bool)arg1 source:(unsigned long long)arg2;
- (void)restorePluginConfigInfoIfAvailble;
- (_Bool)getShowSearchBarFlag;
- (_Bool)getShowNewDynamicFlag;
@property(retain, nonatomic) QQDYPluginConfig *pluginConfigInfo; // @synthesize pluginConfigInfo=_pluginConfigInfo;
- (void)savePluginModel;
- (void)configUpdateDoneNotification;
- (void)logoutNotification;
- (id)init;

@end

