//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug  6 2017 20:42:30).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GWBaseViewController.h"

#import "GWMoviePostWalaPictruesViewControllerDelegate-Protocol.h"
#import "GWPhotoPickerControllerDelegate-Protocol.h"
#import "PhotoViewControllerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class GWBoundScrollView, GWPhotoViewAnimation, GWSalingMovieListViewController, NSMutableArray, NSString, UIButton, UIPageControl, UIView;
@protocol GWAppTypeDelegate;

@interface GWMoviePhotoSwitchViewController : GWBaseViewController <GWPhotoPickerControllerDelegate, GWMoviePostWalaPictruesViewControllerDelegate, PhotoViewControllerDelegate, UIScrollViewDelegate>
{
    int _type;
    int _currentPage;
    id <GWAppTypeDelegate> _relatedInfo;
    NSMutableArray *_selectedPictures;
    long long _maximumNumberOfSelection;
    CDUnknownBlockType _didCancelPickPhotosBlock;
    CDUnknownBlockType _didFinishPickPhotosBlock;
    GWSalingMovieListViewController *_salingMovieViewController;
    GWBoundScrollView *_mainScrollView;
    UIPageControl *_pageControl;
    UIView *_titleView;
    UIView *_underlineLabel;
    UIButton *_albumBtn;
    UIButton *_photoBtn;
    GWPhotoViewAnimation *_photoViewAnimation;
}

@property(retain, nonatomic) GWPhotoViewAnimation *photoViewAnimation; // @synthesize photoViewAnimation=_photoViewAnimation;
@property(retain, nonatomic) UIButton *photoBtn; // @synthesize photoBtn=_photoBtn;
@property(retain, nonatomic) UIButton *albumBtn; // @synthesize albumBtn=_albumBtn;
@property(retain, nonatomic) UIView *underlineLabel; // @synthesize underlineLabel=_underlineLabel;
@property(retain, nonatomic) UIView *titleView; // @synthesize titleView=_titleView;
@property(nonatomic) int currentPage; // @synthesize currentPage=_currentPage;
@property(nonatomic) __weak UIPageControl *pageControl; // @synthesize pageControl=_pageControl;
@property(retain, nonatomic) GWBoundScrollView *mainScrollView; // @synthesize mainScrollView=_mainScrollView;
@property(retain, nonatomic) GWSalingMovieListViewController *salingMovieViewController; // @synthesize salingMovieViewController=_salingMovieViewController;
@property(copy, nonatomic) CDUnknownBlockType didFinishPickPhotosBlock; // @synthesize didFinishPickPhotosBlock=_didFinishPickPhotosBlock;
@property(copy, nonatomic) CDUnknownBlockType didCancelPickPhotosBlock; // @synthesize didCancelPickPhotosBlock=_didCancelPickPhotosBlock;
@property(nonatomic) long long maximumNumberOfSelection; // @synthesize maximumNumberOfSelection=_maximumNumberOfSelection;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSMutableArray *selectedPictures; // @synthesize selectedPictures=_selectedPictures;
@property(nonatomic) __weak id <GWAppTypeDelegate> relatedInfo; // @synthesize relatedInfo=_relatedInfo;
- (void).cxx_destruct;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)gotoPageWithPageIndex:(int)arg1 UseAnima:(_Bool)arg2;
- (id)getSelectedPictures;
- (_Bool)isCanSelectedPhotos;
- (void)GWMoviePostWalaPictruesViewController:(id)arg1 didDeselectPicture:(id)arg2;
- (void)GWMoviePostWalaPictruesViewController:(id)arg1 didSelectPicture:(id)arg2;
- (_Bool)GWMoviePostWalaPictruesViewController:(id)arg1 shouldSelectPicture:(id)arg2;
- (void)GWPhotoPickerController:(id)arg1 didDeselectPicture:(id)arg2;
- (void)GWPhotoPickerController:(id)arg1 didSelectPicture:(id)arg2;
- (_Bool)GWPhotoPickerController:(id)arg1 shouldSelectPicture:(id)arg2;
- (void)didReceiveMemoryWarning;
- (void)cancel:(id)arg1;
- (void)savePhotos:(id)arg1;
- (void)openPhoto:(id)arg1;
- (void)openAlbum:(id)arg1;
- (void)setTitleView;
- (void)setupButtons;
- (_Bool)isMovieWala;
- (void)loadAllControls;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

