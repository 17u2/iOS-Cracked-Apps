//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug  6 2017 21:40:27).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "EZJSONModel.h"

#import "YapObjcStoreProtocol-Protocol.h"

@class EMConversation, EZGroupUser, GroupNotification, NSArray, NSDate, NSDateFormatter, NSNumber, NSString;
@protocol EZGroupUser><Optional, Ignore, Optional;

@interface EZGroup : EZJSONModel <YapObjcStoreProtocol>
{
    NSString *_resourceId;
    NSString *_imId;
    NSString *_title;
    NSString<Optional> *_imageUrlStr;
    NSString<Optional> *_categoryName;
    NSString<Optional> *_groupDescription;
    NSDate<Optional> *_createdAt;
    NSNumber<Optional> *_maxMemberNumber;
    NSNumber<Optional> *_membersCount;
    NSNumber<Optional> *_isBlocking;
    NSArray<Optional> *_tags;
    NSArray<EZGroupUser><Optional> *_groupMembers;
    EZGroupUser<Optional> *_owner;
    NSNumber<Optional> *_isOfficial;
    NSNumber<Optional> *_hasCurrentMember;
    NSNumber<Ignore> *_unreadMessageCount;
    NSNumber<Ignore> *_createGroupTypeNum;
    NSString<Ignore> *_inviteCode;
    NSNumber<Ignore> *_inviteCurrentUserToGroup;
    GroupNotification<Ignore> *_groupNotification;
    EMConversation<Ignore> *_conversation;
    NSDateFormatter<Ignore> *_dateFormat;
}

+ (id)stripOtherTypesToStringDict:(id)arg1;
+ (id)stripOtherTypesToStringArr:(id)arg1;
+ (void)fetchGroupWithIMId:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
+ (id)groupWithIMID:(id)arg1;
+ (void)registerExtensions;
+ (void)registerSortView;
+ (id)collectionName;
+ (void)getCreateGroupConditionWithCompletion:(CDUnknownBlockType)arg1;
+ (void)addUser:(id)arg1 intoGroup:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
+ (void)sendPushToUsers:(id)arg1 title:(id)arg2 content:(id)arg3 costomContent:(id)arg4 withCompletion:(CDUnknownBlockType)arg5;
+ (void)atUsers:(id)arg1 inGroup:(id)arg2 ofContent:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
+ (void)fetchAllGroupsWithUserId:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)fetchCacheGroupById:(id)arg1;
+ (void)removeGroupCacheWithId:(id)arg1;
+ (void)fetchCacheGroupById:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (void)fetchCacheGroupsWithCompletion:(CDUnknownBlockType)arg1;
+ (void)updateLocalGroups:(id)arg1 completed:(CDUnknownBlockType)arg2;
+ (void)fetchAllMyGroupsWithCompletion:(CDUnknownBlockType)arg1;
+ (void)inviteUsers:(id)arg1 intoGroup:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
+ (void)fetchGroupInfoById:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (void)fetchGroupTagsInCategory:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (void)reportGroup:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (id)defaultGroupAvatar;
+ (id)keyMapper;
+ (void)checkInviteCodeIsCorrect:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
+ (void)isUserCanCreateGroupo:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSDateFormatter<Ignore> *dateFormat; // @synthesize dateFormat=_dateFormat;
@property(retain, nonatomic) EMConversation<Ignore> *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) GroupNotification<Ignore> *groupNotification; // @synthesize groupNotification=_groupNotification;
@property(retain, nonatomic) NSNumber<Ignore> *inviteCurrentUserToGroup; // @synthesize inviteCurrentUserToGroup=_inviteCurrentUserToGroup;
@property(copy, nonatomic) NSString<Ignore> *inviteCode; // @synthesize inviteCode=_inviteCode;
@property(retain, nonatomic) NSNumber<Ignore> *createGroupTypeNum; // @synthesize createGroupTypeNum=_createGroupTypeNum;
@property(retain, nonatomic) NSNumber<Ignore> *unreadMessageCount; // @synthesize unreadMessageCount=_unreadMessageCount;
@property(retain, nonatomic) NSNumber<Optional> *hasCurrentMember; // @synthesize hasCurrentMember=_hasCurrentMember;
@property(retain, nonatomic) NSNumber<Optional> *isOfficial; // @synthesize isOfficial=_isOfficial;
@property(retain, nonatomic) EZGroupUser<Optional> *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSArray<EZGroupUser><Optional> *groupMembers; // @synthesize groupMembers=_groupMembers;
@property(retain, nonatomic) NSArray<Optional> *tags; // @synthesize tags=_tags;
@property(retain, nonatomic) NSNumber<Optional> *isBlocking; // @synthesize isBlocking=_isBlocking;
@property(retain, nonatomic) NSNumber<Optional> *membersCount; // @synthesize membersCount=_membersCount;
@property(retain, nonatomic) NSNumber<Optional> *maxMemberNumber; // @synthesize maxMemberNumber=_maxMemberNumber;
@property(retain, nonatomic) NSDate<Optional> *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString<Optional> *groupDescription; // @synthesize groupDescription=_groupDescription;
@property(copy, nonatomic) NSString<Optional> *categoryName; // @synthesize categoryName=_categoryName;
@property(copy, nonatomic) NSString<Optional> *imageUrlStr; // @synthesize imageUrlStr=_imageUrlStr;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *imId; // @synthesize imId=_imId;
@property(copy, nonatomic) NSString *resourceId; // @synthesize resourceId=_resourceId;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (int)typeOfUserInGroup;
- (id)totalMembersIncludingOwner;
- (id)createDesc;
- (void)postMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)shareGroupToNode:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)totalMembersIncludingOwnerWithoutMe;
- (void)updateCacheWithoutMembers;
- (_Bool)groupMembersFetched;
- (id)key;
- (void)createGroupOfType:(int)arg1 inviteCode:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)removeMember:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)deleteGroupWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)applyJoinGroupWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)parseAtUsersFromMessage:(id)arg1;
- (void)updateCurrentInfoWithNewGroup:(id)arg1;
- (void)upgradeGroupAutomaticWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)upgradeGroupWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)update:(CDUnknownBlockType)arg1;
- (int)createGroupType;
- (id)groupUserForResourceId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

