//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UITableViewCell.h"

#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"
#import "UICollectionViewDelegateFlowLayout.h"

@class NSArray, NSString, UIButton, UICollectionView, UIColor, UIView;

@interface CTHotelFilterCategoryCell : UITableViewCell <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout>
{
    double collectionHeight;
    double collectionWidth;
    UIColor *iconColor;
    NSString *iconFont;
    _Bool _hasChild;
    _Bool _hasExtra;
    _Bool _isExpanded;
    _Bool _canClear;
    unsigned long long _columNum;
    unsigned long long _rowNum;
    unsigned long long _lineNum;
    id <CTHotelFilterCategoryDelegate> _delegate;
    NSString *_title;
    NSString *_groupType;
    NSArray *_itemList;
    UIButton *_expandBtn;
    UIView *_headerView;
    UIView *_containerBackView;
    UICollectionView *_collectView;
}

+ (double)getCellHeightWithType:(id)arg1 itemList:(id)arg2 hasChild:(_Bool)arg3 isExpand:(_Bool)arg4;
@property(retain, nonatomic) UICollectionView *collectView; // @synthesize collectView=_collectView;
@property(retain, nonatomic) UIView *containerBackView; // @synthesize containerBackView=_containerBackView;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) UIButton *expandBtn; // @synthesize expandBtn=_expandBtn;
@property(nonatomic) _Bool canClear; // @synthesize canClear=_canClear;
@property(retain, nonatomic) NSArray *itemList; // @synthesize itemList=_itemList;
@property(retain, nonatomic) NSString *groupType; // @synthesize groupType=_groupType;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) _Bool isExpanded; // @synthesize isExpanded=_isExpanded;
@property(nonatomic) __weak id <CTHotelFilterCategoryDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool hasExtra; // @synthesize hasExtra=_hasExtra;
@property(nonatomic) _Bool hasChild; // @synthesize hasChild=_hasChild;
@property(nonatomic) unsigned long long lineNum; // @synthesize lineNum=_lineNum;
@property(nonatomic) unsigned long long rowNum; // @synthesize rowNum=_rowNum;
@property(nonatomic) unsigned long long columNum; // @synthesize columNum=_columNum;
- (void).cxx_destruct;
- (void)dealloc;
- (void)moreBtnClicked;
- (void)expandBtnClicked;
- (void)clearBtnClicked;
- (long long)setLineNumber;
- (void)setConfigWithType:(id)arg1;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)didSelectCollectionViewAtIndexPath:(id)arg1;
- (void)resetCellColor:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)prepareForReuse;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)initCollectionView;
- (void)drawHeaderView;
- (void)initContainerView;
- (void)initView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)initWithTitle:(id)arg1 groupType:(id)arg2 itemList:(id)arg3 canClear:(_Bool)arg4 hasChild:(_Bool)arg5 isExpand:(_Bool)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

