//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CTLoginWidgetDelegate.h"
#import "XMPPAutoPingDelegate.h"
#import "XMPPMUCDelegate.h"
#import "XMPPStreamDelegate.h"

@class CTChatConversationStore, CTChatGroupInfoStore, CTChatGroupMembersStore, CTChatMessageStoreV2, CTChatThreadStore, CTChatUserInfoStore, NSDate, NSError, NSMutableArray, NSString, XMPPAutoPing, XMPPCtripChat, XMPPCtripChatUser, XMPPMUC, XMPPMessageDeliveryReceipts, XMPPStream, XMPPStreamManagement, XMPPStreamManagementMemoryStorage;

@interface CTChatManager : NSObject <XMPPStreamDelegate, CTLoginWidgetDelegate, XMPPMUCDelegate, XMPPAutoPingDelegate>
{
    unsigned long long _closeStatus;
    double startCheckTime;
    double endCheckTime;
    _Bool isExp;
    _Bool _isBackGround;
    _Bool _loginInSync;
    _Bool _syncLoginProcessing;
    _Bool _isInChatView;
    _Bool _isFirstTimeSetMemory;
    _Bool _isSyncVersionB;
    NSMutableArray *_messageIdList;
    long long _connectStatus;
    XMPPCtripChatUser *_user;
    XMPPCtripChat *_xmppCtripChat;
    CDUnknownBlockType _asyncLoginCompletionBlock;
    NSError *_syncLoginError;
    XMPPStream *_xmppStream;
    XMPPStreamManagementMemoryStorage *_xmppStreamManagementMemoryStorage;
    XMPPStreamManagement *_xmppStreamManagement;
    XMPPMessageDeliveryReceipts *_xmppMessageDeliveryReceipts;
    XMPPAutoPing *_xmppPing;
    XMPPMUC *_xmppMuc;
    NSDate *_reconnectDate;
    CTChatMessageStoreV2 *_messageStore_;
    CTChatGroupInfoStore *_groupInfoStore_;
    CTChatConversationStore *_conversationStore_;
    CTChatGroupMembersStore *_groupMembersStore_;
    CTChatThreadStore *_threadsStore_;
    CTChatUserInfoStore *_userInfoStore_;
}

+ (id)localUid;
+ (id)defaultManager;
+ (id)userInfoStore;
+ (id)threadStore;
+ (id)groupMembersStore;
+ (id)conversationStore;
+ (id)groupInfoStore;
+ (id)messageStore;
+ (_Bool)isSyncUserInfo;
+ (_Bool)isSyncConversationVersionB;
@property(nonatomic) _Bool isSyncVersionB; // @synthesize isSyncVersionB=_isSyncVersionB;
@property(retain, nonatomic) CTChatUserInfoStore *userInfoStore_; // @synthesize userInfoStore_=_userInfoStore_;
@property(retain, nonatomic) CTChatThreadStore *threadsStore_; // @synthesize threadsStore_=_threadsStore_;
@property(retain, nonatomic) CTChatGroupMembersStore *groupMembersStore_; // @synthesize groupMembersStore_=_groupMembersStore_;
@property(retain, nonatomic) CTChatConversationStore *conversationStore_; // @synthesize conversationStore_=_conversationStore_;
@property(retain, nonatomic) CTChatGroupInfoStore *groupInfoStore_; // @synthesize groupInfoStore_=_groupInfoStore_;
@property(retain, nonatomic) CTChatMessageStoreV2 *messageStore_; // @synthesize messageStore_=_messageStore_;
@property(nonatomic) _Bool isFirstTimeSetMemory; // @synthesize isFirstTimeSetMemory=_isFirstTimeSetMemory;
@property(retain, nonatomic) NSDate *reconnectDate; // @synthesize reconnectDate=_reconnectDate;
@property(nonatomic) _Bool isInChatView; // @synthesize isInChatView=_isInChatView;
@property(retain, nonatomic) XMPPMUC *xmppMuc; // @synthesize xmppMuc=_xmppMuc;
@property(retain, nonatomic) XMPPAutoPing *xmppPing; // @synthesize xmppPing=_xmppPing;
@property(retain, nonatomic) XMPPMessageDeliveryReceipts *xmppMessageDeliveryReceipts; // @synthesize xmppMessageDeliveryReceipts=_xmppMessageDeliveryReceipts;
@property(retain, nonatomic) XMPPStreamManagement *xmppStreamManagement; // @synthesize xmppStreamManagement=_xmppStreamManagement;
@property(retain, nonatomic) XMPPStreamManagementMemoryStorage *xmppStreamManagementMemoryStorage; // @synthesize xmppStreamManagementMemoryStorage=_xmppStreamManagementMemoryStorage;
@property(retain, nonatomic) XMPPStream *xmppStream; // @synthesize xmppStream=_xmppStream;
@property(retain, nonatomic) NSError *syncLoginError; // @synthesize syncLoginError=_syncLoginError;
@property(nonatomic) _Bool syncLoginProcessing; // @synthesize syncLoginProcessing=_syncLoginProcessing;
@property(copy, nonatomic) CDUnknownBlockType asyncLoginCompletionBlock; // @synthesize asyncLoginCompletionBlock=_asyncLoginCompletionBlock;
@property(nonatomic, getter=isLoginInSync) _Bool loginInSync; // @synthesize loginInSync=_loginInSync;
@property(retain, nonatomic) XMPPCtripChat *xmppCtripChat; // @synthesize xmppCtripChat=_xmppCtripChat;
@property(nonatomic) _Bool isBackGround; // @synthesize isBackGround=_isBackGround;
@property(retain, nonatomic) XMPPCtripChatUser *user; // @synthesize user=_user;
@property(nonatomic) long long connectStatus; // @synthesize connectStatus=_connectStatus;
@property(retain, nonatomic) NSMutableArray *messageIdList; // @synthesize messageIdList=_messageIdList;
- (void).cxx_destruct;
- (void)postNotification_sync:(long long)arg1;
- (id)queryChatMessageListWithUserJid:(id)arg1 timeStamp:(id)arg2 limit:(int)arg3 direction:(int)arg4;
- (_Bool)isMyUid:(id)arg1;
- (id)keyForGidCache:(id)arg1;
- (void)clearHistoryWithConversation:(id)arg1 withType:(long long)arg2;
- (void)afterLoginSuccess:(id)arg1;
- (void)ctripLogIn;
- (void)ctripLogout;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)vibratePhone;
- (void)leaveChatView;
- (void)enterChatView;
- (void)clearDB;
- (void)logout;
- (void)xmppLogin:(id)arg1;
- (void)loginAsyncWithUser:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)xmppMUC:(id)arg1 roomJID:(id)arg2 didReceiveInvitationDecline:(id)arg3;
- (void)xmppMUC:(id)arg1 roomJID:(id)arg2 didReceiveInvitation:(id)arg3;
- (void)xmppStream:(id)arg1 didReceiveError:(id)arg2;
- (void)xmppStream:(id)arg1 didReceivePresence:(id)arg2;
- (id)xmppStream:(id)arg1 alternativeResourceForConflictingResource:(id)arg2;
- (id)xmppStreamWillBind:(id)arg1;
- (void)xmppStream:(id)arg1 didNotAuthenticate:(id)arg2;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)xmppStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppStreamConnectDidTimeout:(id)arg1;
- (void)xmppStreamDidSendClosingStreamStanza:(id)arg1;
- (void)xmppStreamWasToldToDisconnect:(id)arg1;
- (void)xmppStreamDidStartNegotiation:(id)arg1;
- (void)xmppStreamDidConnect:(id)arg1;
- (void)xmppStream:(id)arg1 socketDidConnect:(id)arg2;
- (void)xmppStreamWillConnect:(id)arg1;
- (void)xmppAutoPingDidTimeout:(id)arg1;
- (void)xmppAutoPingDidReceivePong:(id)arg1;
- (void)xmppAutoPingDidSendPing:(id)arg1;
- (void)handleLoginFinishWithError:(id)arg1;
- (void)goOffline;
- (void)goOnline;
- (void)teardownStream;
@property(readonly, nonatomic) XMPPStream *xmppConnectingStream;
- (void)setupStream;
- (_Bool)connectWithUser:(id)arg1 error:(id *)arg2;
- (void)reconnect;
- (void)LogoutSuccess:(id)arg1;
- (void)LoginSuccess:(id)arg1;
- (void)networkDidChanged:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

