//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface CTFlightUtil : NSObject
{
}

+ (id)appendZero:(id)arg1;
+ (id)addImage:(id)arg1 toImage:(id)arg2 withRect:(struct CGRect)arg3;
+ (id)imageWithColorAndSize:(id)arg1 imageSize:(struct CGSize)arg2;
+ (id)getImageFromImage:(id)arg1 subImageRect:(struct CGRect)arg2;
+ (id)getFlightDisplayHourAndMinsStr:(id)arg1;
+ (_Bool)isSkyralWayRnExit;
+ (void)saveWhiteScreenUBT:(id)arg1 withURL:(id)arg2 withCostTime:(double)arg3;
+ (id)flightNotNilStr:(id)arg1;
+ (id)upRoundDate:(id)arg1 withMinutes:(float)arg2;
+ (void)executeOnMainThread:(CDUnknownBlockType)arg1;
+ (_Bool)isFileExitWithPathName:(id)arg1;
+ (id)scaledImageFrom3x:(id)arg1;
+ (id)flightImageNamed:(id)arg1;
+ (_Bool)isContainer:(id)arg1 in:(id)arg2 oper:(CDUnknownBlockType)arg3;
+ (id)getTimerStr;
+ (id)getPriceValueForDisplay:(long long)arg1;
+ (long long)numberOfMatchesInString:(id)arg1 match:(id)arg2;
+ (id)exchangeArgu:(id)arg1;
+ (id)getDocumentPath;
+ (void)attachSnapshotViewToWindow:(id)arg1 tag:(long long)arg2;
+ (long long)setupScrollView:(id)arg1 withYCoord:(long long)arg2 title:(id)arg3 content:(id)arg4 showSeparatorLine:(_Bool)arg5;
+ (id)getLastClassVC:(id)arg1 filterClass:(Class)arg2 isMember:(_Bool)arg3;
+ (void)currentIOS7FontMediumToBoldWithLabel:(id)arg1;
+ (void)makeEqualWidthViews:(id)arg1 inView:(id)arg2 LRpadding:(double)arg3 viewPadding:(double)arg4;
+ (id)getConfigString:(id)arg1;
+ (void)preloadHybridPage;
+ (void)jumpFlightBoardInquire:(id)arg1;
+ (_Bool)jumpToHybridBoardDetail:(id)arg1 queryDate:(id)arg2 flightNo:(id)arg3 dCode:(id)arg4 acode:(id)arg5;
+ (_Bool)jumpToHybridCheckin:(id)arg1;
+ (_Bool)jumpToHybridCheckin:(id)arg1 orderId:(long long)arg2;
+ (id)getLoginStatusParam;
+ (id)stringWithString:(id)arg1 fontSize:(long long)arg2 color:(id)arg3;
+ (double)getSystemScale;
+ (id)colorWithHexAlphaString:(id)arg1;
+ (id)colorWithHexString:(id)arg1 alpha:(double)arg2;
+ (id)convertMobileFromSysAddress:(id)arg1;
+ (id)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3 replacedStr:(id)arg4;
+ (id)formatPhoneNum:(id)arg1;
+ (struct CGRect)adjustRect:(struct CGRect)arg1;
+ (struct CGSize)adjustSize:(struct CGSize)arg1;
+ (struct CGSize)calStrSize:(id)arg1 withFont:(id)arg2;
+ (struct CGSize)calAttrStrSize:(id)arg1 font:(id)arg2 withSize:(struct CGSize)arg3;
+ (struct CGSize)calStrSize:(id)arg1 withFont:(id)arg2 withAttrs:(id)arg3 withSize:(struct CGSize)arg4;
+ (struct CGSize)calStrSize:(id)arg1 withFont:(id)arg2 withSize:(struct CGSize)arg3 withLineSpace:(float)arg4 withLineBreakMode:(long long)arg5;
+ (struct CGSize)calStrSize:(id)arg1 withFont:(id)arg2 withSize:(struct CGSize)arg3;
+ (id)adjustInquireCityName:(id)arg1;
+ (double)getFontHeightDiffWithFontRatio:(double)arg1 ratio:(double)arg2;
+ (void)setUpSubLabelsRatioWithView:(id)arg1;
+ (_Bool)isCityHasAirport:(id)arg1;
+ (void)zoomFontSizeForView:(id)arg1;
+ (void)zoomFontSizeForLabels2:(id)arg1;
+ (void)zoomFontSizeForLabels:(id)arg1;
+ (double)getDeviceZoomFontSize:(double)arg1;
+ (double)getDeviceZoomRatio;
+ (id)boldLanTingFontWithSize:(double)arg1;
+ (id)lanTingFontWithSize:(double)arg1;
+ (id)getDateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6 timezone:(id)arg7;
+ (id)formatDateString:(id)arg1;
+ (long long)daysBetweenDate:(id)arg1 endDate:(id)arg2;
+ (int)getMonth:(id)arg1 timezone:(id)arg2;
+ (int)getYear:(id)arg1 timezone:(id)arg2;
+ (id)getCalendarWithTimezone:(id)arg1;
+ (id)getCalendarStrBySimpleDateFormat:(id)arg1 simpleDateFormatType:(int)arg2 timezone:(id)arg3;
+ (id)getCurrentDate:(id)arg1;
+ (id)dateFormateWithDate:(id)arg1 formate:(id)arg2 timezone:(id)arg3;
+ (id)stringOfDate:(id)arg1 dateFormat:(id)arg2 timezone:(id)arg3;
+ (id)dateFromString:(id)arg1 formate:(id)arg2 timezone:(id)arg3;
+ (id)getValidDate:(id)arg1 timezone:(id)arg2;
+ (id)getDateByDateStr:(id)arg1 timezone:(id)arg2;
+ (id)getVCByVCClassType:(Class)arg1;
+ (id)getLastServiceRootViewController;
+ (id)formatURLParamFromDict:(id)arg1;
+ (id)getHybridRequestHeader;

@end

