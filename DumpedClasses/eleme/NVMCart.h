//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface NVMCart : NSObject
{
}

+ (void)postFoodsChangedNotificationWithFoodID:(id)arg1 skuID:(id)arg2 restaurantID:(id)arg3;
+ (id)foodsToCheckoutForRestaurant:(id)arg1;
+ (void)syncFoodsInCartWithCartSpecFood:(id)arg1 restaurantID:(id)arg2 foodChangeHandler:(CDUnknownBlockType)arg3;
+ (_Bool)allNoneEssentialFoodInCartForRestaurant:(id)arg1;
+ (_Bool)containEssentialFoodInCartForRestaurant:(id)arg1;
+ (double)boxesFeeOfFoodsInCartForRestaurant:(id)arg1;
+ (double)foodsPromotionPriceInCartForRestaurantID:(id)arg1;
+ (void)makePromotionPriceCalculateWithRestaurantID:(id)arg1;
+ (double)foodsPriceInCartForRestaurant:(id)arg1;
+ (unsigned long long)quantityOfFoodInRestaurant:(id)arg1;
+ (unsigned long long)quantityOfFood:(id)arg1 skuID:(id)arg2 attributes:(id)arg3 inRestaurant:(id)arg4;
+ (id)calculatedFoodsInCartForRestaurantID:(id)arg1;
+ (id)foodsInCartForRestaurant:(id)arg1;
+ (void)unifiedUpdateFood:(id)arg1 withQuantity:(long long)arg2 forRestaurantID:(id)arg3;
+ (void)batchedUpdateForRestaurant:(id)arg1 withAction:(CDUnknownBlockType)arg2;
+ (void)recalculateFoodsIncartForRestaurant:(id)arg1;
+ (void)clearMultiFoods:(id)arg1 forRestaurant:(id)arg2;
+ (void)clearFoodsInCartForRestaurant:(id)arg1;
+ (void)clearFood:(id)arg1 skuID:(id)arg2 inRestaurant:(id)arg3;
+ (void)decreaseFood:(id)arg1 skuID:(id)arg2 attributes:(id)arg3 inRestaurant:(id)arg4;
+ (void)decreaseFood:(id)arg1 skuID:(id)arg2 foodAttributes:(id)arg3 withDecrement:(unsigned long long)arg4 inRestaurant:(id)arg5;
+ (_Bool)canAddFoodToCart:(id)arg1;
+ (void)addBookingFood:(id)arg1 withIncrement:(unsigned long long)arg2;
+ (void)updateFood:(id)arg1 withChanges:(long long)arg2;
+ (id)foodWithQuantityForFood:(id)arg1 skuID:(id)arg2 attributes:(id)arg3 inRestaurant:(id)arg4;
+ (void)clearFoodWithQuantity:(id)arg1;
+ (void)addFoodWithQuantity:(id)arg1;
+ (_Bool)hasAnyFoodInRetailCart;
+ (_Bool)hasAnyFoodInCart;
+ (void)invalidateEmptyRestaurants;
+ (unsigned long long)maxRestaurantsAllowToBeAdded;
+ (id)restaurantsForRetailCart:(_Bool)arg1;
+ (id)combinedRestaurantsInCart;
+ (id)restaurantsInNewRetailCart;
+ (id)restaurantsInCart;
+ (id)calculatingFoodsInCacheForRestarant:(id)arg1;
+ (void)setCalculatingCacheWithFoods:(id)arg1 forRestaurant:(id)arg2;
+ (void)setFoodWithQuantitys:(id)arg1 forRestaurant:(id)arg2;
+ (id)foodWithQuantitysInCartForRestaurant:(id)arg1;
+ (id)cartStorage;
+ (void)initialize;

@end

